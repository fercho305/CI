<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/25/2018 4:56:10 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SERGIOW7"
  DTS:CreatorName="TELYNET\Sergio Iñigo"
  DTS:DTSID="{46324866-324D-4F51-B058-1ED6399F4309}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="14.0.3002.101"
  DTS:LocaleID="3082"
  DTS:ObjectName="ImportMaster"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="508"
  DTS:VersionGUID="{384E1368-46CC-46B7-B889-651E4D69153D}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[BaseProyecto]"
      DTS:CreationName="ADO.NET:SQL"
      DTS:DTSID="{BA0F9076-3EB8-417A-A08F-6858EA1D747E}"
      DTS:ObjectName="BaseProyecto">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=IBVM06WSQL;User ID=SisTelynet;Initial Catalog=STDB_Induban;Persist Security Info=True;Connect Timeout=30;Application Name=SSIS-ImportMaster-{BA0F9076-3EB8-417A-A08F-6858EA1D747E}BaseProyecto;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="7EADSeV1ww=="
            IV="rHwQgmOwM3U=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>rHwQgmOwM3XPPgznEaXnxZusE2B5xHS0b9vq7qsrvcgcootFZOb+uG7pNRjEZHwu7XWpo+Z2I2E54+iUPQaJiLRNQ45cpLhlm88blwWPWbR4oeZseEv0Jh7kwTDhzGXyAXqvZZi2P+7nLGOXSGUzpGo8+ZKNyti5e0wQEATs5ZWkkkLqJ3oFAg==</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CRM_Proyecto]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{c558dd77-0121-4472-a896-c787afc5e86b}"
      DTS:ObjectName="CRM_Proyecto">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=IBVM06WSQL;User ID=SisTelynet;Initial Catalog=Telynet;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package-{C37EE04D-F2D3-4126-AA52-6A7C5BE532EA}SERGIOW7\MSQL2008.crm3_mercasid;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="DbBpr4QL1A=="
            IV="PheiK93NNMs=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>PheiK93NNMu0tYUoketrEP4S1kJnAv0EuEwCrRfCAgPXUoAcqIzuxqwPIe0VsaelqesjmUwgeQVYqzqAdCe/BJHr5kWkiaXKfsIUOao7tRmfPvJvMbkHfJNRrGBasA3ynUl9TQeJV1jm0iMQqXy3NXll2aD4U6OZCwv+oQpkWEDlWid4Es877A==</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{4834a7c2-9155-4c3d-8125-e377de6347ce}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=1.0.1.0;UseWindowsAuthentication=True;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="TipoCargaT"
      DTS:ConfigurationVariable="\Package.Variables[User::TipoCarga].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{909023DA-85CE-4F29-8EED-850D4CB55EC9}"
      DTS:ObjectName="TipodeCarga" />
    <DTS:Configuration
      DTS:ConfigurationString="ReindexarT"
      DTS:ConfigurationVariable="\Package.Variables[User::Reindexar].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{05916483-53FE-4C5C-89C0-E0839F1700D5}"
      DTS:ObjectName="Reindexacion" />
    <DTS:Configuration
      DTS:ConfigurationString="CargaDeutaT"
      DTS:ConfigurationVariable="\Package.Variables[User::CargaDeuda].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{B7C1E825-B866-427A-BC72-6312B24ACBEF}"
      DTS:ObjectName="CargadeDeuda" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{61C08970-B93C-4C65-BE88-38842CF32239}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CargaDeuda">
      <DTS:VariableValue
        DTS:DataType="8">I</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E4302F5D-FF39-4FF2-87D8-7E6FD83BF888}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Reindexar">
      <DTS:VariableValue
        DTS:DataType="8">Y</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC073CC3-5901-49EC-A8F5-F2C309750614}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TipoCarga">
      <DTS:VariableValue
        DTS:DataType="8">M</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\accounts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts"
      DTS:DTSID="{a8b7559a-06b0-4646-8fda-5442a3d9fbfb}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO accounts (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code,  Code_ofClient, Name1, Name2, NIF, Code_Country, &#xA;                      Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Phone1, Phone2, Fax, Web, E_mail, Code_Type, &#xA;                      Code_Potential, Potential, Code_Status, Code_Agrupation1, Code_Agrupation2, Code_Agrupation3, Code_Agrupation4, Code_Agrupation5, Code_Hierarchy1, &#xA;                      Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, &#xA;                      Code_Seller, Code_Team, Date_New, Date_Drop, Cause_Drop, Blocked, Latitude, Length, Code_ERP, Observations, Transfered, Language_tr, Validated, &#xA;                      House_nr)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by Code_ofClient) + 100000 as varchar(8)) as Code,  Code_ofClient, Name1, Name2, NIF, Code_Country, &#xA;                      Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Phone1, Phone2, Fax, Web, E_mail, Code_Type, &#xA;                      Code_Potential, Potential, Code_Status, Code_Agrupation1, Code_Agrupation2, Code_Agrupation3, Code_Agrupation4, Code_Agrupation5, Code_Hierarchy1, &#xA;                      Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, &#xA;                      Code_Seller, Code_Team, Date_New, Date_Drop, Cause_Drop, Blocked, Latitude, Length, Code_ERP, Observations, '1' as Transfered, Language_tr, Validated, &#xA;                      House_nr&#xA;FROM        ERP_IMPLT_accounts CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient from accounts where Code_ofClient = ERP_IMPLT_accounts.Code_ofClient)&#xA;GO&#xA;&#xA;-- Modificación&#xA;-- Los campos de coordenadas están comentados porque normalmente se gestionan en Hydra. Si se van a recibir descomentar las líneas&#xA;UPDATE accounts SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Name1 = MOD.Name1, Name2 = MOD.Name2, NIF = MOD.NIF, Code_Country = MOD.Code_Country, Code_Region = MOD.Code_Region, Code_Province = MOD.Code_Province, &#xA;&#x9;&#x9;Code_Population = MOD.Code_Population, ZIP = MOD.ZIP, Address1 = MOD.Address1, Address2 = MOD.Address2, Province = MOD.Province, Population = MOD.Population, &#xA;&#x9;&#x9;Hamlet = MOD.Hamlet, Phone1 = MOD.Phone1, Phone2 = MOD.Phone2, Fax = MOD.Fax, Web = MOD.Web, E_mail = MOD.E_mail, Code_Type = MOD.Code_Type, &#xA;        Code_Potential = MOD.Code_Potential, Potential = MOD.Potential, Code_Status = MOD.Code_Status, Code_Agrupation1 = MOD.Code_Agrupation1, &#xA;&#x9;&#x9;Code_Agrupation2 = MOD.Code_Agrupation2, Code_Agrupation3 = MOD.Code_Agrupation3, Code_Agrupation4 = MOD.Code_Agrupation4, &#xA;&#x9;&#x9;Code_Agrupation5 = MOD.Code_Agrupation5, Code_Hierarchy1 = MOD.Code_Hierarchy1, Code_Hierarchy2 = MOD.Code_Hierarchy2, Code_Hierarchy3 = MOD.Code_Hierarchy3, &#xA;&#x9;&#x9;Hierarchy_Table = MOD.Hierarchy_Table, TextLastHierarchy = MOD.TextLastHierarchy, Code_ClassificationA = MOD.Code_ClassificationA, &#xA;&#x9;&#x9;Code_ClassificationB = MOD.Code_ClassificationB, Code_ClassificationC = MOD.Code_ClassificationC, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;        Code_Seller = MOD.Code_Seller, Code_Team = MOD.Code_Team, Date_New = MOD.Date_New, Date_Drop = MOD.Date_Drop, Cause_Drop = MOD.Cause_Drop, &#xA;&#x9;&#x9;Blocked = MOD.Blocked, Code_ERP = MOD.Code_ERP, Observations = MOD.Observations, Language_tr = MOD.Language_tr, &#xA;&#x9;&#x9;Validated = MOD.Validated, House_nr = MOD.House_nr&#xA;&#x9;&#x9;-- , Latitude = MOD.Latitude, Length = MOD.Length&#xA;FROM&#xA;(SELECT   Code_ofClient, Name1, Name2, NIF, Code_Country, &#xA;                      Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Phone1, Phone2, Fax, Web, E_mail, Code_Type, &#xA;                      Code_Potential, Potential, Code_Status, Code_Agrupation1, Code_Agrupation2, Code_Agrupation3, Code_Agrupation4, Code_Agrupation5, Code_Hierarchy1, &#xA;                      Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, &#xA;                      Code_Seller, Code_Team, Date_New, Date_Drop, Cause_Drop, Blocked, Code_ERP, Observations, Language_tr, Validated, &#xA;                      House_nr&#xA;&#x9;&#x9;&#x9;-- , Latitude, Length&#xA;FROM       ERP_IMPLT_accounts &#xA;EXCEPT&#xA;SELECT     Code_ofClient, Name1, Name2, NIF, Code_Country, &#xA;                      Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Phone1, Phone2, Fax, Web, E_mail, Code_Type, &#xA;                      Code_Potential, Potential, Code_Status, Code_Agrupation1, Code_Agrupation2, Code_Agrupation3, Code_Agrupation4, Code_Agrupation5, Code_Hierarchy1, &#xA;                      Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, &#xA;                      Code_Seller, Code_Team, Date_New, Date_Drop, Cause_Drop, Blocked, Code_ERP, Observations, Language_tr, Validated, &#xA;                      House_nr&#xA;&#x9;&#x9;&#x9;-- , Latitude, Length&#xA;FROM         accounts) as MOD INNER JOIN accounts ON MOD.Code_ofClient = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_accounts where Code_ofClient = accounts.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_accounts where Code_ofClient = accounts.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_accounts (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, SearchTerm1, Code_Frecuency, NVisits, Cluster, &#xA;                      Code_Plant, Allow_Order, Name3, Name4, SearchTerm2, Address3, Address4, Building_Code, POBox, Route, Code_Currency, Prospect, Is_New, Transfered, IBAN, &#xA;                      Qr_customer, Code_Com_Sector, Collaborator, Equivalence_Surcharge, Generic_Cust, Code_Warehouse)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code, SearchTerm1, Code_Frecuency, NVisits, Cluster, Code_Plant, Allow_Order, Name3, Name4, SearchTerm2, Address3, Address4, Building_Code, POBox, &#xA;&#x9;Route, Code_Currency, Prospect, Is_New, '1' as Transfered, IBAN, Qr_customer, Code_Com_Sector, Collaborator, Equivalence_Surcharge, Generic_Cust, &#xA;&#x9;warehouses.Code as Code_Warehouse&#xA;FROM   ERP_IMPLT_accounts inner join accounts on ERP_IMPLT_accounts.Code_ofClient = accounts.Code_ofClient &#xA;left join warehouses on ERP_IMPLT_accounts.Code_Warehouse = Warehouses.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from prj_accounts where Code = accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;SearchTerm1 = MOD.SearchTerm1, Code_Frecuency = MOD.Code_Frecuency, NVisits = MOD.NVisits, Cluster = MOD.Cluster, Code_Plant = MOD.Code_Plant, &#xA;&#x9;&#x9;Allow_Order = MOD.Allow_Order, Name3 = MOD.Name3, Name4 = MOD.Name4, SearchTerm2 = MOD.SearchTerm2, Address3 = MOD.Address3, Address4 = MOD.Address4, &#xA;&#x9;&#x9;Building_Code = MOD.Building_Code, POBox = MOD.POBox, Route = MOD.Route, Code_Currency = MOD.Code_Currency, Prospect = MOD.Prospect, Is_New = MOD.Is_New, &#xA;&#x9;&#x9;IBAN = MOD.IBAN, Qr_customer = MOD.Qr_customer, Code_Com_Sector = MOD.Code_Com_Sector, Collaborator = MOD.Collaborator, &#xA;&#x9;&#x9;Equivalence_Surcharge = MOD.Equivalence_Surcharge, Generic_Cust = MOD.Generic_Cust, Code_Warehouse = MOD.Code_Warehouse&#xA;FROM&#xA;(SELECT  accounts.Code, SearchTerm1, Code_Frecuency, NVisits, Cluster, Code_Plant, Allow_Order, Name3, Name4, SearchTerm2, Address3, Address4, Building_Code, POBox, &#xA;&#x9;Route, Code_Currency, Prospect, Is_New, IBAN, Qr_customer, Code_Com_Sector, Collaborator, Equivalence_Surcharge, Generic_Cust, &#xA;&#x9;warehouses.Code as Code_Warehouse&#xA;FROM       ERP_IMPLT_accounts inner join accounts on ERP_IMPLT_accounts.Code_ofClient = accounts.Code_ofClient &#xA;left join warehouses on ERP_IMPLT_accounts.Code_Warehouse = Warehouses.Code_ofClient &#xA;EXCEPT&#xA;SELECT     Code, SearchTerm1, Code_Frecuency, NVisits, Cluster, &#xA;                      Code_Plant, Allow_Order, Name3, Name4, SearchTerm2, Address3, Address4, Building_Code, POBox, Route, Code_Currency, Prospect, Is_New, IBAN, &#xA;                      Qr_customer, Code_Com_Sector, Collaborator, Equivalence_Surcharge, Generic_Cust, Code_Warehouse&#xA;FROM         prj_accounts) as MOD INNER JOIN prj_accounts ON MOD.Code = prj_accounts.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT accounts.Code FROM ERP_IMPLT_accounts inner join accounts on ERP_IMPLT_accounts.Code_ofClient = accounts.Code_ofClient&#xA;where accounts.Code = prj_accounts.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_accounts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT accounts.Code FROM ERP_IMPLT_accounts inner join accounts on ERP_IMPLT_accounts.Code_ofClient = accounts.Code_ofClient&#xA;where accounts.Code = prj_accounts.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts CI"
      DTS:DTSID="{7e0d4e79-fea4-459a-af13-307526ad226c}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="48">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;UPDATE accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_accounts where Code_ofClient = accounts.Code_ofClient) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;UPDATE prj_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT accounts.Code FROM ERP_IMPLT_accounts inner join accounts on ERP_IMPLT_accounts.Code_ofClient = accounts.Code_ofClient&#xA;where accounts.Code = prj_accounts.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_addresses"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_addresses"
      DTS:DTSID="{ebe9936a-4083-476e-afa1-b2011ccb147d}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_addresses"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO accounts_addresses (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Address, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Account, Code_Type, By_Default, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;addresses.Code as Code_Address, ERP_IMPLT_accounts_addresses.Code_Unit_Org, ERP_IMPLT_accounts_addresses.Code_Sales_Org, accounts.Code as Code_Account, &#xA;&#x9;ERP_IMPLT_accounts_addresses.Code_Type, ERP_IMPLT_accounts_addresses.By_Default, '1' as Transfered&#xA;FROM        ERP_IMPLT_accounts_addresses inner join addresses on ERP_IMPLT_accounts_addresses.Code_Address = addresses.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_accounts_addresses.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Account from accounts_addresses where Code_Address = addresses.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_addresses.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_addresses.Code_Sales_Org and Code_Account = accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_addresses SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Type = MOD.Code_Type, By_Default = MOD.By_Default&#xA;FROM&#xA;(SELECT addresses.Code as Code_Address, ERP_IMPLT_accounts_addresses.Code_Unit_Org, ERP_IMPLT_accounts_addresses.Code_Sales_Org, accounts.Code as Code_Account, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_addresses.Code_Type, ERP_IMPLT_accounts_addresses.By_Default&#xA;&#x9; FROM        ERP_IMPLT_accounts_addresses inner join addresses on ERP_IMPLT_accounts_addresses.Code_Address = addresses.Code_ofClient &#xA;&#x9; inner join accounts on ERP_IMPLT_accounts_addresses.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Account, Code_Type, By_Default&#xA;FROM accounts_addresses) as MOD INNER JOIN accounts_addresses ON MOD.Code_Address = accounts_addresses.Code_Address and MOD.Code_Unit_Org = accounts_addresses.Code_Unit_Org &#xA;and MOD.Code_Sales_Org = accounts_addresses.Code_Sales_Org and MOD.Code_Account = accounts_addresses.Code_Account CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_addresses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_addresses.Code_Address FROM ERP_IMPLT_accounts_addresses inner join addresses on ERP_IMPLT_accounts_addresses.Code_Address = addresses.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_accounts_addresses.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = accounts_addresses.Code_Address and ERP_IMPLT_accounts_addresses.Code_Unit_Org = accounts_addresses.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_addresses.Code_Sales_Org = accounts_addresses.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = accounts_addresses.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_addresses SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_addresses.Code_Address FROM ERP_IMPLT_accounts_addresses inner join addresses on ERP_IMPLT_accounts_addresses.Code_Address = addresses.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_accounts_addresses.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = accounts_addresses.Code_Address and ERP_IMPLT_accounts_addresses.Code_Unit_Org = accounts_addresses.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_addresses.Code_Sales_Org = accounts_addresses.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = accounts_addresses.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_addresses CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_addresses CI"
      DTS:DTSID="{845188b3-bd2c-4149-a92b-542b7766ba80}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_addresses CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="49">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_addresses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_addresses.Code_Address FROM ERP_IMPLT_accounts_addresses inner join addresses on ERP_IMPLT_accounts_addresses.Code_Address = addresses.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_accounts_addresses.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = accounts_addresses.Code_Address and ERP_IMPLT_accounts_addresses.Code_Unit_Org = accounts_addresses.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_addresses.Code_Sales_Org = accounts_addresses.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = accounts_addresses.Code_Account) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation1"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation1"
      DTS:DTSID="{D4A85A6B-BB9E-460D-9E2F-7E17B3734B92}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_accounts_agrupation1 (Code, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Agrupation1 as Code, Code_Agrupation1 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation1 where code = ERP_IMPLT_accounts.Code_Agrupation1) &#xA;and not exists (SELECT Code FROM accounts_agrupation1 where code = ERP_IMPLT_accounts.Code_Agrupation1) and Code_Agrupation1 is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO accounts_agrupation1 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_accounts_agrupation1 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM accounts_agrupation1 where Code = ERP_IMPLT_accounts_agrupation1.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_agrupation1 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Description&#xA;FROM         ERP_IMPLT_accounts_agrupation1&#xA;EXCEPT&#xA;SELECT     Code, Description&#xA;FROM         accounts_agrupation1) as MOD INNER JOIN accounts_agrupation1 ON MOD.Code = accounts_agrupation1.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_agrupation1 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation1 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation1 where Code = accounts_agrupation1.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_agrupation1 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_agrupation1 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation1 where Code = accounts_agrupation1.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation1 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation1 CI"
      DTS:DTSID="{ec8ddc28-62f4-49b8-9baa-e4fc049d6566}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation1 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="50">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_agrupation1 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation1 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation1 where Code = accounts_agrupation1.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation2"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation2"
      DTS:DTSID="{a2e95bed-4ffc-4729-b607-ff2aec953d64}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_accounts_agrupation2 (Code, Code_Agrupation1, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Agrupation2 as Code, Code_Agrupation1, Code_Agrupation2 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation2 where code = ERP_IMPLT_accounts.Code_Agrupation2 and Code_Agrupation1 = ERP_IMPLT_accounts.Code_Agrupation1) &#xA;and not exists (SELECT Code FROM accounts_agrupation2 where code = ERP_IMPLT_accounts.Code_Agrupation2 and Code_Agrupation1 = ERP_IMPLT_accounts.Code_Agrupation1) and Code_Agrupation2 is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO accounts_agrupation2 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_Agrupation1, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_Agrupation1, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_accounts_agrupation2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM accounts_agrupation2 where Code = ERP_IMPLT_accounts_agrupation2.Code and Code_Agrupation1 = ERP_IMPLT_accounts_agrupation2.Code_Agrupation1)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_agrupation2 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_Agrupation1, Description&#xA;FROM         ERP_IMPLT_accounts_agrupation2&#xA;EXCEPT&#xA;SELECT     Code, Code_Agrupation1, Description&#xA;FROM         accounts_agrupation2) as MOD INNER JOIN accounts_agrupation2 ON MOD.Code = accounts_agrupation2.Code and MOD.Code_Agrupation1 = accounts_agrupation2.Code_Agrupation1 CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_agrupation2 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation2 where Code = accounts_agrupation2.Code and Code_Agrupation1 = accounts_agrupation2.Code_Agrupation1 and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_agrupation2 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_agrupation2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation2 where Code = accounts_agrupation2.Code and Code_Agrupation1 = accounts_agrupation2.Code_Agrupation1 and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation2 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation2 CI"
      DTS:DTSID="{c9463c48-9cf4-43e5-a8f3-76b3c376ed24}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation2 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_agrupation2 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation2 where Code = accounts_agrupation2.Code and Code_Agrupation1 = accounts_agrupation2.Code_Agrupation1) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation3"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation3"
      DTS:DTSID="{191e99b5-c198-488e-9186-cd9804248aa6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation3"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_accounts_agrupation3 (Code, Code_Agrupation1, Code_Agrupation2, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Agrupation3 as Code, Code_Agrupation1, Code_Agrupation2, Code_Agrupation3 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation3 where code = ERP_IMPLT_accounts.Code_Agrupation3 and Code_Agrupation1 = ERP_IMPLT_accounts.Code_Agrupation1 and Code_Agrupation2 = ERP_IMPLT_accounts.Code_Agrupation2) &#xA;and not exists (SELECT Code FROM accounts_agrupation3 where code = ERP_IMPLT_accounts.Code_Agrupation3 and Code_Agrupation1 = ERP_IMPLT_accounts.Code_Agrupation1 and Code_Agrupation2 = ERP_IMPLT_accounts.Code_Agrupation2) and Code_Agrupation3 is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO accounts_agrupation3 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_Agrupation1, Code_Agrupation2, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_Agrupation1, Code_Agrupation2, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_accounts_agrupation3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM accounts_agrupation3 where Code = ERP_IMPLT_accounts_agrupation3.Code and Code_Agrupation1 = ERP_IMPLT_accounts_agrupation3.Code_Agrupation1 and Code_Agrupation2 = ERP_IMPLT_accounts_agrupation3.Code_Agrupation2)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_agrupation3 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_Agrupation1, Code_Agrupation2, Description&#xA;FROM         ERP_IMPLT_accounts_agrupation3&#xA;EXCEPT&#xA;SELECT     Code, Code_Agrupation1, Code_Agrupation2, Description&#xA;FROM         accounts_agrupation3) as MOD INNER JOIN accounts_agrupation3 ON MOD.Code = accounts_agrupation3.Code and MOD.Code_Agrupation1 = accounts_agrupation3.Code_Agrupation1 and MOD.Code_Agrupation2 = accounts_agrupation3.Code_Agrupation2 CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_agrupation3 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation3 where Code = accounts_agrupation3.Code and Code_Agrupation1 = accounts_agrupation3.Code_Agrupation1 and Code_Agrupation2 = accounts_agrupation3.Code_Agrupation2 and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_agrupation3 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_agrupation3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation3 where Code = accounts_agrupation3.Code and Code_Agrupation1 = accounts_agrupation3.Code_Agrupation1 and Code_Agrupation2 = accounts_agrupation3.Code_Agrupation2 and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation3 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation3 CI"
      DTS:DTSID="{9829a61c-774c-472a-b438-ffb1453c5fbd}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation3 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="6">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_agrupation3 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation3 where Code = accounts_agrupation3.Code and Code_agrupation1 = accounts_agrupation3.Code_agrupation1 and Code_agrupation2 = accounts_agrupation3.Code_Agrupation2) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_array"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_array"
      DTS:DTSID="{e916bdda-4ad7-47d3-86a4-7bd416efb774}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_array"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_accounts_array (Code, Type, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_ClassificationA as Code, 1 as Type, Code_ClassificationA as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationA and Type = '1') &#xA;and not exists (SELECT Code FROM accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationA and Type = '1') and Code_ClassificationA is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationB as Code, 2 as Type, Code_ClassificationB as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationB and Type = '2') &#xA;and not exists (SELECT Code FROM accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationB and Type = '2') and Code_ClassificationB is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationC as Code, 3 as Type, Code_ClassificationC as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationC and Type = '3') &#xA;and not exists (SELECT Code FROM accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationC and Type = '3') and Code_ClassificationC is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationD as Code, 4 as Type, Code_ClassificationD as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationD and Type = '4') &#xA;and not exists (SELECT Code FROM accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationD and Type = '4') and Code_ClassificationD is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO accounts_array (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Type, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Type, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_accounts_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM accounts_array where Code = ERP_IMPLT_accounts_array.Code and Type = ERP_IMPLT_accounts_array.Type)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_array SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Type, Description&#xA;FROM         ERP_IMPLT_accounts_array&#xA;EXCEPT&#xA;SELECT     Code, Type, Description&#xA;FROM         accounts_array) as MOD INNER JOIN accounts_array ON MOD.Code = accounts_array.Code and MOD.Type = accounts_array.Type CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_accounts_array where Code = accounts_array.Code and Type = accounts_array.Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_array SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_accounts_array where Code = accounts_array.Code and Type = accounts_array.Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_array CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_array CI"
      DTS:DTSID="{59dc1cfd-ba73-46bb-880e-db6ea63b43f4}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_array CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="17">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_accounts_array where Code = accounts_array.Code and Type = accounts_array.Type) &#xA;and type not in (5,6,19,24,25,30,31)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_function"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_function"
      DTS:DTSID="{63984352-9697-4f0f-ae24-e43e2a483f60}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_function"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO accounts_function (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                       Code_Function, Code_Type_Function, By_Default, ValidFrom, ValidTo, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_function.Code_Unit_Org, ERP_IMPLT_accounts_function.Code_Sales_Org, accounts_1.Code as Code_Function, &#xA;&#x9;Code_Type_Function, '0' as By_Default, '20180101' as ValidFrom, '20991231' as ValidTo, '1' as Transfered&#xA;FROM        ERP_IMPLT_accounts_function inner join accounts on ERP_IMPLT_accounts_function.Code_Account = accounts.Code_ofClient &#xA;inner join accounts as accounts_1 on ERP_IMPLT_accounts_function.Code_Function = accounts_1.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Function, Code_Type_Function from accounts_function where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_function.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_function.Code_Sales_Org and Code_Function = accounts_1.Code&#xA;and Code_Type_Function = ERP_IMPLT_accounts_function.Code_Type_Function)&#xA;GO&#xA;&#xA;-- Modificación (No hay ya que los campos que recibimos forman parte de la clave y el resto son constantes&#xA;&#xA;-- Baja&#xA;UPDATE accounts_function SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_function CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_function.Code_Account FROM ERP_IMPLT_accounts_function inner join accounts on ERP_IMPLT_accounts_function.Code_Account = accounts.Code_ofClient&#xA;        inner join accounts as accounts_1 on ERP_IMPLT_accounts_function.Code_Function = accounts_1.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_function.Code_Account and ERP_IMPLT_accounts_function.Code_Unit_Org = accounts_function.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_function.Code_Sales_Org = accounts_function.Code_Sales_Org &#xA;&#x9;&#x9;and accounts_1.Code = accounts_function.Code_Function and ERP_IMPLT_accounts_function.Code_Type_Function = accounts_function.Code_Type_Function and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_function SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_function CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_function.Code_Account FROM ERP_IMPLT_accounts_function inner join accounts on ERP_IMPLT_accounts_function.Code_Account = accounts.Code_ofClient&#xA;        inner join accounts as accounts_1 on ERP_IMPLT_accounts_function.Code_Function = accounts_1.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_function.Code_Account and ERP_IMPLT_accounts_function.Code_Unit_Org = accounts_function.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_function.Code_Sales_Org = accounts_function.Code_Sales_Org &#xA;&#x9;&#x9;and accounts_1.Code = accounts_function.Code_Function and ERP_IMPLT_accounts_function.Code_Type_Function = accounts_function.Code_Type_Function and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- No rellenamos la EXTENDIDA porque para este tipo de proyectos no se gestiona" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_function CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_function CI"
      DTS:DTSID="{8b7003ce-5ba8-4de0-b5c4-14b3a55c0865}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_function CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="52">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_function SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_function CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_function.Code_Account FROM ERP_IMPLT_accounts_function inner join accounts on ERP_IMPLT_accounts_function.Code_Account = accounts.Code_ofClient&#xA;        inner join accounts as accounts_1 on ERP_IMPLT_accounts_function.Code_Function = accounts_1.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_function.Code_Account and ERP_IMPLT_accounts_function.Code_Unit_Org = accounts_function.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_function.Code_Sales_Org = accounts_function.Code_Sales_Org &#xA;&#x9;&#x9;and accounts_1.Code = accounts_function.Code_Function and ERP_IMPLT_accounts_function.Code_Type_Function = accounts_function.Code_Type_Function) &#xA;GO&#xA;&#xA;-- No rellenamos la EXTENDIDA porque para este tipo de proyectos no se gestiona" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_function CI 1"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_function CI"
      DTS:DTSID="{ca1a6d9f-9429-4e4e-9637-f18862ca0bd9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_function CI 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="53">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_accounts_credit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_credit.Code_Account FROM ERP_IMPLT_accounts_credit inner join accounts on ERP_IMPLT_accounts_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_credit.Code_Account) &#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_org"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_org"
      DTS:DTSID="{69b47079-a61a-432c-bf7e-b76824ac168b}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_org"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO accounts_org (Create_User, Create_Date, Modify_User, Modify_Date, &#xA;Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Potential, Potential, Code_Status, Code_Hierarchy1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_ClassificationC, &#xA;                      Code_ClassificationD, Code_Team, Blocked, Transfered, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_ClassificationA, Code_ClassificationB, Code_Frecuency_V, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Week_V, Visit_Mon, Visit_Tue, &#xA;                      Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, Visit_Mon_Order, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Visit_Sat_Order, &#xA;                      Visit_Sun_Order, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, Dely_Mon_Order, Dely_Tue_Order, &#xA;                      Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Dely_Sun_Order, Client_Group)&#xA;SELECT distinct &#xA;View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_org.Code_Unit_Org, ERP_IMPLT_accounts_org.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_accounts_org.Code_Potential, ERP_IMPLT_accounts_org.Potential, &#xA;&#x9;ERP_IMPLT_accounts_org.Code_Status, ERP_IMPLT_accounts_org.Code_Hierarchy1, &#xA;&#x9;ERP_IMPLT_accounts_org.Code_Hierarchy2, ERP_IMPLT_accounts_org.Code_Hierarchy3, &#xA;&#x9;ERP_IMPLT_accounts_org.Hierarchy_Table, ERP_IMPLT_accounts_org.TextLastHierarchy, &#xA;&#x9;ERP_IMPLT_accounts_org.Code_ClassificationC, &#xA;    ERP_IMPLT_accounts_org.Code_ClassificationD, ERP_IMPLT_accounts_org.Code_Team, ERP_IMPLT_accounts_org.Blocked, &#xA;&#x9;'1' as Transfered, ERP_IMPLT_accounts_org.Code_ClassificationA, ERP_IMPLT_accounts_org.Code_ClassificationB, &#xA;&#x9;Code_Frecuency_V, Code_Week_V, Visit_Mon, Visit_Tue, &#xA;    Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, &#xA;&#x9;Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, Visit_Sat_Order, &#xA;    Visit_Sun_Order, &#xA;&#x9;Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, &#xA;&#x9;Dely_Mon_Order, Dely_Tue_Order, &#xA;    Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, Dely_Sun_Order,&#xA;&#x9;Client_Group&#xA;FROM        ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org from accounts_org where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_org.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_org.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_org SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Potential = MOD.Code_Potential, Potential = MOD.Potential, Code_Status = MOD.Code_Status, Code_Hierarchy1 = MOD.Code_Hierarchy1, &#xA;&#x9;&#x9;Code_Hierarchy2 = MOD.Code_Hierarchy2, Code_Hierarchy3 = MOD.Code_Hierarchy3, Hierarchy_Table = MOD.Hierarchy_Table, &#xA;&#x9;&#x9;TextLastHierarchy = MOD.TextLastHierarchy, Code_ClassificationC = MOD.Code_ClassificationC, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_Team = MOD.Code_Team, Blocked = MOD.Blocked, Transfered = MOD.Transfered, Code_ClassificationA = MOD.Code_ClassificationA, &#xA;&#x9;&#x9;Code_ClassificationB = MOD.Code_ClassificationB, Code_Frecuency_V = MOD.Code_Frecuency_V, Code_Week_V = MOD.Code_Week_V, Visit_Mon = MOD.Visit_Mon, &#xA;&#x9;&#x9;Visit_Tue = MOD.Visit_Tue, Visit_Wen = MOD.Visit_Wen, Visit_Thu = MOD.Visit_Thu, Visit_Fri = MOD.Visit_Fri, Visit_Sat = MOD.Visit_Sat, Visit_Sun = MOD.Visit_Sun, &#xA;&#x9;&#x9;Visit_Mon_Order = MOD.Visit_Mon_Order, Visit_Tue_Order = MOD.Visit_Tue_Order, Visit_Wen_Order = MOD.Visit_Wen_Order, Visit_Thu_Order = MOD.Visit_Thu_Order, &#xA;&#x9;&#x9;Visit_Fri_Order = MOD.Visit_Fri_Order, Visit_Sat_Order = MOD.Visit_Sat_Order, Visit_Sun_Order = MOD.Visit_Sun_Order, Code_Frecuency_D = MOD.Code_Frecuency_D, &#xA;&#x9;&#x9;Code_Week_D = MOD.Code_Week_D, Dely_Mon = MOD.Dely_Mon, Dely_Tue = MOD.Dely_Tue, Dely_Wen = MOD.Dely_Wen, Dely_Thu = MOD.Dely_Thu, Dely_Fri = MOD.Dely_Fri, &#xA;&#x9;&#x9;Dely_Sat = MOD.Dely_Sat, Dely_Sun = MOD.Dely_Sun, Dely_Mon_Order = MOD.Dely_Mon_Order, Dely_Tue_Order = MOD.Dely_Tue_Order, Dely_Wen_Order = MOD.Dely_Wen_Order, &#xA;&#x9;&#x9;Dely_Thu_Order = MOD.Dely_Thu_Order, Dely_Fri_Order = MOD.Dely_Fri_Order, Dely_Sat_Order = MOD.Dely_Sat_Order, Dely_Sun_Order = MOD.Dely_Sun_Order, Client_Group = MOD.Client_Group&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_accounts_org.Code_Unit_Org, ERP_IMPLT_accounts_org.Code_Sales_Org, ERP_IMPLT_accounts_org.Code_Potential, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_org.Potential, ERP_IMPLT_accounts_org.Code_Status, ERP_IMPLT_accounts_org.Code_Hierarchy1, ERP_IMPLT_accounts_org.Code_Hierarchy2, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_org.Code_Hierarchy3, ERP_IMPLT_accounts_org.Hierarchy_Table, ERP_IMPLT_accounts_org.TextLastHierarchy, ERP_IMPLT_accounts_org.Code_ClassificationC, &#xA;        ERP_IMPLT_accounts_org.Code_ClassificationD, ERP_IMPLT_accounts_org.Code_Team, ERP_IMPLT_accounts_org.Blocked, '1' as Transfered, ERP_IMPLT_accounts_org.Code_ClassificationA, &#xA;        ERP_IMPLT_accounts_org.Code_ClassificationB, Code_Frecuency_V, Code_Week_V, Visit_Mon, Visit_Tue, &#xA;        Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, Visit_Sat_Order, &#xA;        Visit_Sun_Order, Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, Dely_Mon_Order, Dely_Tue_Order, &#xA;        Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, Dely_Sun_Order, Client_Group&#xA;     FROM   ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Potential, Potential, Code_Status, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationC, &#xA;                      Code_ClassificationD, Code_Team, Blocked, '1' as Transfered, Code_ClassificationA, Code_ClassificationB, Code_Frecuency_V, Code_Week_V, Visit_Mon, Visit_Tue, &#xA;                      Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, Visit_Sat_Order, &#xA;                      Visit_Sun_Order, Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, Dely_Mon_Order, Dely_Tue_Order, &#xA;                      Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, Dely_Sun_Order, Client_Group &#xA;FROM         accounts_org) as MOD INNER JOIN accounts_org ON MOD.Code_Account = accounts_org.Code_Account and MOD.Code_Unit_Org = accounts_org.Code_Unit_Org and MOD.Code_Sales_Org = accounts_org.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_org SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = accounts_org.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = accounts_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_org.Code_Sales_Org = accounts_org.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_org SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = accounts_org.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = accounts_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_org.Code_Sales_Org = accounts_org.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_accounts_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Payment, Code_Price_list, Code_Plant, Code_St_Bill, Code_St_Trans, Code_St_Del, Code_Currency, Sales_Office, Incoterms, Transfered, Code_Provider, &#xA;                      Code_Segment, Logistic, Code_Account_Provider, Number_Bank, Price_Schema, IBAN, Code_Com_Agent, Code_ClassificationE, Discount_Allowed, Document_Type, &#xA;                      Delivery_Note, IVA_Return, Observations, Notes, Code_Hierarchy4, Code_Hierarchy5, Valued, Code_Payment_method)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_org.Code_Unit_Org, ERP_IMPLT_accounts_org.Code_Sales_Org, Code_Payment, Code_Price_list, &#xA;&#x9;Code_Plant, Code_St_Bill, Code_St_Trans, Code_St_Del, Code_Currency, Sales_Office, Incoterms, '1' as Transfered, Code_Provider,  Code_Segment, &#xA;&#x9;Logistic, Code_Account_Provider, Number_Bank, Price_Schema, IBAN, Code_Com_Agent, Code_ClassificationE, Discount_Allowed, Document_Type, &#xA;    Delivery_Note, IVA_Return, ERP_IMPLT_accounts_org.Observations, Notes, Code_Hierarchy4, Code_Hierarchy5, Valued, Code_Payment_method&#xA;FROM        ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org from prj_accounts_organization where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_org.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_org.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Payment = MOD.Code_Payment, Code_Price_list = MOD.Code_Price_list, Code_Plant = MOD.Code_Plant, Code_St_Bill = MOD.Code_St_Bill, &#xA;&#x9;&#x9;Code_St_Trans = MOD.Code_St_Trans, Code_St_Del = MOD.Code_St_Del, Code_Currency = MOD.Code_Currency, Sales_Office = MOD.Sales_Office, &#xA;&#x9;&#x9;Incoterms = MOD.Incoterms, Transfered = MOD.Transfered, Code_Provider = MOD.Code_Provider, Code_Segment = MOD.Code_Segment, Logistic = MOD.Logistic, &#xA;&#x9;&#x9;Code_Account_Provider = MOD.Code_Account_Provider, Number_Bank = MOD.Number_Bank, Price_Schema = MOD.Price_Schema, IBAN = MOD.IBAN, &#xA;&#x9;&#x9;Code_Com_Agent = MOD.Code_Com_Agent, Code_ClassificationE = MOD.Code_ClassificationE, Discount_Allowed = MOD.Discount_Allowed, &#xA;&#x9;&#x9;Document_Type = MOD.Document_Type, Delivery_Note = MOD.Delivery_Note, IVA_Return = MOD.IVA_Return, Observations = MOD.Observations, Notes = MOD.Notes, &#xA;&#x9;&#x9;Code_Hierarchy4 = MOD.Code_Hierarchy4, Code_Hierarchy5 = MOD.Code_Hierarchy5, Valued = MOD.Valued, Code_Payment_method = MOD.Code_Payment_method&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_accounts_org.Code_Unit_Org, ERP_IMPLT_accounts_org.Code_Sales_Org, Code_Payment, Code_Price_list, &#xA;&#x9;   Code_Plant, Code_St_Bill, Code_St_Trans, Code_St_Del, Code_Currency, Sales_Office, Incoterms, '1' as Transfered, Code_Provider,  Code_Segment, &#xA;&#x9;   Logistic, Code_Account_Provider, Number_Bank, Price_Schema, IBAN, Code_Com_Agent, Code_ClassificationE, Discount_Allowed, Document_Type, &#xA;       Delivery_Note, IVA_Return, ERP_IMPLT_accounts_org.Observations, Notes, Code_Hierarchy4, Code_Hierarchy5, Valued, Code_Payment_method&#xA;       FROM        ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Payment, Code_Price_list, Code_Plant, Code_St_Bill, Code_St_Trans, Code_St_Del, &#xA;&#x9; Code_Currency, Sales_Office, Incoterms, Transfered, Code_Provider, Code_Segment, Logistic, Code_Account_Provider, Number_Bank, Price_Schema, &#xA;&#x9; IBAN, Code_Com_Agent, Code_ClassificationE, Discount_Allowed, Document_Type, Delivery_Note, IVA_Return, Observations, Notes, Code_Hierarchy4, &#xA;&#x9; Code_Hierarchy5, Valued, Code_Payment_method&#xA;FROM         prj_accounts_organization) as MOD INNER JOIN prj_accounts_organization ON MOD.Code_Account = prj_accounts_organization.Code_Account and MOD.Code_Unit_Org = prj_accounts_organization.Code_Unit_Org and &#xA;MOD.Code_Sales_Org = prj_accounts_organization.Code_Sales_Org CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_accounts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;where accounts.code = prj_accounts_organization.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = prj_accounts_organization.Code_Unit_Org and &#xA;ERP_IMPLT_accounts_org.Code_Sales_Org = prj_accounts_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_accounts_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;where accounts.code = prj_accounts_organization.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = prj_accounts_organization.Code_Unit_Org and &#xA;ERP_IMPLT_accounts_org.Code_Sales_Org = prj_accounts_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_org CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_org CI"
      DTS:DTSID="{0ed8671c-3b25-4732-8c97-5206562f3c09}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_org CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="54">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;UPDATE accounts_org SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = accounts_org.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = accounts_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_org.Code_Sales_Org = accounts_org.Code_Sales_Org ) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;UPDATE prj_accounts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;where accounts.code = prj_accounts_organization.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = prj_accounts_organization.Code_Unit_Org and &#xA;ERP_IMPLT_accounts_org.Code_Sales_Org = prj_accounts_organization.Code_Sales_Org) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_organization"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_organization"
      DTS:DTSID="{f9849f7e-9dcb-4e60-a6eb-c30bbdf0cbc2}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_organization"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO accounts_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Seller, Code_Potential, Potential, Code_Status, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, &#xA;                      Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, Transfered, Code_ClassificationA, Code_ClassificationB)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_organization.Code_Unit_Org, ERP_IMPLT_accounts_organization.Code_Sales_Org, sellers.Code as Code_Seller, &#xA;&#x9;ERP_IMPLT_accounts_organization.Code_Potential, ERP_IMPLT_accounts_organization.Potential, ERP_IMPLT_accounts_organization.Code_Status, ERP_IMPLT_accounts_organization.Code_Hierarchy1, ERP_IMPLT_accounts_organization.Code_Hierarchy2, ERP_IMPLT_accounts_organization.Code_Hierarchy3, ERP_IMPLT_accounts_organization.Hierarchy_Table, ERP_IMPLT_accounts_organization.TextLastHierarchy, &#xA;    ERP_IMPLT_accounts_organization.Code_ClassificationC, ERP_IMPLT_accounts_organization.Code_ClassificationD, ERP_IMPLT_accounts_organization.Code_Team, ERP_IMPLT_accounts_organization.Blocked, '1' as Transfered, ERP_IMPLT_accounts_organization.Code_ClassificationA, ERP_IMPLT_accounts_organization.Code_ClassificationB&#xA;FROM        ERP_IMPLT_accounts_organization inner join accounts on ERP_IMPLT_accounts_organization.Code_Account = accounts.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_accounts_organization.Code_Seller = sellers.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Seller from accounts_organization where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_organization.Code_Sales_Org and Code_Seller = sellers.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Potential = MOD.Code_Potential, Potential = MOD.Potential, Code_Status = MOD.Code_Status, Code_Hierarchy1 = MOD.Code_Hierarchy1, &#xA;&#x9;&#x9;Code_Hierarchy2 = MOD.Code_Hierarchy2, Code_Hierarchy3 = MOD.Code_Hierarchy3, Hierarchy_Table = MOD.Hierarchy_Table, &#xA;&#x9;&#x9;TextLastHierarchy = MOD.TextLastHierarchy, Code_ClassificationC = MOD.Code_ClassificationC, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_Team = MOD.Code_Team, Blocked = MOD.Blocked, Transfered = MOD.Transfered, Code_ClassificationA = MOD.Code_ClassificationA, Code_ClassificationB = MOD.Code_ClassificationB&#xA;FROM&#xA;(SELECT accounts.Code as Code_Account, ERP_IMPLT_accounts_organization.Code_Unit_Org, ERP_IMPLT_accounts_organization.Code_Sales_Org, sellers.Code as Code_Seller, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_organization.Code_Potential, ERP_IMPLT_accounts_organization.Potential, ERP_IMPLT_accounts_organization.Code_Status, ERP_IMPLT_accounts_organization.Code_Hierarchy1, ERP_IMPLT_accounts_organization.Code_Hierarchy2, ERP_IMPLT_accounts_organization.Code_Hierarchy3, ERP_IMPLT_accounts_organization.Hierarchy_Table, ERP_IMPLT_accounts_organization.TextLastHierarchy, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_organization.Code_ClassificationC, ERP_IMPLT_accounts_organization.Code_ClassificationD, ERP_IMPLT_accounts_organization.Code_Team, ERP_IMPLT_accounts_organization.Blocked, '1' as Transfered, ERP_IMPLT_accounts_organization.Code_ClassificationA, ERP_IMPLT_accounts_organization.Code_ClassificationB&#xA;&#x9; FROM        ERP_IMPLT_accounts_organization inner join accounts on ERP_IMPLT_accounts_organization.Code_Account = accounts.Code_ofClient &#xA;&#x9; inner join sellers on ERP_IMPLT_accounts_organization.Code_Seller = sellers.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Potential, Potential, Code_Status, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, &#xA;              Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, '1' as Transfered, Code_ClassificationA, Code_ClassificationB&#xA;FROM accounts_organization) as MOD INNER JOIN accounts_organization ON MOD.Code_Account = accounts_organization.Code_Account and MOD.Code_Unit_Org = accounts_organization.Code_Unit_Org &#xA;and MOD.Code_Sales_Org = accounts_organization.Code_Sales_Org and MOD.Code_Seller = accounts_organization.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_organization.Code_Account FROM ERP_IMPLT_accounts_organization inner join accounts on ERP_IMPLT_accounts_organization.Code_Account = accounts.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_accounts_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_organization.Code_Account and ERP_IMPLT_accounts_organization.Code_Unit_Org = accounts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organization.Code_Sales_Org = accounts_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = accounts_organization.Code_Seller and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_organization.Code_Account FROM ERP_IMPLT_accounts_organization inner join accounts on ERP_IMPLT_accounts_organization.Code_Account = accounts.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_accounts_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_organization.Code_Account and ERP_IMPLT_accounts_organization.Code_Unit_Org = accounts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organization.Code_Sales_Org = accounts_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = accounts_organization.Code_Seller and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_organization CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_organization CI"
      DTS:DTSID="{61723330-e85f-456d-aba0-0d2119155e7a}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_organization CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="14">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_organization.Code_Account FROM ERP_IMPLT_accounts_organization inner join accounts on ERP_IMPLT_accounts_organization.Code_Account = accounts.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_accounts_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_organization.Code_Account and ERP_IMPLT_accounts_organization.Code_Unit_Org = accounts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organization.Code_Sales_Org = accounts_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = accounts_organization.Code_Seller) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses"
      DTS:DTSID="{ee043d11-6605-4c12-a52f-1445c3e14b0d}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO addresses (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code,  Code_ofClient, Code_Country, Code_Region, &#xA;                      Code_Province, Code_Population, ZIP, Address1, Address2, Address3, Address4, Province, Population, Phone1, Phone2, Fax, Web, E_mail, Code_Type, Code_Status, &#xA;                      Code_Seller, Code_Team, Blocked, Observations, House_nr, Transfered, Hamlet)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_addresses.Code_ofClient) + 100000 as varchar(8)) as Code,  ERP_IMPLT_addresses.Code_ofClient, Code_Country, Code_Region, &#xA;                      Code_Province, Code_Population, ZIP, Address1, Address2, Address3, Address4, Province, Population, Phone1, Phone2, Fax, Web, E_mail, ERP_IMPLT_addresses.Code_Type, Code_Status, &#xA;                      sellers.Code as Code_Seller, Code_Team, Blocked, Observations, House_nr, '1' as Transfered, Hamlet&#xA;FROM        ERP_IMPLT_addresses left join sellers on sellers.Code_ofClient = ERP_IMPLT_addresses.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient from addresses where Code_ofClient = ERP_IMPLT_addresses.Code_ofClient)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE addresses SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Country = MOD.Code_Country, Code_Region = MOD.Code_Region, Code_Province = MOD.Code_Province, Code_Population = MOD.Code_Population, &#xA;&#x9;&#x9;ZIP = MOD.ZIP, Address1 = MOD.Address1, Address2 = MOD.Address2, Address3 = MOD.Address3, Address4 = MOD.Address4, Province = MOD.Province, &#xA;&#x9;&#x9;Population = MOD.Population, Phone1 = MOD.Phone1, Phone2 = MOD.Phone2, Fax = MOD.Fax, Web = MOD.Web, E_mail = MOD.E_mail, Code_Type = MOD.Code_Type, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Code_Seller = MOD.Code_Seller, Code_Team = MOD.Code_Team, Blocked = MOD.Blocked, &#xA;&#x9;&#x9;Observations = MOD.Observations, House_nr = MOD.House_nr, Transfered = MOD.Transfered, Hamlet = MOD.Hamlet&#xA;FROM&#xA;(SELECT  ERP_IMPLT_addresses.Code_ofClient, Code_Country, Code_Region, &#xA;                      Code_Province, Code_Population, ZIP, Address1, Address2, Address3, Address4, Province, Population, Phone1, Phone2, Fax, Web, E_mail, ERP_IMPLT_addresses.Code_Type, Code_Status, &#xA;                      sellers.Code as Code_Seller, Code_Team, Blocked, Observations, House_nr, '1' as Transfered, Hamlet&#xA;FROM        ERP_IMPLT_addresses left join sellers on sellers.Code_ofClient = ERP_IMPLT_addresses.Code_Seller &#xA;EXCEPT&#xA;SELECT     Code_ofClient, Code_Country, Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Address3, Address4, Province, &#xA;&#x9;&#x9;&#x9;&#x9;Population, Phone1, Phone2, Fax, Web, E_mail, Code_Type, Code_Status, Code_Seller, Code_Team, Blocked, Observations, &#xA;&#x9;&#x9;&#x9;&#x9;House_nr, Transfered, Hamlet&#xA;FROM         addresses) as MOD INNER JOIN addresses ON MOD.Code_ofClient = addresses.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE addresses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_addresses where Code_ofClient = addresses.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE addresses SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_addresses where Code_ofClient = addresses.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses CI"
      DTS:DTSID="{b5db4b13-3017-481b-89cb-50d5deafd8d4}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="15">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE addresses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_addresses where Code_ofClient = addresses.Code_ofClient) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses_org"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses_org"
      DTS:DTSID="{e874b5b6-f25c-48e7-851e-39c98bbb2e46}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses_org"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO addresses_org (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Address, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Status, Code_Team, Blocked, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;addresses.Code as Code_Address, ERP_IMPLT_addresses_org.Code_Unit_Org, ERP_IMPLT_addresses_org.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_addresses_org.Code_Status, ERP_IMPLT_addresses_org.Code_Team, ERP_IMPLT_addresses_org.Blocked, '1' as Transfered&#xA;FROM        ERP_IMPLT_addresses_org inner join addresses on ERP_IMPLT_addresses_org.Code_Address = addresses.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Address, Code_Unit_Org, Code_Sales_Org from addresses_org where Code_Address = addresses.Code and &#xA;Code_Unit_Org = ERP_IMPLT_addresses_org.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_addresses_org.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE addresses_org SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Code_Team = MOD.Code_Team, Blocked = MOD.Blocked, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT addresses.Code as Code_Address, ERP_IMPLT_addresses_org.Code_Unit_Org, ERP_IMPLT_addresses_org.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_addresses_org.Code_Status, ERP_IMPLT_addresses_org.Code_Team, ERP_IMPLT_addresses_org.Blocked, '1' as Transfered&#xA;FROM        ERP_IMPLT_addresses_org inner join addresses on ERP_IMPLT_addresses_org.Code_Address = addresses.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Status, Code_Team, Blocked, Transfered&#xA;FROM         addresses_org) as MOD INNER JOIN addresses_org ON MOD.Code_Address = addresses_org.Code_Address and MOD.Code_Unit_Org = addresses_org.Code_Unit_Org and MOD.Code_Sales_Org = addresses_org.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE addresses_org SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_addresses_org.Code_Address FROM ERP_IMPLT_addresses_org inner join addresses on ERP_IMPLT_addresses_org.Code_Address = addresses.Code_ofClient &#xA;&#x9;&#x9;where addresses.code = addresses_org.Code_Address and ERP_IMPLT_addresses_org.Code_Unit_Org = addresses_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_org.Code_Sales_Org = addresses_org.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE addresses_org SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  addresses_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_addresses_org.Code_Address FROM ERP_IMPLT_addresses_org inner join addresses on ERP_IMPLT_addresses_org.Code_Address = addresses.Code_ofClient &#xA;&#x9;&#x9;where addresses.code = addresses_org.Code_Address and ERP_IMPLT_addresses_org.Code_Unit_Org = addresses_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_org.Code_Sales_Org = addresses_org.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses_org CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses_org CI"
      DTS:DTSID="{7529662e-e08b-4bc3-8f97-0166ba44ee92}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses_org CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="16">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE addresses_org SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_addresses_org.Code_Address FROM ERP_IMPLT_addresses_org inner join addresses on ERP_IMPLT_addresses_org.Code_Address = addresses.Code_ofClient &#xA;&#x9;&#x9;where addresses.code = addresses_org.Code_Address and ERP_IMPLT_addresses_org.Code_Unit_Org = addresses_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_org.Code_Sales_Org = addresses_org.Code_Sales_Org ) &#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses_organization"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses_organization"
      DTS:DTSID="{abcd3e80-3dd5-496a-b2db-bf7774afd6db}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses_organization"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO addresses_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Address, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Seller, Code_Status, Code_Team, Blocked, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;addresses.Code as Code_Address, ERP_IMPLT_addresses_organization.Code_Unit_Org, ERP_IMPLT_addresses_organization.Code_Sales_Org, sellers.Code as Code_Seller, &#xA;&#x9;ERP_IMPLT_addresses_organization.Code_Status, ERP_IMPLT_addresses_organization.Code_Team, ERP_IMPLT_addresses_organization.Blocked, '1' as Transfered&#xA;FROM        ERP_IMPLT_addresses_organization inner join addresses on ERP_IMPLT_addresses_organization.Code_Address = addresses.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_addresses_organization.Code_Seller = sellers.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Seller from addresses_organization where Code_Address = addresses.Code and &#xA;Code_Unit_Org = ERP_IMPLT_addresses_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_addresses_organization.Code_Sales_Org and Code_Seller = sellers.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE addresses_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Blocked = MOD.Blocked&#xA;FROM&#xA;(SELECT addresses.Code as Code_Address, ERP_IMPLT_addresses_organization.Code_Unit_Org, ERP_IMPLT_addresses_organization.Code_Sales_Org, sellers.Code as Code_Seller, &#xA;&#x9;&#x9;ERP_IMPLT_addresses_organization.Code_Status, ERP_IMPLT_addresses_organization.Blocked&#xA;&#x9; FROM        ERP_IMPLT_addresses_organization inner join addresses on ERP_IMPLT_addresses_organization.Code_Address = addresses.Code_ofClient &#xA;&#x9; inner join sellers on ERP_IMPLT_addresses_organization.Code_Seller = sellers.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Status, Blocked&#xA;FROM addresses_organization) as MOD INNER JOIN addresses_organization ON MOD.Code_Address = addresses_organization.Code_Address and MOD.Code_Unit_Org = addresses_organization.Code_Unit_Org &#xA;and MOD.Code_Sales_Org = addresses_organization.Code_Sales_Org and MOD.Code_Seller = addresses_organization.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE addresses_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_addresses_organization.Code_Address FROM ERP_IMPLT_addresses_organization inner join addresses on ERP_IMPLT_addresses_organization.Code_Address = addresses.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_addresses_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = addresses_organization.Code_Address and ERP_IMPLT_addresses_organization.Code_Unit_Org = addresses_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_organization.Code_Sales_Org = addresses_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = addresses_organization.Code_Seller and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE addresses_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  addresses_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_addresses_organization.Code_Address FROM ERP_IMPLT_addresses_organization inner join addresses on ERP_IMPLT_addresses_organization.Code_Address = addresses.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_addresses_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = addresses_organization.Code_Address and ERP_IMPLT_addresses_organization.Code_Unit_Org = addresses_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_organization.Code_Sales_Org = addresses_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = addresses_organization.Code_Seller and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses_organization CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses_organization CI"
      DTS:DTSID="{db9985eb-9a93-455e-88b1-79456fd8a48a}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses_organization CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE addresses_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_addresses_organization.Code_Address FROM ERP_IMPLT_addresses_organization inner join addresses on ERP_IMPLT_addresses_organization.Code_Address = addresses.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_addresses_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = addresses_organization.Code_Address and ERP_IMPLT_addresses_organization.Code_Unit_Org = addresses_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_organization.Code_Sales_Org = addresses_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = addresses_organization.Code_Seller) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\collecting_type"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5057F3CE-91C1-4A8E-9A5E-B4D3725A0A23}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="collecting_type"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="INSERT INTO collecting_type (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date,&#xA;View_System_Fields_ERP.Platform,&#xA;      Code,&#xA;      Description,&#xA;      Orden&#xA;      )&#xA;SELECT &#xA;View_System_Fields_ERP.Create_User,&#xA;View_System_Fields_ERP.Create_Date,&#xA;View_System_Fields_ERP.Modify_User,&#xA;View_System_Fields_ERP.Modify_Date,&#xA;      NULL AS Delete_User,&#xA;      NULL AS Delete_Date,&#xA;      View_System_Fields_ERP.Platform,&#xA;      Code,&#xA;      cast(Description AS Varchar(20)) AS Description,&#xA;      1 as Orden&#xA;      FROM prj_payment_methods CROSS JOIN View_System_Fields_ERP&#xA;&#x9;  WHERE not exists (SELECT Code&#xA;    FROM collecting_type WHERE collecting_type.Code =prj_payment_methods.Code) &#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\collections_pending"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="collections_pending"
      DTS:DTSID="{2fbe0717-61d2-4b72-b100-332f14cc4ad3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="collections_pending"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="UPDATE ERP_IMPLT_collection_pending SET Code_Unit_Org = '01' WHERE Code_Unit_Org = '1'&#xA;&#xA;-- Al tener ua clave formada por dos campos de valor único que tenemos que generar, &#xA;--la forma de tratar esta tabla es diferente&#xA;-- Actualizamos la tabla temporal con los códigos de la maestra&#xA;UPDATE  ERP_IMPLT_collection_pending set Num_Invoice = collections_pending.Num_Invoice, ERP_IMPLT_collection_pending.NumDocum = collections_pending.NumDocum&#xA;FROM         ERP_IMPLT_collection_pending INNER JOIN&#xA;                      collections_pending ON ERP_IMPLT_collection_pending.Code_ofClient_Inv = collections_pending.Code_ofClient_Inv AND &#xA;                      ERP_IMPLT_collection_pending.Code_ofClient_Doc = collections_pending.Code_ofClient_Doc&#xA;GO&#xA;&#xA;-- Creamos el código del número de factura&#xA;UPDATE ERP_IMPLT_collection_pending set Num_Invoice = GenCode.Num_Invoice &#xA;from ERP_IMPLT_collection_pending inner join &#xA;(SELECT    convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','') + cast(ROW_NUMBER() OVER (order by Code_ofClient_Inv) + 100000 as varchar(8)) as  Num_Invoice,  Code_ofClient_Inv&#xA;FROM       (SELECT distinct  Code_ofClient_Inv  from ERP_IMPLT_collection_pending where Num_Invoice is null) as Gen1) as GenCode on GenCode.Code_ofClient_Inv = ERP_IMPLT_collection_pending.Code_ofClient_Inv&#xA;Where ERP_IMPLT_collection_pending.Num_Invoice is null&#xA;GO&#xA;&#xA;-- Creamos el código del número de documento&#xA;UPDATE ERP_IMPLT_collection_pending set NumDocum = GenCode.NumDocum from ERP_IMPLT_collection_pending &#xA;inner join &#xA;(SELECT     convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by Code_ofClient_Inv, Code_ofClient_Doc) + 100000 as varchar(8)) as  NumDocum,  Code_ofClient_Inv, Code_ofClient_Doc&#xA;FROM       (SELECT distinct  Code_ofClient_Inv, Code_ofClient_Doc  from ERP_IMPLT_collection_pending where NumDocum is null) as Gen1) as GenCode on GenCode.Code_ofClient_Inv = ERP_IMPLT_collection_pending.Code_ofClient_Inv and GenCode.Code_ofClient_Doc = ERP_IMPLT_collection_pending.Code_ofClient_Doc&#xA;Where ERP_IMPLT_collection_pending.NumDocum is null&#xA;GO&#xA;&#xA;-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO collections_pending (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Num_Invoice, NumDocum, Date_Doc, Code_ofClient_Inv, &#xA;                      Code_ofClient_Doc, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Type, Total_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Total_Collected, Total_Pending, Amount_Confirmed, Code_Seller, &#xA;                      Date_End, Locked, Unpaid, Observations,  Total_Divida)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;&#x9;&#x9;Num_Invoice, NumDocum, Date_Doc, Code_ofClient_Inv, Code_ofClient_Doc, accounts.Code as Code_Account, &#xA;&#x9;&#x9;&#x9;&#x9;Code_Unit_Org, Code_Sales_Org, ERP_IMPLT_collection_pending.Code_Type, Total_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN Total_Collected IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;THEN 0.000 ELSE Total_Collected END AS Total_Collected, &#xA;&#x9;&#x9;&#x9;&#x9;Total_Amount - CASE WHEN Total_Collected IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;THEN 0.000 ELSE Total_Collected END AS Total_Pending,&#xA;&#x9;&#x9;&#x9;&#x9;Amount_Confirmed, sellers.Code as Code_Seller, Date_End, Locked, Unpaid, ERP_IMPLT_collection_pending.Observations,  &#xA;&#x9;&#x9;&#x9;&#x9;Total_Divida&#xA;FROM        ERP_IMPLT_collection_pending inner join accounts on ERP_IMPLT_collection_pending.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_collection_pending.Code_Seller = sellers.Code_ofClient&#xA;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient_Inv, Code_ofClient_Doc FROM collections_pending where Code_ofClient_Inv = ERP_IMPLT_collection_pending.Code_ofClient_Inv and Code_ofClient_Doc = ERP_IMPLT_collection_pending.Code_ofClient_Doc) &#xA;GO&#xA;&#xA;&#xA;&#xA;-- Modificación&#xA;UPDATE collections_pending SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Date_Doc = MOD.Date_Doc, Code_Account = MOD.Code_Account, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, Code_Type = MOD.Code_Type, &#xA;&#x9;&#x9;Total_Amount = MOD.Total_Amount, Total_Collected = MOD.Total_Collected, Total_Pending = MOD.Total_Pending, Amount_Confirmed = MOD.Amount_Confirmed, &#xA;&#x9;&#x9;Code_Seller = MOD.Code_Seller, Date_End = MOD.Date_End, Locked = MOD.Locked, Unpaid = MOD.Unpaid, Observations = MOD.Observations, Total_Divida = MOD.Total_Divida&#xA;FROM&#xA;(SELECT distinct Num_Invoice, NumDocum, Date_Doc, Code_ofClient_Inv, Code_ofClient_Doc, accounts.Code as Code_Account, &#xA;Code_Unit_Org, Code_Sales_Org, ERP_IMPLT_collection_pending.Code_Type, Total_Amount, &#xA;&#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN Total_Collected IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;THEN 0.000 ELSE Total_Collected END AS Total_Collected, &#xA;&#x9;&#x9;&#x9;&#x9;Total_Amount - CASE WHEN Total_Collected IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;THEN 0.000 ELSE Total_Collected END AS Total_Pending, &#xA;&#x9;&#x9;&#x9;&#x9;Amount_Confirmed, sellers.Code as Code_Seller, Date_End, Locked, Unpaid, ERP_IMPLT_collection_pending.Observations,  Total_Divida&#x9;  &#xA;FROM        ERP_IMPLT_collection_pending inner join accounts on ERP_IMPLT_collection_pending.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_collection_pending.Code_Seller = sellers.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Num_Invoice, NumDocum, Date_Doc, Code_ofClient_Inv, Code_ofClient_Doc, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Type, Total_Amount, &#xA;&#x9; Total_Collected, Total_Pending, Amount_Confirmed, Code_Seller, Date_End, Locked, Unpaid, Observations,  Total_Divida&#xA;FROM         collections_pending) as MOD INNER JOIN collections_pending ON MOD.Num_Invoice = collections_pending.Num_Invoice and MOD.NumDocum = collections_pending.NumDocum CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE collections_pending SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  collections_pending CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Num_Invoice, NumDocum FROM ERP_IMPLT_collection_pending &#xA;&#x9;&#x9;where Num_Invoice = collections_pending.Num_Invoice and NumDocum = collections_pending.NumDocum and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE collections_pending SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  collections_pending CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Num_Invoice, NumDocum FROM ERP_IMPLT_collection_pending &#xA;&#x9;&#x9;where Num_Invoice = collections_pending.Num_Invoice and NumDocum = collections_pending.NumDocum and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Por si volvemos a recibir cobros ya realizados, comprobamos que no estén cobrados y si lo están los marcamos como cobrados&#xA;UPDATE     collections_pending set Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, &#xA;Total_Collected = Collected.Total, Total_Pending = 0.000&#xA;FROM         collections_pending INNER JOIN&#xA;                          (SELECT     Num_Invoice, NumDocum, Code_ofClient_Inv, Code_ofClient_Doc, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SUM(Total_Collected) AS Total&#xA;                            FROM          collections_received&#xA;                            WHERE      (Delete_Date IS NULL)&#xA;                            GROUP BY Num_Invoice, NumDocum, Code_ofClient_Inv, Code_ofClient_Doc) AS Collected &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON collections_pending.Num_Invoice = Collected.Num_Invoice AND &#xA;                      collections_pending.NumDocum = Collected.NumDocum &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  AND collections_pending.Total_Collected &lt;&gt; Collected.Total CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE     (collections_pending.Total_Pending &lt;&gt; 0)&#xA;GO&#xA;&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_collections_pending(Create_User, Create_Date, Modify_User, Modify_Date, Platform, Num_Invoice, NumDocum, Code_Payment, Total_Discount, &#xA;                      Num_Check, Amount_Gross, Fiscal_Year, Buzei, Posicion_Factura, Factura_Referencia)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;&#x9;&#x9;Num_Invoice, NumDocum, Code_Payment, Total_Discount, Num_Check, Amount_Gross,&#xA;&#x9;&#x9;&#x9;&#x9;Fisc_Year AS Fiscal_Year, &#xA;&#x9;&#x9;&#x9;&#x9;Buzei,&#xA;&#x9;&#x9;&#x9;&#x9;Buzei AS Posicion_Factura, &#xA;&#x9;&#x9;&#x9;&#x9;Referen_fact AS Factura_Referencia&#xA;FROM        ERP_IMPLT_collection_pending CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Num_Invoice, NumDocum FROM prj_collections_pending where Num_Invoice = ERP_IMPLT_collection_pending.Num_Invoice and NumDocum = ERP_IMPLT_collection_pending.NumDocum) &#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_collections_pending SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Payment = MOD.Code_Payment, Total_Discount = MOD.Total_Discount, &#xA;&#x9;&#x9;Num_Check = MOD.Num_Check, Amount_Gross = MOD.Amount_Gross,&#xA;&#x9;&#x9;Fiscal_Year = MOD.Fiscal_Year, &#xA;&#x9;&#x9;Posicion_Factura = MOD.Posicion_Factura, &#xA;&#x9;&#x9;Factura_Referencia = MOD.Factura_Referencia,&#xA;&#x9;&#x9;Buzei = MOD.Buzei&#xA;FROM&#xA;(SELECT distinct Num_Invoice, NumDocum, Code_Payment, Total_Discount, Num_Check, Amount_Gross,&#xA;Fisc_Year AS Fiscal_Year,&#xA;Buzei AS Posicion_Factura,&#x9; &#xA; Referen_fact AS Factura_Referencia,&#xA; Buzei&#xA;FROM        ERP_IMPLT_collection_pending &#xA;     EXCEPT&#xA;     SELECT  Num_Invoice, NumDocum, Code_Payment, Total_Discount, Num_Check, Amount_Gross,&#xA;&#x9; Fiscal_Year, Posicion_Factura, Factura_Referencia, Buzei&#xA;FROM         prj_collections_pending) as MOD INNER JOIN prj_collections_pending &#xA;ON MOD.Num_Invoice = prj_collections_pending.Num_Invoice and MOD.NumDocum = prj_collections_pending.NumDocum &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_collections_pending SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_collections_pending CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Num_Invoice, NumDocum FROM ERP_IMPLT_collection_pending &#xA;&#x9;&#x9;where Num_Invoice = prj_collections_pending.Num_Invoice and NumDocum = prj_collections_pending.NumDocum and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_collections_pending SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_collections_pending CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Num_Invoice, NumDocum FROM ERP_IMPLT_collection_pending &#xA;&#x9;&#x9;where Num_Invoice = prj_collections_pending.Num_Invoice and NumDocum = prj_collections_pending.NumDocum and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\collections_pending CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="collections_pending CI"
      DTS:DTSID="{bfe7bb98-f652-46f8-ba4e-2c907b0475db}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="collections_pending CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="22">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial. En lugar de borrar lo ponemos como cobrado&#xA;UPDATE collections_pending SET Modify_Date = View_System_Fields_ERP.Create_Date, Modify_User = View_System_Fields_ERP.Create_User, Total_Collected = Total_Amount, Total_Pending = 0.000&#xA;FROM  collections_pending CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Total_Pending &lt;&gt; 0.000 and not exists (SELECT Num_Invoice, NumDocum FROM ERP_IMPLT_collection_pending &#xA;&#x9;&#x9;where Num_Invoice = collections_pending.Num_Invoice and NumDocum = collections_pending.NumDocum) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial. No hay borrado ya que se pone como cobrado&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts"
      DTS:DTSID="{17c5a1a7-87c8-46cd-aa0e-1214bddb7651}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO contacts (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, Code_ofClient, Name1, Name2, NIF, Address, Street1,&#xA;                      Population, ZIP, Region, HouseNum, Code_Country, Phone1, Phone2, Phone3, Fax, E_mail, Code_Status, Code_ClassificationA, Code_ClassificationB, &#xA;                      Code_ClassificationC, Code_Manager, Code_Language, Principal, Gender, Code_Seller, Code_Team, Observations, Transfered, New_Account, Language_tr, &#xA;                      Description)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_contacts.Code_ofClient) + 100000 as varchar(8)) as Code,  ERP_IMPLT_contacts.Code_ofClient, Name1, Name2, NIF, Address, Street1,&#xA;                      Population, ZIP, Region, HouseNum, Code_Country, Phone1, Phone2, Phone3, Fax, E_mail, Code_Status, Code_ClassificationA, Code_ClassificationB, &#xA;                      Code_ClassificationC, Code_Manager, Code_Language, Principal, Gender, Code_Seller, Code_Team, Observations, '1' as Transfered, New_Account, Language_tr, &#xA;                      ERP_IMPLT_contacts.Description&#xA;FROM        ERP_IMPLT_contacts left join sellers on sellers.code_ofClient = ERP_IMPLT_contacts.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient from contacts where Code_ofClient = ERP_IMPLT_contacts.Code_ofClient)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE contacts SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Name1 = MOD.Name1, Name2 = MOD.Name2, NIF = MOD.NIF, Address = MOD.Address, Street1 = MOD.Street1, Population = MOD.Population, ZIP = MOD.ZIP, &#xA;&#x9;&#x9;Region = MOD.Region, HouseNum = MOD.HouseNum, Code_Country = MOD.Code_Country, Phone1 = MOD.Phone1, Phone2 = MOD.Phone2, Phone3 = MOD.Phone3, &#xA;&#x9;&#x9;Fax = MOD.Fax, E_mail = MOD.E_mail, Code_Status = MOD.Code_Status, Code_ClassificationA = MOD.Code_ClassificationA, &#xA;&#x9;&#x9;Code_ClassificationB = MOD.Code_ClassificationB, Code_ClassificationC = MOD.Code_ClassificationC, Code_Manager = MOD.Code_Manager, &#xA;&#x9;&#x9;Code_Language = MOD.Code_Language, Principal = MOD.Principal, Gender = MOD.Gender, Code_Seller = MOD.Code_Seller, Code_Team = MOD.Code_Team, &#xA;&#x9;&#x9;Observations = MOD.Observations, New_Account = MOD.New_Account, Language_tr = MOD.Language_tr, Description = MOD.Description&#xA;FROM&#xA;(SELECT    ERP_IMPLT_contacts.Code_ofClient, Name1, Name2, NIF, Address, Street1, Population, ZIP, Region, HouseNum, Code_Country, Phone1, Phone2, Phone3, Fax, E_mail, Code_Status, Code_ClassificationA, Code_ClassificationB, &#xA;                      Code_ClassificationC, Code_Manager, Code_Language, Principal, Gender, Code_Seller, Code_Team, Observations, '1' as Transfered, New_Account, Language_tr, &#xA;                      ERP_IMPLT_contacts.Description&#xA;FROM        ERP_IMPLT_contacts left join sellers on sellers.code_ofClient = ERP_IMPLT_contacts.Code_Seller &#xA;EXCEPT&#xA;SELECT     Code_ofClient, Name1, Name2, NIF, Address, Street1, Population, ZIP, Region, HouseNum, Code_Country, Phone1, Phone2, Phone3, Fax, E_mail, &#xA;           Code_Status, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_Manager, Code_Language, Principal, Gender, &#xA;&#x9;&#x9;   Code_Seller, Code_Team, Observations, Transfered, New_Account, Language_tr, Description&#xA;FROM         contacts) as MOD INNER JOIN contacts ON MOD.Code_ofClient = contacts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE contacts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_contacts where Code_ofClient = contacts.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE contacts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  contacts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_contacts where Code_ofClient = contacts.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts CI"
      DTS:DTSID="{46aefa10-12d6-4661-ba30-e83a89edf1a5}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="18">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE contacts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_contacts where Code_ofClient = contacts.Code_ofClient) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts_accounts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts_accounts"
      DTS:DTSID="{499a65d7-0945-43aa-a0b4-937fcc3eaf3e}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts_accounts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO contacts_accounts (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Contact, Code_Unit_Org, Code_Sales_Org, Code_Account, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;contacts.Code as Code_Contact, ERP_IMPLT_contacts_accounts.Code_Unit_Org, ERP_IMPLT_contacts_accounts.Code_Sales_Org, accounts.Code as Code_Account, '1' as Transfered&#xA;FROM        ERP_IMPLT_contacts_accounts inner join contacts on ERP_IMPLT_contacts_accounts.Code_Contact = contacts.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_contacts_accounts.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Contact, Code_Unit_Org, Code_Sales_Org, Code_Account from contacts_accounts where Code_Contact = contacts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_contacts_accounts.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_contacts_accounts.Code_Sales_Org and Code_Account = accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación. No hay modificación ya que todos los campos forman parte de la clave&#xA;&#xA;-- Baja&#xA;UPDATE contacts_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_contacts_accounts.Code_Contact FROM ERP_IMPLT_contacts_accounts inner join contacts on ERP_IMPLT_contacts_accounts.Code_Contact = contacts.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_contacts_accounts.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where contacts.code = contacts_accounts.Code_Contact and ERP_IMPLT_contacts_accounts.Code_Unit_Org = contacts_accounts.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_accounts.Code_Sales_Org = contacts_accounts.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = contacts_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE contacts_accounts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  contacts_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_contacts_accounts.Code_Contact FROM ERP_IMPLT_contacts_accounts inner join contacts on ERP_IMPLT_contacts_accounts.Code_Contact = contacts.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_contacts_accounts.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where contacts.code = contacts_accounts.Code_Contact and ERP_IMPLT_contacts_accounts.Code_Unit_Org = contacts_accounts.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_accounts.Code_Sales_Org = contacts_accounts.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = contacts_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts_accounts CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts_accounts CI"
      DTS:DTSID="{524b0cc2-6304-44a2-bb6b-ba9013018de7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts_accounts CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="19">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE contacts_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_contacts_accounts.Code_Contact FROM ERP_IMPLT_contacts_accounts inner join contacts on ERP_IMPLT_contacts_accounts.Code_Contact = contacts.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_contacts_accounts.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where contacts.code = contacts_accounts.Code_Contact and ERP_IMPLT_contacts_accounts.Code_Unit_Org = contacts_accounts.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_accounts.Code_Sales_Org = contacts_accounts.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = contacts_accounts.Code_Account) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts_organization"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts_organization"
      DTS:DTSID="{0a26bdc1-67b5-43c7-943c-85f280e2004b}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts_organization"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO contacts_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Contact, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Status, Code_ClassificationB, Code_ClassificationC, Code_Seller, Code_Team, Lock, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;contacts.Code as Code_Contact, ERP_IMPLT_contacts_organization.Code_Unit_Org, ERP_IMPLT_contacts_organization.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_contacts_organization.Code_Status, ERP_IMPLT_contacts_organization.Code_ClassificationB, ERP_IMPLT_contacts_organization.Code_ClassificationC, &#xA;&#x9;ERP_IMPLT_contacts_organization.Code_Seller, ERP_IMPLT_contacts_organization.Code_Team, ERP_IMPLT_contacts_organization.Lock, '1' as Transfered&#xA;FROM        ERP_IMPLT_contacts_organization inner join contacts on ERP_IMPLT_contacts_organization.Code_Contact = contacts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Contact, Code_Unit_Org, Code_Sales_Org from contacts_organization where Code_Contact = contacts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_contacts_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_contacts_organization.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE contacts_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Code_ClassificationB = MOD.Code_ClassificationB, Code_ClassificationC = MOD.Code_ClassificationC, &#xA;&#x9;&#x9;Code_Seller = MOD.Code_Seller, Code_Team = MOD.Code_Team, Lock = MOD.Lock, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT contacts.Code as Code_Contact, ERP_IMPLT_contacts_organization.Code_Unit_Org, ERP_IMPLT_contacts_organization.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_contacts_organization.Code_Status, ERP_IMPLT_contacts_organization.Code_ClassificationB, ERP_IMPLT_contacts_organization.Code_ClassificationC, &#xA;&#x9;ERP_IMPLT_contacts_organization.Code_Seller, ERP_IMPLT_contacts_organization.Code_Team, ERP_IMPLT_contacts_organization.Lock, '1' as Transfered&#xA;FROM        ERP_IMPLT_contacts_organization inner join contacts on ERP_IMPLT_contacts_organization.Code_Contact = contacts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Contact, Code_Unit_Org, Code_Sales_Org, Code_Status, Code_ClassificationB, Code_ClassificationC, Code_Seller, Code_Team, Lock, Transfered&#xA;FROM         contacts_organization) as MOD INNER JOIN contacts_organization ON MOD.Code_Contact = contacts_organization.Code_Contact and MOD.Code_Unit_Org = contacts_organization.Code_Unit_Org and MOD.Code_Sales_Org = contacts_organization.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE contacts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_contacts_organization.Code_Contact FROM ERP_IMPLT_contacts_organization inner join contacts on ERP_IMPLT_contacts_organization.Code_Contact = contacts.Code_ofClient &#xA;&#x9;&#x9;where contacts.code = contacts_organization.Code_Contact and ERP_IMPLT_contacts_organization.Code_Unit_Org = contacts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_organization.Code_Sales_Org = contacts_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE contacts_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  contacts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_contacts_organization.Code_Contact FROM ERP_IMPLT_contacts_organization inner join contacts on ERP_IMPLT_contacts_organization.Code_Contact = contacts.Code_ofClient &#xA;&#x9;&#x9;where contacts.code = contacts_organization.Code_Contact and ERP_IMPLT_contacts_organization.Code_Unit_Org = contacts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_organization.Code_Sales_Org = contacts_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts_organization CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts_organization CI"
      DTS:DTSID="{cdb04d51-2d20-4b2a-b084-d6a39bea780f}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts_organization CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="20">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE contacts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_contacts_organization.Code_Contact FROM ERP_IMPLT_contacts_organization inner join contacts on ERP_IMPLT_contacts_organization.Code_Contact = contacts.Code_ofClient &#xA;&#x9;&#x9;where contacts.code = contacts_organization.Code_Contact and ERP_IMPLT_contacts_organization.Code_Unit_Org = contacts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_organization.Code_Sales_Org = contacts_organization.Code_Sales_Org ) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\core_users"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="core_users"
      DTS:DTSID="{1244024a-6c12-4627-ab5f-dc5b0fe34e3e}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="core_users"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO core_users (Code, Description, Login, Password, User_Level, Code_Manager, Active, Start_Module, User_Language, First_Name, Last_Name, Email, Code_Theme, &#xA;                      Desarrollador, Databox, Delegation, passwordL, Supplant, Code_Policy, Remain_Pass)&#xA;SELECT  Code, Description, Login, Password, User_Level, Code_Manager, Active, Start_Module, User_Language, First_Name, Last_Name, Email, Code_Theme, &#xA;                      Desarrollador, Databox, Delegation, passwordL, Supplant, Code_Policy, Remain_Pass&#xA;FROM         ERP_IMPLT_users WHERE ERP_IMPLT_users.Code not in (SELECT Code from core_users)&#xA;GO&#xA;&#xA;-- Modificación&#xA;-- Quitamos algunos campos que siempre se mantienen desde Hydra&#xA;UPDATE core_users SET Description = MOD.Description, Active = MOD.Active, First_Name = MOD.First_Name, Last_Name = MOD.Last_Name, &#xA;&#x9;&#x9;Email = MOD.Email, Delegation = MOD.Delegation &#xA;FROM&#xA;(SELECT  Code, Description, Active, First_Name, Last_Name, Email, Delegation&#xA;FROM         ERP_IMPLT_users&#xA;EXCEPT&#xA;SELECT     Code, Description, Active, First_Name, Last_Name, Email, Delegation&#xA;FROM         core_users) as MOD INNER JOIN core_users ON MOD.Code = core_users.Code&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE core_users SET Active = '0'&#xA;FROM  core_users &#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_users where Code = core_users.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE core_users SET Active = '1'&#xA;FROM  core_users &#xA;WHERE  Active = '0' and exists (SELECT Code FROM ERP_IMPLT_users where Code = core_users.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_users (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code_User, Login_PDA, Password_PDA, Active_PDA, &#xA;                      Code_Calendar, Code_Country, Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Latitude, Length, Technical, &#xA;                      Phone, Code_Type, Exp_Level, Code_User_Val, Code_Policy, Validation_Pass, Server_version, Code_Provider, Type_Ret, IVA_Comm, Allow_C_Prom, &#xA;                      Code_Prince_List1, Code_Prince_List2, Code_Prince_List3)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code as Code_User, Login_PDA, Password_PDA, Active_PDA, Code_Calendar, Code_Country, Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Latitude, Length, Technical, &#xA;                      Phone, Code_Type, Exp_Level, Code_User_Val, Code_Policy, Validation_Pass, Server_version, Code_Provider, Type_Ret, IVA_Comm, Allow_C_Prom, &#xA;                      Code_Prince_List1, Code_Prince_List2, Code_Prince_List3&#xA;FROM         ERP_IMPLT_users CROSS JOIN View_System_Fields_ERP&#xA;WHERE ERP_IMPLT_users.Code not in (SELECT Code_User from prj_users)&#xA;GO&#xA;&#xA;-- Modificación&#xA;-- No actualizamos algunos campos que se mantienen en Hydra&#xA;UPDATE prj_users SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;Code_Country = MOD.Code_Country, Code_Region = MOD.Code_Region, Code_Province = MOD.Code_Province, Code_Population = MOD.Code_Population, &#xA;&#x9;ZIP = MOD.ZIP, Address1 = MOD.Address1, Address2 = MOD.Address2, Province = MOD.Province, Population = MOD.Population, Hamlet = MOD.Hamlet, &#xA;&#x9;Latitude = MOD.Latitude, Length = MOD.Length, Phone = MOD.Phone, Code_Type = MOD.Code_Type, Code_Provider = MOD.Code_Provider, Type_Ret = MOD.Type_Ret, &#xA;&#x9;IVA_Comm = MOD.IVA_Comm, Allow_C_Prom = MOD.Allow_C_Prom, Code_Prince_List1 = MOD.Code_Prince_List1, Code_Prince_List2 = MOD.Code_Prince_List2, Code_Prince_List3 = MOD.Code_Prince_List3&#xA;FROM&#xA;(SELECT  Code as Code_User, Code_Country, Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Latitude, Length,  &#xA;                      Phone, Code_Type, Code_Provider, Type_Ret, IVA_Comm, Allow_C_Prom, Code_Prince_List1, Code_Prince_List2, Code_Prince_List3&#xA;FROM         ERP_IMPLT_users&#xA;EXCEPT&#xA;SELECT  Code_User, Code_Country, Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Latitude, Length,  &#xA;                      Phone, Code_Type, Code_Provider, Type_Ret, IVA_Comm, Allow_C_Prom, Code_Prince_List1, Code_Prince_List2, Code_Prince_List3&#xA;FROM         prj_users) as MOD INNER JOIN prj_users ON MOD.Code_User = prj_users.Code_User CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_users SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT code FROM ERP_IMPLT_users where code = prj_users.Code_User and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_users  SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_users CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT code FROM ERP_IMPLT_users where code = prj_users.Code_User and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\core_users CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="core_users CI"
      DTS:DTSID="{b19f7490-24ae-452a-b7f3-9a26b860f2e3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="core_users CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="21">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;-- Controlamos por si hemos creado manualmente el usuarios principales (admin, developer, pruebas y virtual)&#xA;UPDATE core_users SET Active = '0'&#xA;FROM  core_users &#xA;WHERE  Active = '0' and not exists (SELECT Code FROM ERP_IMPLT_users where Code = core_users.Code) and Code not in ('1','9','10','9999')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;-- Controlamos por si hemos creado manualmente el usuarios principales (admin, developer, pruebas y virtual)&#xA;UPDATE prj_users SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_sellers where code_ofClient = prj_users.Code_User ) and Code_User not in ('1','9','10','9999')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\countries"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="countries"
      DTS:DTSID="{4efcbbd9-58bd-4e6c-bc77-825ae054aa79}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="countries"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_countries (Code, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Country as Code, Code_Country as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_countries where code = ERP_IMPLT_accounts.Code_Country) &#xA;and not exists (SELECT Code FROM countries where code = ERP_IMPLT_accounts.Code_Country) and Code_Country is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO countries (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_countries CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM countries where Code = ERP_IMPLT_countries.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE countries SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Description&#xA;FROM         ERP_IMPLT_countries&#xA;EXCEPT&#xA;SELECT     Code, Description&#xA;FROM         countries) as MOD INNER JOIN countries ON MOD.Code = countries.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE countries SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  countries CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_countries where Code = countries.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE countries SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  countries CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_countries where Code = countries.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\countries CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="countries CI"
      DTS:DTSID="{474f84cc-d5d8-4ed8-b762-41eeb91eaaef}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="countries CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="25">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE countries SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  countries CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_countries where Code = countries.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\equipment_account"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="equipment_account"
      DTS:DTSID="{62e0dc56-88bf-47ab-a46a-81fb4dda5141}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="equipment_account"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO equipment_account (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_User, Code_Product, Reference, Date_Request, Date_Delivery, Date_Recession, Quantity, Code_Status, Notes, Code_EAN, QR_Code)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_equipment_accounts.Code) + 100000 as varchar(6)) as Code, accounts.Code as Code_Account,&#xA;&#x9;Code_Unit_Org, Code_Sales_Org, Code_User, products.Code as Code_Product, left(ERP_IMPLT_equipment_accounts.Code,20) as Reference, Date_Request, Date_Delivery, Date_Recession, Quantity, ERP_IMPLT_equipment_accounts.Code_Status, &#xA;&#x9;Notes, Code_EAN, QR_Code&#xA;FROM        ERP_IMPLT_equipment_accounts inner join accounts on ERP_IMPLT_equipment_accounts.Code_Account = accounts.Code_ofClient &#xA;left join products on products.Code_ofClient = ERP_IMPLT_equipment_accounts.Code_Product CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code, Reference from equipment_account where Reference = ERP_IMPLT_equipment_accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE equipment_account SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, Code_User = MOD.Code_User, Code_Product = MOD.Code_Product, &#xA;&#x9;&#x9;Date_Request = MOD.Date_Request, Date_Delivery = MOD.Date_Delivery, Date_Recession = MOD.Date_Recession, Quantity = MOD.Quantity, Code_Status = MOD.Code_Status, &#xA;&#x9;&#x9;Notes = MOD.Notes, Code_EAN = MOD.Code_EAN, QR_Code = MOD.QR_Code&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, Code_Unit_Org, Code_Sales_Org, Code_User, products.Code as Code_Product, left(ERP_IMPLT_equipment_accounts.Code,20) as Reference, Date_Request, &#xA;       Date_Delivery, Date_Recession, Quantity, ERP_IMPLT_equipment_accounts.Code_Status, Notes, Code_EAN, QR_Code&#xA;FROM        ERP_IMPLT_equipment_accounts inner join accounts on ERP_IMPLT_equipment_accounts.Code_Account = accounts.Code_ofClient &#xA;left join products on products.Code_ofClient = ERP_IMPLT_equipment_accounts.Code_Product&#xA;     EXCEPT&#xA;     SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_User, Code_Product, Reference, Date_Request, Date_Delivery, Date_Recession, Quantity, Code_Status, Notes, Code_EAN, QR_Code&#xA;FROM         equipment_account) as MOD INNER JOIN equipment_account ON MOD.Reference = equipment_account.Reference CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE equipment_account SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  equipment_account CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_equipment_accounts.Code FROM ERP_IMPLT_equipment_accounts  &#xA;&#x9;&#x9;where ERP_IMPLT_equipment_accounts.Reference = equipment_account.Reference and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE equipment_account SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  equipment_account CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_equipment_accounts.Code FROM ERP_IMPLT_equipment_accounts  &#xA;&#x9;&#x9;where ERP_IMPLT_equipment_accounts.Reference = equipment_account.Reference and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\equipment_account CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="equipment_account CI"
      DTS:DTSID="{6184f26a-e87e-496c-983f-28efb95b52e3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="equipment_account CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="23">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE equipment_account SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  equipment_account CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_equipment_accounts.Code FROM ERP_IMPLT_equipment_accounts  &#xA;&#x9;&#x9;where ERP_IMPLT_equipment_accounts.Code = equipment_account.Reference) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\equipment_array"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="equipment_array"
      DTS:DTSID="{c30415d3-fe9a-4140-9b3a-177d1e951f4f}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="equipment_array"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO equipment_array (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Type, Description, Orden, Active, Agrupation)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Type, Description, 1 as Orden, case when isnull(Status_SAP,'1') = '3' then '0' else '1' end Active, NULL as Agrupation&#xA;FROM         ERP_IMPLT_equipment_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM equipment_array where Code = ERP_IMPLT_equipment_array.Code and Type = ERP_IMPLT_equipment_array.Type)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE equipment_array SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description, Active = MOD.Active FROM&#xA;(SELECT  Code, Type, Description, case when isnull(Status_SAP,'1') = '3' then '0' else '1' end Active&#xA;FROM         ERP_IMPLT_equipment_array&#xA;EXCEPT&#xA;SELECT     Code, Type, Description, Active&#xA;FROM         equipment_array) as MOD INNER JOIN equipment_array ON MOD.Code = equipment_array.Code and MOD.Type = equipment_array.Type CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE equipment_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  equipment_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_equipment_array where Code = equipment_array.Code and Type = equipment_array.Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE equipment_array SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  equipment_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_equipment_array where Code = equipment_array.Code and Type = equipment_array.Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\equipment_array CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="equipment_array CI"
      DTS:DTSID="{2a2258bd-6990-45fb-9813-9079f4351bd9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="equipment_array CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="51">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE equipment_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  equipment_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_equipment_array where Code = equipment_array.Code and Type = equipment_array.Type) &#xA;and type not in ('1')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\loads_detail"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="loads_detail"
      DTS:DTSID="{338dcba9-e52a-47ca-99f8-4c22855c7a19}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="loads_detail"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- No existe caga inicial de las Cargas&#xA;&#xA;-- Alta&#xA;INSERT INTO loads_detail (Create_User, Create_Date, Modify_User, Modify_Date,  &#xA;Platform, Code, Num_Line, Code_Product, &#xA;                      Code_Product_Sus, Lot_Group, Quantity, Quantity_Real, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Unit_Type, Factor_Conversion, Prepared, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_loads_head.Code, Num_Line, products.Code as Code_Product, &#xA;&#x9;products_1.Code as Code_Product_Sus, Lot_Group, Quantity, Quantity_Real, Unit_Type, &#xA;&#x9;ERP_IMPLT_loads_detail.Factor_Conversion, Prepared, '1' as Transfered&#xA;FROM   ERP_IMPLT_loads_detail &#xA;inner join prj_loads_head on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient &#xA;inner join products on products.Code_ofClient = ERP_IMPLT_loads_detail.Code_product&#xA;left join products as products_1 &#xA;on products_1.Code_ofClient = ERP_IMPLT_loads_detail.Code_Product_Sus&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code, Num_Line from loads_detail &#xA;where Code = prj_loads_head.Code and Num_Line = ERP_IMPLT_loads_detail.Num_Line)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE loads_detail SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;&#x9;&#x9;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;&#x9;&#x9;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Product = MOD.Code_Product, Code_Product_Sus = MOD.Code_Product_Sus, &#xA;&#x9;&#x9;Lot_Group = MOD.Lot_Group, Quantity = MOD.Quantity, &#xA;&#x9;&#x9;Quantity_Real = MOD.Quantity_Real, &#xA;&#x9;&#x9;Unit_Type = MOD.Unit_Type, Factor_Conversion = MOD.Factor_Conversion, &#xA;&#x9;&#x9;Prepared = MOD.Prepared, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT prj_loads_head.Code, Num_Line, products.Code as Code_Product, &#xA;products_1.Code as Code_Product_Sus, Lot_Group, Quantity, Quantity_Real, Unit_Type, &#xA;&#x9;ERP_IMPLT_loads_detail.Factor_Conversion, Prepared, '1' as Transfered&#xA;FROM   ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient &#xA;inner join products &#xA;on products.Code_ofClient = ERP_IMPLT_loads_detail.Code_product&#xA;left join products as products_1 &#xA;on products_1.Code_ofClient = ERP_IMPLT_loads_detail.Code_Product_Sus&#xA;EXCEPT&#xA;SELECT  Code, Num_Line, Code_Product, Code_Product_Sus, Lot_Group, &#xA;Quantity, Quantity_Real, Unit_Type, Factor_Conversion, Prepared, Transfered&#xA;FROM         loads_detail) as MOD INNER JOIN loads_detail &#xA;ON MOD.Code = loads_detail.Code and MOD.Num_Line = loads_detail.Num_Line CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE loads_detail SET Delete_Date = View_System_Fields_ERP.Create_Date, &#xA;Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  loads_detail CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_loads_head.Code, ERP_IMPLT_loads_detail.Num_Line &#xA;FROM ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;where prj_loads_head.Code = loads_detail.Code &#xA;and ERP_IMPLT_loads_detail.Num_Line = loads_detail.Num_Line &#xA;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE loads_detail SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  loads_detail CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_loads_head.Code &#xA;FROM ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;where prj_loads_head.Code = loads_detail.Code &#xA;and ERP_IMPLT_loads_detail.Num_Line = loads_detail.Num_Line &#xA;and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_loads_detail (Create_User, Create_Date, Modify_User, &#xA;Modify_Date,  Platform, Code, Num_Line, Promotional, Code_Route, Code_Sales_Org)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_loads_head.Code, Num_Line, Promotional, Code_Route, ERP_IMPLT_loads_detail.Code_Sales_Org&#xA;FROM   ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code, Num_Line from prj_loads_detail &#xA;where Code = prj_loads_head.Code and Num_Line = ERP_IMPLT_loads_detail.Num_Line)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_loads_detail SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;&#x9;&#x9;Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, &#xA;&#x9;&#x9;Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Promotional = MOD.Promotional,&#xA;&#x9;&#x9;Code_Route = MOD.Code_Route,&#xA;&#x9;&#x9;Code_Sales_Org = MOD.Code_Sales_Org&#xA;FROM&#xA;(SELECT prj_loads_head.Code, Num_Line, Promotional, Code_Route, ERP_IMPLT_loads_detail.Code_Sales_Org&#xA;FROM   ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;EXCEPT&#xA;SELECT  Code, Num_Line, Promotional,Code_Route, Code_Sales_Org&#xA;FROM         prj_loads_detail) as MOD INNER JOIN prj_loads_detail &#xA;ON MOD.Code = prj_loads_detail.Code and MOD.Num_Line = prj_loads_detail.Num_Line &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_loads_detail SET Delete_Date = View_System_Fields_ERP.Create_Date, &#xA;Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_loads_detail CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_loads_head.Code, ERP_IMPLT_loads_detail.Num_Line &#xA;FROM ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;where prj_loads_head.Code = prj_loads_detail.Code &#xA;and ERP_IMPLT_loads_detail.Num_Line = prj_loads_detail.Num_Line &#xA;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_loads_detail SET Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_loads_detail CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_loads_head.Code, &#xA;ERP_IMPLT_loads_detail.Num_Line FROM ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;where prj_loads_head.Code = prj_loads_detail.Code &#xA;and ERP_IMPLT_loads_detail.Num_Line = prj_loads_detail.Num_Line and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\loads_head"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="loads_head"
      DTS:DTSID="{af4c21a8-3264-49a5-bc6e-d0b660c1c793}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="loads_head"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA EXTENDIDA&#xA;-- En este caso empezamos por la Tabla extendida porque es donde se encuentra el Code_ofClient.&#xA;-- Por este motivo no existe una FK en el campo Code con LOADS_HEAD&#xA;&#xA;-- No hay carga inicial de Cargas&#xA;-- Alta&#xA;INSERT INTO prj_loads_head (Create_User, Create_Date, Modify_User, Modify_Date,  &#xA;Platform,  &#xA;Code_Warehouse2, Code_Type2, &#xA;Code,&#xA;Code_War, &#xA;Type_Mov,&#xA;Doc_Ref, &#xA; Order_Tras, Del_Number,&#xA;Date_Con, Code_ofClient, Code_Sales_Org)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA; View_System_Fields_ERP.Platform,   &#xA; Code_Warehouse2, Code_Type2,&#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_loads_head.Code_ofClient) + 100000 as varchar(8)) as Code, &#xA;&#x9; Code_War, Type_Mov,&#xA;&#x9; Doc_Ref, Order_Tras, Del_Number, &#xA;&#x9; Date_Con, ERP_IMPLT_loads_head.Code as Code_ofClient, &#xA;&#x9; ERP_IMPLT_loads_head.Code_Sales_Org&#xA;FROM        ERP_IMPLT_loads_head left join warehouses on warehouses.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse2 CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from prj_loads_head where Code = ERP_IMPLT_loads_head.Code) &#xA;GO&#xA;-- Modificación&#xA;UPDATE prj_loads_head SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;&#x9;&#x9;Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, &#xA;&#x9;&#x9;Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code = MOD.Code,&#xA;&#x9;&#x9;Code_Warehouse2 = MOD.Code_Warehouse2, &#xA;&#x9;&#x9;Code_Type2 = MOD.Code_Type2, Date_Con = MOD.Date_Con, &#xA;&#x9;&#x9;Doc_Ref = MOD.Doc_Ref, Code_War = MOD.Code_War, Type_Mov = MOD.Type_Mov, &#xA;&#x9;&#x9;Order_Tras = MOD.Order_Tras, Del_Number = MOD.Del_Number,&#xA;&#x9;&#x9;Code_ofClient = MOD.Code_ofClient,&#xA;&#x9;&#x9;Code_Sales_Org = MOD.Code_Sales_Org&#xA;FROM&#xA;(SELECT ERP_IMPLT_loads_head.Code, Code_Warehouse2, Code_Type2, Date_Con, Doc_Ref, &#xA;Code_War, Type_Mov, Order_Tras, Del_Number, ERP_IMPLT_loads_head.Code as Code_ofClient,&#xA;ERP_IMPLT_loads_head.Code_Sales_Org&#xA;FROM       ERP_IMPLT_loads_head left join warehouses &#xA;on warehouses.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse2 &#xA;EXCEPT&#xA;SELECT   Code, Code_Warehouse2, Code_Type2,  &#xA;    Date_Con, Doc_Ref, Code_War, Type_Mov, Order_Tras, Del_Number, Code_ofClient, Code_Sales_Org&#xA;FROM         prj_loads_head) as MOD INNER JOIN prj_loads_head &#xA;ON MOD.Code = prj_loads_head.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_loads_head SET Delete_Date = View_System_Fields_ERP.Create_Date, &#xA;Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_loads_head CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_loads_head &#xA;where Code = prj_loads_head.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_loads_head SET Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, &#xA;Delete_User = NULL&#xA;FROM  prj_loads_head CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (&#xA;SELECT Code FROM ERP_IMPLT_loads_head where Code = prj_loads_head.Code&#xA; and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO loads_head (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, Code_Warehouse_Sou, Code_Warehouse_Des, Code_Type, Date_load, Code_Status,  Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_loads_head.Code, &#xA;&#x9;warehouses.Code as Code_Warehouse_Sou, &#xA;&#x9;warehouses_1.Code as Code_Warehouse_Des, &#xA;&#x9;ERP_IMPLT_loads_head.Code_Type, &#xA;&#x9;Date_load, Code_Status,  '1' as Transfered&#xA;FROM   ERP_IMPLT_loads_head inner join prj_loads_head&#xA;on ERP_IMPLT_loads_head.Code = prj_loads_head.Code_ofClient&#xA;and prj_loads_head.Delete_Date IS NULL&#xA;inner join warehouses &#xA;on warehouses.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse_Sou&#xA;inner join warehouses as warehouses_1 &#xA;on warehouses_1.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse_Des&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from loads_head where Code = prj_loads_head.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE loads_head SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Warehouse_Sou = MOD.Code_Warehouse_Sou, Code_Warehouse_Des = MOD.Code_Warehouse_Des, Code_Type = MOD.Code_Type, Date_load = MOD.Date_load, Code_Status = MOD.Code_Status, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT prj_loads_head.Code, warehouses.Code as Code_Warehouse_Sou, warehouses_1.Code as Code_Warehouse_Des, ERP_IMPLT_loads_head.Code_Type, Date_load, Code_Status,  '1' as Transfered&#xA;FROM   ERP_IMPLT_loads_head inner join prj_loads_head on ERP_IMPLT_loads_head.Code = prj_loads_head.Code_ofClient&#xA;inner join warehouses on warehouses.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse_Sou&#xA;inner join warehouses as warehouses_1 on warehouses_1.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse_Des &#xA;EXCEPT&#xA;SELECT  Code, Code_Warehouse_Sou, Code_Warehouse_Des, Code_Type, Date_load, Code_Status,  Transfered&#xA;FROM         loads_head) as MOD INNER JOIN loads_head ON MOD.Code = loads_head.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE loads_head SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  loads_head CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_loads_head.Code FROM ERP_IMPLT_loads_head &#xA;inner join prj_loads_head on ERP_IMPLT_loads_head.Code = prj_loads_head.Code&#xA;where prj_loads_head.Code = loads_head.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE loads_head SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  loads_head CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_loads_head.Code &#xA;FROM ERP_IMPLT_loads_head inner join prj_loads_head &#xA;on ERP_IMPLT_loads_head.Code = prj_loads_head.Code&#xA;where prj_loads_head.Code = loads_head.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\loads_orders"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="loads_orders"
      DTS:DTSID="{22693c3d-5aad-429a-b97c-929b9e5078de}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="loads_orders"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- No existe caga inicial de las Cargas&#xA;&#xA;-- Alta&#xA;INSERT INTO loads_orders (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code_Load, Order_Num)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_loads_head.Code as Code_Load, prj_orders_header.Order_Num &#xA;FROM   ERP_IMPLT_loads_orders inner join prj_loads_head on ERP_IMPLT_loads_orders.Code_Load = prj_loads_head.Code_ofClient &#xA;inner join prj_orders_header on prj_orders_header.Order_Num_ofClient = ERP_IMPLT_loads_orders.Order_Num&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Load, Order_Num from loads_orders where Code = prj_loads_head.Code and Order_Num = prj_orders_header.Order_Num)&#xA;GO&#xA;&#xA;-- Modificación&#xA;-- No exite modificación ya que todos los campos que no son de sistema son claves&#xA;&#xA;-- Baja&#xA;UPDATE loads_orders SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  loads_orders CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_loads_head.Code, prj_orders_header.Order_Num FROM ERP_IMPLT_loads_orders inner join prj_loads_head on ERP_IMPLT_loads_orders.Code_Load = prj_loads_head.Code_ofClient&#xA;inner join prj_orders_header on ERP_IMPLT_loads_orders.Order_Num = prj_orders_header.Order_Num_ofClient&#xA;where prj_loads_head.Code = loads_orders.Code_Load and prj_orders_header.Order_Num = loads_orders.Order_Num and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE loads_orders SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  loads_orders CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_loads_head.Code, prj_orders_header.Order_Num FROM ERP_IMPLT_loads_orders inner join prj_loads_head on ERP_IMPLT_loads_orders.Code_Load = prj_loads_head.Code_ofClient&#xA;inner join prj_orders_header on ERP_IMPLT_loads_orders.Order_Num = prj_orders_header.Order_Num_ofClient&#xA;where prj_loads_head.Code = loads_orders.Code_Load and prj_orders_header.Order_Num = loads_orders.Order_Num and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Modificación cliente"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Modificación cliente"
      DTS:DTSID="{fd485fc6-d719-4817-9474-ad68c80ab89e}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Modificación cliente"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Para asegurar que toda la información de los clientes viaja a los terminales cuando se recibe una modificación actualizamos&#xA;-- el Modify_Date de las tablas relacionadas poniendo el más moderno&#xA;-- EN BASE A ACCOUNTS&#xA;UPDATE prj_accounts set Modify_Date = accounts.Modify_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         accounts ON prj_accounts.Code = accounts.Code AND prj_accounts.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = accounts.Modify_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         accounts ON accounts_org.Code_Account = accounts.Code AND accounts_org.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = accounts.Modify_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         accounts ON prj_accounts_organization.Code_Account = accounts.Code AND prj_accounts_organization.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = accounts.Modify_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         accounts ON accounts_organization.Code_Account = accounts.Code AND accounts_organization.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = accounts.Modify_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         accounts ON prj_accounts_tax.Code_Account = accounts.Code AND prj_accounts_tax.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = accounts.Modify_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         accounts ON route_accounts.Code_Account = accounts.Code AND route_accounts.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;-- EN BASE A PRJ_ACCOUNTS&#xA;UPDATE accounts set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            accounts INNER JOIN&#xA;                         prj_accounts ON prj_accounts.Code = accounts.Code AND accounts.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         prj_accounts ON accounts_org.Code_Account = prj_accounts.Code AND accounts_org.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         prj_accounts ON prj_accounts_organization.Code_Account = prj_accounts.Code AND prj_accounts_organization.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         prj_accounts ON accounts_organization.Code_Account = prj_accounts.Code AND accounts_organization.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         prj_accounts ON prj_accounts_tax.Code_Account = prj_accounts.Code AND prj_accounts_tax.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         prj_accounts ON route_accounts.Code_Account = prj_accounts.Code AND route_accounts.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;-- EN BASE A ACCOUNTS_ORG&#xA;UPDATE accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts.Code AND accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts.Code AND prj_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_organization.Code_Account AND prj_accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_organization.Code_Account AND accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_tax.Code_Account AND prj_accounts_tax.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = route_accounts.Code_Account AND route_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;-- EN BASE A PRJ_ACCOUNTS_ORGANIZATION&#xA;UPDATE accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts.Code AND accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts.Code AND prj_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_org.Code_Account AND accounts_org.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_organization.Code_Account AND accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_tax.Code_Account AND prj_accounts_tax.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = route_accounts.Code_Account AND route_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;-- EN BASE A ACCOUNTS_ORGANIZATION&#xA;UPDATE accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts.Code AND accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts.Code AND prj_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_org.Code_Account AND accounts_org.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_organization.Code_Account AND prj_accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_tax.Code_Account AND prj_accounts_tax.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = route_accounts.Code_Account AND route_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;-- EN BASE A PRJ_ACCOUNTS_TAX&#xA;UPDATE accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts.Code AND accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts.Code AND prj_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_org.Code_Account AND accounts_org.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_organization.Code_Account AND prj_accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_organization.Code_Account AND accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = route_accounts.Code_Account AND route_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;-- EN BASE A ROUTE_ACCOUNTS&#xA;UPDATE accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts.Code AND accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts.Code AND prj_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_org.Code_Account AND accounts_org.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_organization.Code_Account AND prj_accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_organization.Code_Account AND accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_tax.Code_Account AND prj_accounts_tax.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Precios Usuario"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Precios Usuario"
      DTS:Disabled="True"
      DTS:DTSID="{a44b97d2-a7e3-4361-bbbb-da196aa86731}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Precios Usuario"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Creamos la tabla de trabajo prj_pricing_TW_tables_seller que es la tabla de precios por cada vendedor&#xA;-- Se crea para que el paquete de exportación sea más rápido y es por vendedor porque es algo que se recibe del ERP&#xA;-- Esto hay que modificarlo en cada proyecto, si se va a utilizar (en las exportaciones de datos)&#xA;-- Borrado de tabla de trabajo&#xA;Truncate table prj_pricing_TW_tables_seller&#xA;GO&#xA;&#xA;-- Carga de la tabla&#xA;INSERT INTO prj_pricing_TW_tables_seller (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Secuence, Code_Table, ValueKey, Code1, Code2, Code3, &#xA;                      Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_Fin, Price_Min, Price_Max, ID_ERP, Type_Based, Code_Currency, Unit_Measure, &#xA;                      Code_Seller)&#xA;SELECT     prj_pricing_tables.Create_User, prj_pricing_tables.Create_Date, prj_pricing_tables.Modify_User, prj_pricing_tables.Modify_Date, prj_pricing_tables.Delete_User, &#xA;                      prj_pricing_tables.Delete_Date, prj_pricing_tables.Platform, prj_pricing_tables.Secuence, prj_pricing_tables.Code_Table, prj_pricing_tables.ValueKey, &#xA;                      prj_pricing_tables.Code1, prj_pricing_tables.Code2, prj_pricing_tables.Code3, prj_pricing_tables.Code4, prj_pricing_tables.Code5, prj_pricing_tables.Code6, &#xA;                      prj_pricing_tables.Code7, prj_pricing_tables.Code8, prj_pricing_tables.Value, prj_pricing_tables.Base, prj_pricing_tables.Date_Ini, prj_pricing_tables.Date_Fin, &#xA;                      prj_pricing_tables.Price_Min, prj_pricing_tables.Price_Max, prj_pricing_tables.ID_ERP, prj_pricing_tables.Type_Based, prj_pricing_tables.Code_Currency, &#xA;                      prj_pricing_tables.Unit_Measure, Sel_Sale.Code_Seller&#xA;FROM         prj_pricing_tables CROSS JOIN&#xA;                          (SELECT     Code AS Code_Seller&#xA;                            FROM          sellers&#xA;                            WHERE      (Delete_Date IS NULL) AND (Code_Type IN ('02', '03', '04', '08', '09', '13'))) AS Sel_Sale&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_accounts_credit"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_accounts_credit"
      DTS:DTSID="{843ebe5a-38d8-4b43-931a-83115ab94f65}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_accounts_credit"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_accounts_credit (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Credit_Limit, Credit_Consum, Code_Plant)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, Credit_Limit, Credit_Consum, Code_Plant&#xA;FROM        ERP_IMPLT_accounts_credit inner join accounts on ERP_IMPLT_accounts_credit.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account from prj_accounts_credit where Code_Account = accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts_credit SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Credit_Limit = MOD.Credit_Limit, Credit_Consum = MOD.Credit_Consum, Code_Plant = MOD.Code_Plant&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, Credit_Limit, Credit_Consum, Code_Plant&#xA;     FROM   ERP_IMPLT_accounts_credit inner join accounts on ERP_IMPLT_accounts_credit.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Credit_Limit, Credit_Consum, Code_Plant&#xA;FROM         prj_accounts_credit) as MOD INNER JOIN prj_accounts_credit ON MOD.Code_Account = prj_accounts_credit.Code_Account CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_accounts_credit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_credit.Code_Account FROM ERP_IMPLT_accounts_credit inner join accounts on ERP_IMPLT_accounts_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_credit.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_accounts_credit SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_accounts_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_credit.Code_Account FROM ERP_IMPLT_accounts_credit inner join accounts on ERP_IMPLT_accounts_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_credit.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_accounts_organ_credit"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_accounts_organ_credit"
      DTS:DTSID="{330f420f-489d-402e-80e3-67e1573e98ec}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_accounts_organ_credit"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_accounts_organ_credit (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Credit_Limit, Credit_Consum, Code_Plant)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_organ_credit.Code_Unit_Org, ERP_IMPLT_accounts_organ_credit.Code_Sales_Org, &#xA;&#x9;Credit_Limit, Credit_Consum, NULL as Code_Plant&#xA;FROM        ERP_IMPLT_accounts_organ_credit inner join accounts on ERP_IMPLT_accounts_organ_credit.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org from prj_accounts_organ_credit where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_organ_credit.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_organ_credit.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts_organ_credit SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Credit_Limit = MOD.Credit_Limit, Credit_Consum = MOD.Credit_Consum&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_accounts_organ_credit.Code_Unit_Org, ERP_IMPLT_accounts_organ_credit.Code_Sales_Org, &#xA;&#x9;Credit_Limit, Credit_Consum&#xA;     FROM   ERP_IMPLT_accounts_organ_credit inner join accounts on ERP_IMPLT_accounts_organ_credit.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Unit_Org, Code_Sales_Org, Credit_Limit, Credit_Consum&#xA;FROM         prj_accounts_organ_credit) as MOD INNER JOIN prj_accounts_organ_credit ON MOD.Code_Account = prj_accounts_organ_credit.Code_Account and MOD.Code_Unit_Org = prj_accounts_organ_credit.Code_Unit_Org and MOD.Code_Sales_Org = prj_accounts_organ_credit.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_accounts_organ_credit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_organ_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_organ_credit.Code_Account FROM ERP_IMPLT_accounts_organ_credit inner join accounts on ERP_IMPLT_accounts_organ_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_organ_credit.Code_Account and ERP_IMPLT_accounts_organ_credit.Code_Unit_Org = prj_accounts_organ_credit.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organ_credit.Code_Sales_Org = prj_accounts_organ_credit.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_accounts_organ_credit SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_accounts_organ_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_organ_credit.Code_Account FROM ERP_IMPLT_accounts_organ_credit inner join accounts on ERP_IMPLT_accounts_organ_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_organ_credit.Code_Account and ERP_IMPLT_accounts_organ_credit.Code_Unit_Org = prj_accounts_organ_credit.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organ_credit.Code_Sales_Org = prj_accounts_organ_credit.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_accounts_organ_credit CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_accounts_organ_credit CI"
      DTS:DTSID="{61b32e81-cde9-465f-ba3c-387be81e4b73}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_accounts_organ_credit CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="32">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_accounts_organ_credit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_organ_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_organ_credit.Code_Account FROM ERP_IMPLT_accounts_organ_credit inner join accounts on ERP_IMPLT_accounts_organ_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_organ_credit.Code_Account and ERP_IMPLT_accounts_organ_credit.Code_Unit_Org = prj_accounts_organ_credit.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organ_credit.Code_Sales_Org = prj_accounts_organ_credit.Code_Sales_Org ) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_accounts_tax"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_accounts_tax"
      DTS:DTSID="{cca77409-dae4-4501-9b65-726b56346e86}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_accounts_tax"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_accounts_tax (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Country, Type, TaxClassification, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_tax.Code_Country, Type, TaxClassification, '1' as Transfered&#xA;FROM        ERP_IMPLT_accounts_tax inner join accounts on ERP_IMPLT_accounts_tax.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Country, Type from prj_accounts_tax where Code_Account = accounts.Code and &#xA;Code_Country = ERP_IMPLT_accounts_tax.Code_Country and Type = ERP_IMPLT_accounts_tax.Type)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts_tax SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;TaxClassification = MOD.TaxClassification, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_accounts_tax.Code_Country, Type, TaxClassification, '1' as Transfered&#xA;     FROM   ERP_IMPLT_accounts_tax inner join accounts on ERP_IMPLT_accounts_tax.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Country, Type, TaxClassification, Transfered&#xA;FROM         prj_accounts_tax) as MOD INNER JOIN prj_accounts_tax ON MOD.Code_Account = prj_accounts_tax.Code_Account and MOD.Code_Country = prj_accounts_tax.Code_Country and MOD.Type = prj_accounts_tax.Type&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_accounts_tax SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_tax.Code_Account FROM ERP_IMPLT_accounts_tax inner join accounts on ERP_IMPLT_accounts_tax.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_tax.Code_Account and ERP_IMPLT_accounts_tax.Code_Country = prj_accounts_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_tax.Type = prj_accounts_tax.Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_accounts_tax SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_accounts_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_tax.Code_Account FROM ERP_IMPLT_accounts_tax inner join accounts on ERP_IMPLT_accounts_tax.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_tax.Code_Account and ERP_IMPLT_accounts_tax.Code_Country = prj_accounts_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_tax.Type = prj_accounts_tax.Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_accounts_tax CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_accounts_tax CI"
      DTS:DTSID="{012c0d1e-ab1b-49fd-b97c-dd8787796240}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_accounts_tax CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="26">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_accounts_tax SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_tax.Code_Account FROM ERP_IMPLT_accounts_tax inner join accounts on ERP_IMPLT_accounts_tax.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_tax.Code_Account and ERP_IMPLT_accounts_tax.Code_Country = prj_accounts_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_tax.Type = prj_accounts_tax.Type) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_account_control"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_account_control"
      DTS:DTSID="{00c8dffb-07b4-4c46-a7aa-f9b4d8546942}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_account_control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_account_control (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, &#xA;&#x9;Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_control.Control1, ERP_IMPLT_accounts_control.Control2, &#xA;&#x9;ERP_IMPLT_accounts_control.Control3, &#xA;&#x9;ERP_IMPLT_accounts_control.Control4, ERP_IMPLT_accounts_control.Control5, ERP_IMPLT_accounts_control.Control6, ERP_IMPLT_accounts_control.Control7, ERP_IMPLT_accounts_control.Control8&#xA;FROM        ERP_IMPLT_accounts_control inner join accounts on ERP_IMPLT_accounts_control.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account from prj_account_control where Code_Account = accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_account_control SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Control1 = MOD.Control1, Control2 = MOD.Control2, Control3 = MOD.Control3, Control4 = MOD.Control4, &#xA;&#x9;&#x9;Control5 = MOD.Control5, Control6 = MOD.Control6, Control7 = MOD.Control7, Control8 = MOD.Control8&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_accounts_control.Control1, ERP_IMPLT_accounts_control.Control2, ERP_IMPLT_accounts_control.Control3, ERP_IMPLT_accounts_control.Control4, ERP_IMPLT_accounts_control.Control5, ERP_IMPLT_accounts_control.Control6, ERP_IMPLT_accounts_control.Control7, ERP_IMPLT_accounts_control.Control8&#xA;     FROM   ERP_IMPLT_accounts_control inner join accounts on ERP_IMPLT_accounts_control.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8&#xA;FROM         prj_account_control) as MOD INNER JOIN prj_account_control ON MOD.Code_Account = prj_account_control.Code_Account CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_account_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_account_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_control.Code_Account FROM ERP_IMPLT_accounts_control inner join accounts on ERP_IMPLT_accounts_control.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_account_control.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_account_control SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_account_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_control.Code_Account FROM ERP_IMPLT_accounts_control inner join accounts on ERP_IMPLT_accounts_control.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_account_control.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;UPDATE prj_account_control set Control3 = '1' WHERE Control3 = '100'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_account_control CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_account_control CI"
      DTS:DTSID="{c86d9804-cad1-4749-b752-6d1779f100d0}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_account_control CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="27">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_account_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_account_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_control.Code_Account FROM ERP_IMPLT_accounts_control inner join accounts on ERP_IMPLT_accounts_control.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_account_control.Code_Account) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_configuration"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_configuration"
      DTS:DTSID="{5ae78abe-f153-46c4-aac9-ec973e303fed}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_configuration"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- No hay baja, siempre tiene que existir la configuración por organización&#xA;-- Alta&#xA;INSERT INTO prj_configuration (Create_User, Create_Date, Modify_User, Modify_Date, Platform,  Code_Unit_Org, Code_Sales_Org, Time_Location, SB_1, SB_2, SB_3, Header1, Header2, Header3, Header4, Foot1, Foot2, Foot3, Foot4, Inv_to_Return, &#xA;                      Print_Funct_Ord, Print_Funct_Inv, Dep_Del, Amount_Dep, Amount_Dep_Flex, Change_Cash, A_Del_Col, A_Del_Col_Print, A_Del_Col_Last, A_Del_Col_Last_P, &#xA;                      Account_Gen_NI, Account_Gen_Amount, Act_DDP, ColL_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, Man_Print_Col, Mod_Promo_Dis, Mod_Promo, &#xA;                      Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, Coll_Dep, Man_Print_Dep, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less, Range_Col1, Range_Col2, &#xA;                      Range_Col3, Range_Col4, Max_Pen_Lock, Max_Check_Lock, Doc_Pending)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code_Unit_Org, Code_Sales_Org, Time_Location, SB_1, SB_2, SB_3, Header1, Header2, Header3, Header4, Foot1, Foot2, Foot3, Foot4, Inv_to_Return, &#xA;                      Print_Funct_Ord, Print_Funct_Inv, Dep_Del, Amount_Dep, Amount_Dep_Flex, Change_Cash, A_Del_Col, A_Del_Col_Print, A_Del_Col_Last, A_Del_Col_Last_P, &#xA;                      Account_Gen_NI, Account_Gen_Amount, Act_DDP, ColL_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, Man_Print_Col, Mod_Promo_Dis, Mod_Promo, &#xA;                      Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, Coll_Dep, Man_Print_Dep, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less, Range_Col1, Range_Col2, &#xA;                      Range_Col3, Range_Col4, Max_Pen_Lock, Max_Check_Lock, Doc_Pending&#xA;FROM         ERP_IMPLT_configuration CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Unit_Org, Code_Sales_Org FROM prj_configuration where Code_Unit_Org = ERP_IMPLT_configuration.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_configuration.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_configuration SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Time_Location = MOD.Time_Location, SB_1 = MOD.SB_1, SB_2 = MOD.SB_2, SB_3 = MOD.SB_3, Inv_to_Return = MOD.Inv_to_Return, Print_Funct_Ord = MOD.Print_Funct_Ord, &#xA;Print_Funct_Inv = MOD.Print_Funct_Inv, Dep_Del = MOD.Dep_Del, Amount_Dep = MOD.Amount_Dep, Amount_Dep_Flex = MOD.Amount_Dep_Flex, Change_Cash = MOD.Change_Cash, &#xA;A_Del_Col = MOD.A_Del_Col, A_Del_Col_Print = MOD.A_Del_Col_Print, A_Del_Col_Last = MOD.A_Del_Col_Last, A_Del_Col_Last_P = MOD.A_Del_Col_Last_P, &#xA;Account_Gen_NI = MOD.Account_Gen_NI, Account_Gen_Amount = MOD.Account_Gen_Amount, Act_DDP = MOD.Act_DDP, ColL_Print_NFC = MOD.ColL_Print_NFC, &#xA;A_Prod_Price0 = MOD.A_Prod_Price0, A_Mod_Price = MOD.A_Mod_Price, Max_Doc_Lock = MOD.Max_Doc_Lock, Man_Print_Col = MOD.Man_Print_Col, Mod_Promo_Dis = MOD.Mod_Promo_Dis, &#xA;Mod_Promo = MOD.Mod_Promo, Con_Check_Return = MOD.Con_Check_Return, Check_Return_Cred = MOD.Check_Return_Cred, Check_Return_Cash = MOD.Check_Return_Cash, &#xA;Doc_Pen_Cred = MOD.Doc_Pen_Cred, DDP_Doc_neg = MOD.DDP_Doc_neg, Coll_Dep = MOD.Coll_Dep, Man_Print_Dep = MOD.Man_Print_Dep, Man_Stock_Acc = MOD.Man_Stock_Acc, &#xA;Cop_Prin_Order = MOD.Cop_Prin_Order, Stock_Liq = MOD.Stock_Liq, Del_Route_Acc_Order = MOD.Del_Route_Acc_Order, Del_Route_Acc_Today = MOD.Del_Route_Acc_Today, &#xA;Del_Route_Acc_All = MOD.Del_Route_Acc_All, Print_NFC = MOD.Print_NFC, Mod_Date_Delivery = MOD.Mod_Date_Delivery, Manage_More = MOD.Manage_More, &#xA;Manage_Less = MOD.Manage_Less, Range_Col1 = MOD.Range_Col1, Range_Col2 = MOD.Range_Col2, Range_Col3 = MOD.Range_Col3, Range_Col4 = MOD.Range_Col4, &#xA;Max_Pen_Lock = MOD.Max_Pen_Lock, Max_Check_Lock = MOD.Max_Check_Lock, Doc_Pending = MOD.Doc_Pending&#xA;FROM&#xA;(SELECT   Code_Unit_Org, Code_Sales_Org, Time_Location, SB_1, SB_2, SB_3, Inv_to_Return, &#xA;                      Print_Funct_Ord, Print_Funct_Inv, Dep_Del, Amount_Dep, Amount_Dep_Flex, Change_Cash, A_Del_Col, A_Del_Col_Print, A_Del_Col_Last, A_Del_Col_Last_P, &#xA;                      Account_Gen_NI, Account_Gen_Amount, Act_DDP, ColL_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, Man_Print_Col, Mod_Promo_Dis, Mod_Promo, &#xA;                      Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, Coll_Dep, Man_Print_Dep, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less, Range_Col1, Range_Col2, &#xA;                      Range_Col3, Range_Col4, Max_Pen_Lock, Max_Check_Lock, Doc_Pending&#xA;FROM         ERP_IMPLT_configuration&#xA;EXCEPT&#xA;SELECT      Code_Unit_Org, Code_Sales_Org, Time_Location, SB_1, SB_2, SB_3, Inv_to_Return, &#xA;                      Print_Funct_Ord, Print_Funct_Inv, Dep_Del, Amount_Dep, Amount_Dep_Flex, Change_Cash, A_Del_Col, A_Del_Col_Print, A_Del_Col_Last, A_Del_Col_Last_P, &#xA;                      Account_Gen_NI, Account_Gen_Amount, Act_DDP, ColL_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, Man_Print_Col, Mod_Promo_Dis, Mod_Promo, &#xA;                      Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, Coll_Dep, Man_Print_Dep, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less, Range_Col1, Range_Col2, &#xA;                      Range_Col3, Range_Col4, Max_Pen_Lock, Max_Check_Lock, Doc_Pending&#xA;FROM         prj_configuration) as MOD INNER JOIN prj_configuration ON MOD.Code_Unit_Org = prj_configuration.Code_Unit_Org and MOD.Code_Sales_Org = prj_configuration.Code_Sales_Org CROSS JOIN View_System_Fields_ERP&#xA;GO " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_currency"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_currency"
      DTS:DTSID="{1d5d3aac-2e2a-4a95-a9a7-08250c1c0b32}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_currency"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_currency (Code, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT Code, Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP FROM&#xA;(SELECT     Code_Currency AS Code, Code_Currency AS Description&#xA;FROM         ERP_IMPLT_hist_orders_header&#xA;UNION&#xA;SELECT     Code_Currency AS Code, Code_Currency AS Description&#xA;FROM         ERP_IMPLT_orders_header&#xA;UNION&#xA;SELECT     Code_Currency AS Code, Code_Currency AS Description&#xA;FROM         ERP_IMPLT_pricing_tables&#xA;UNION&#xA;SELECT     Code_Currency AS Code, Code_Currency AS Description&#xA;FROM         ERP_IMPLT_accounts) as CU&#xA;where not exists (SELECT Code FROM ERP_IMPLT_currency where code = CU.Code) &#xA;and not exists (SELECT Code FROM prj_currency where code = CU.Code) and Code is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO prj_currency (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_currency CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM prj_currency where Code = ERP_IMPLT_currency.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_currency SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Description&#xA;FROM         ERP_IMPLT_currency&#xA;EXCEPT&#xA;SELECT     Code, Description&#xA;FROM         prj_currency) as MOD INNER JOIN prj_currency ON MOD.Code = prj_currency.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_currency SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_currency CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_currency where Code = prj_currency.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_currency SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_currency CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_currency where Code = prj_currency.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_currency CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_currency CI"
      DTS:DTSID="{65b17fee-fe28-4e36-85bb-2d7e0fdf780e}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_currency CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="28">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_agrupation1 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation1 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_currency where Code = accounts_agrupation1.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_header"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_header"
      DTS:DTSID="{7a736cb4-b0ad-43df-a20f-b53bf54f1baa}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_header"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- (1) Recibimos el número de pedido de Telynet. Puede que exista o no el pedido en el histórico. Las comparaciones se hacen usando Order_Num&#xA;-- (2) No recibimos el número de pedido de Telynet. Puede que exista o no el pedido en el histórico. &#xA;--     Las comparaciones se hacen usando Order_Num_ofClient y hay que generar el Order_Num&#xA;&#xA;-- Alta (1)&#xA;INSERT INTO prj_hist_orders_header (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Code_User, Code_Price_List_default, Brute_Amount, &#xA;                      Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, Code_Account_Billto, &#xA;                      Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Taxes_Req, Special_discount, Pp_discount, Volume_discount, Units_discount, Taxes_IVA, &#xA;                      Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, Code_User_Del, Code_Seller_Del, Dispatched, &#xA;                      Order_Num_ofClient, Code_Account, Code_Unit_Org, Code_Sales_Org, Order_Type, Code_Trademark, Code_Seller, Order_Date, Delivery_Date, Code_Address, &#xA;                      Code_Type_Address, Code_Currency, Code_Paymentway, Total_Amount, Total_Cost, Total_Weight, Code_Status, Net_Amount, Observations, Code_Price_List, &#xA;                      Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Num, Code_User, Code_Price_List_default, Brute_Amount, &#xA;                      Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses.Code as Code_Address_Shipto, accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, &#xA;                      accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Taxes_Req, Special_discount, Pp_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Volume_discount, Units_discount, Taxes_IVA, Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User_Del, sellers.Code as Code_Seller_Del, '1' as Dispatched, Order_Num_ofClient, accounts.Code as Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, sellers_1.Code as Code_Seller, Order_Date, Delivery_Date, addresses_3.Code as Code_Address, &#xA;                      Code_Type_Address, Code_Currency, Code_Paymentway, Total_Amount, Total_Cost, Total_Weight, ERP_IMPLT_hist_orders_header.Code_Status, Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Observations, Code_Price_List, Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes&#xA;FROM        ERP_IMPLT_hist_orders_header inner join accounts on ERP_IMPLT_hist_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_hist_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_hist_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_hist_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_hist_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_hist_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_hist_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_hist_orders_header.Code_Seller_Del = sellers.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_hist_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join addresses as addresses_3 on ERP_IMPLT_hist_orders_header.Code_Address = addresses_3.Code_ofClient&#xA;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num FROM prj_hist_orders_header where Order_Num = ERP_IMPLT_hist_orders_header.Order_Num) and Order_Num is NOT NULL&#xA;GO&#xA;&#xA;-- Alta (2)&#xA;INSERT INTO prj_hist_orders_header (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Code_User, Code_Price_List_default, Brute_Amount, &#xA;                      Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, Code_Account_Billto, &#xA;                      Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Taxes_Req, Special_discount, Pp_discount, Volume_discount, Units_discount, Taxes_IVA, &#xA;                      Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, Code_User_Del, Code_Seller_Del, Dispatched, &#xA;                      Order_Num_ofClient, Code_Account, Code_Unit_Org, Code_Sales_Org, Order_Type, Code_Trademark, Code_Seller, Order_Date, Delivery_Date, Code_Address, &#xA;                      Code_Type_Address, Code_Currency, Code_Paymentway, Total_Amount, Total_Cost, Total_Weight, Code_Status, Net_Amount, Observations, Code_Price_List, &#xA;                      Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by Order_Num_ofClient) + 100000 as varchar(8)) as Order_Num, Code_User, Code_Price_List_default, &#x9;&#x9;&#x9;&#x9;Brute_Amount,  Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses.Code as Code_Address_Shipto, accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, &#xA;                      accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Taxes_Req, Special_discount, Pp_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Volume_discount, Units_discount, Taxes_IVA, Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User_Del, sellers.Code as Code_Seller_Del, '1' as Dispatched, Order_Num_ofClient, accounts.Code as Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, sellers_1.Code as Code_Seller, Order_Date, Delivery_Date, addresses_3.Code as Code_Address, &#xA;                      Code_Type_Address, Code_Currency, Code_Paymentway, Total_Amount, Total_Cost, Total_Weight, ERP_IMPLT_hist_orders_header.Code_Status, Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Observations, Code_Price_List, Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes&#xA;FROM        ERP_IMPLT_hist_orders_header inner join accounts on ERP_IMPLT_hist_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_hist_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_hist_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_hist_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_hist_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_hist_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_hist_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_hist_orders_header.Code_Seller_Del = sellers.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_hist_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join addresses as addresses_3 on ERP_IMPLT_hist_orders_header.Code_Address = addresses_3.Code_ofClient&#xA;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num_ofClient FROM prj_hist_orders_header where Order_Num_ofClient = ERP_IMPLT_hist_orders_header.Order_Num_ofClient) and Order_Num is NULL&#xA;GO&#xA;&#xA;-- Modificación (1)&#xA;UPDATE prj_hist_orders_header SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_User = MOD.Code_User, Code_Price_List_default = MOD.Code_Price_List_default, Brute_Amount = MOD.Brute_Amount, Taxes_Amount = MOD.Taxes_Amount, &#xA;&#x9;&#x9;Order_Num_Cli = MOD.Order_Num_Cli, Code_Lock = MOD.Code_Lock, Status = MOD.Status, Order_Num_Telynet = MOD.Order_Num_Telynet, &#xA;&#x9;&#x9;Code_Account_Shipto = MOD.Code_Account_Shipto, Code_Address_Shipto = MOD.Code_Address_Shipto, Code_Account_Billto = MOD.Code_Account_Billto, &#xA;        Code_Address_Billto = MOD.Code_Address_Billto, Code_Account_Payer = MOD.Code_Account_Payer, Code_Address_Payer = MOD.Code_Address_Payer, &#xA;&#x9;&#x9;Taxes_Req = MOD.Taxes_Req, Special_discount = MOD.Special_discount, Pp_discount = MOD.Pp_discount, Volume_discount = MOD.Volume_discount, &#xA;&#x9;&#x9;Units_discount = MOD.Units_discount, Taxes_IVA = MOD.Taxes_IVA, Code_ReturnCause = MOD.Code_ReturnCause, Code_Ica = MOD.Code_Ica, Invoiced = MOD.Invoiced, &#xA;&#x9;&#x9;Grouped = MOD.Grouped, OrderNum_Linked = MOD.OrderNum_Linked, Type_Document = MOD.Type_Document, Code_User_Del = MOD.Code_User_Del, &#xA;&#x9;&#x9;Code_Seller_Del = MOD.Code_Seller_Del, Dispatched = MOD.Dispatched, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, &#xA;&#x9;&#x9;Order_Type = MOD.Order_Type, Code_Trademark = MOD.Code_Trademark, Code_Seller = MOD.Code_Seller, Order_Date = MOD.Order_Date, Delivery_Date = MOD.Delivery_Date, &#xA;&#x9;&#x9;Code_Address = MOD.Code_Address, Code_Type_Address = MOD.Code_Type_Address, Code_Currency = MOD.Code_Currency, Code_Paymentway = MOD.Code_Paymentway, &#xA;&#x9;&#x9;Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, Total_Weight = MOD.Total_Weight, Code_Status = MOD.Code_Status, Net_Amount = MOD.Net_Amount, &#xA;&#x9;&#x9;Observations = MOD.Observations, Code_Price_List = MOD.Code_Price_List, Net_Amount2 = MOD.Net_Amount2, Notes_3 = MOD.Notes_3, Type_Doc = MOD.Type_Doc, &#xA;&#x9;&#x9;Type_Order = MOD.Type_Order, Notes = MOD.Notes&#xA;FROM&#xA;(SELECT Order_Num, Code_User, Code_Price_List_default, Brute_Amount, &#xA;                      Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses.Code as Code_Address_Shipto, accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, &#xA;                      accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Taxes_Req, Special_discount, Pp_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Volume_discount, Units_discount, Taxes_IVA, Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User_Del, sellers.Code as Code_Seller_Del, '1' as Dispatched, Order_Num_ofClient, accounts.Code as Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, sellers_1.Code as Code_Seller, Order_Date, Delivery_Date, addresses_3.Code as Code_Address, &#xA;                      Code_Type_Address, Code_Currency, Code_Paymentway, Total_Amount, Total_Cost, Total_Weight, ERP_IMPLT_hist_orders_header.Code_Status, Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Observations, Code_Price_List, Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes&#xA;FROM        ERP_IMPLT_hist_orders_header inner join accounts on ERP_IMPLT_hist_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_hist_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_hist_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_hist_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_hist_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_hist_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_hist_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_hist_orders_header.Code_Seller_Del = sellers.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_hist_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join addresses as addresses_3 on ERP_IMPLT_hist_orders_header.Code_Address = addresses_3.Code_ofClient&#xA;WHERE &#x9;ERP_IMPLT_hist_orders_header.Order_Num is not null&#x9;&#x9;&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Code_User, Code_Price_List_default, Brute_Amount, &#xA;                      Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Address_Shipto, Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Taxes_Req, Special_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Pp_discount, Volume_discount, Units_discount, Taxes_IVA, Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User_Del, Code_Seller_Del, Dispatched, Order_Num_ofClient, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, Code_Seller, Order_Date, Delivery_Date, Code_Address, Code_Type_Address, Code_Currency, Code_Paymentway, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Total_Amount, Total_Cost, Total_Weight, Code_Status, Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Observations, Code_Price_List, Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes&#xA;FROM         prj_hist_orders_header) as MOD INNER JOIN prj_hist_orders_header ON MOD.Order_Num = prj_hist_orders_header.Order_Num CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Modificación (2)&#xA;UPDATE prj_hist_orders_header SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_User = MOD.Code_User, Code_Price_List_default = MOD.Code_Price_List_default, Brute_Amount = MOD.Brute_Amount, Taxes_Amount = MOD.Taxes_Amount, &#xA;&#x9;&#x9;Order_Num_Cli = MOD.Order_Num_Cli, Code_Lock = MOD.Code_Lock, Status = MOD.Status, Order_Num_Telynet = MOD.Order_Num_Telynet, &#xA;&#x9;&#x9;Code_Account_Shipto = MOD.Code_Account_Shipto, Code_Address_Shipto = MOD.Code_Address_Shipto, Code_Account_Billto = MOD.Code_Account_Billto, &#xA;        Code_Address_Billto = MOD.Code_Address_Billto, Code_Account_Payer = MOD.Code_Account_Payer, Code_Address_Payer = MOD.Code_Address_Payer, &#xA;&#x9;&#x9;Taxes_Req = MOD.Taxes_Req, Special_discount = MOD.Special_discount, Pp_discount = MOD.Pp_discount, Volume_discount = MOD.Volume_discount, &#xA;&#x9;&#x9;Units_discount = MOD.Units_discount, Taxes_IVA = MOD.Taxes_IVA, Code_ReturnCause = MOD.Code_ReturnCause, Code_Ica = MOD.Code_Ica, Invoiced = MOD.Invoiced, &#xA;&#x9;&#x9;Grouped = MOD.Grouped, OrderNum_Linked = MOD.OrderNum_Linked, Type_Document = MOD.Type_Document, Code_User_Del = MOD.Code_User_Del, &#xA;&#x9;&#x9;Code_Seller_Del = MOD.Code_Seller_Del, Dispatched = MOD.Dispatched, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, &#xA;&#x9;&#x9;Order_Type = MOD.Order_Type, Code_Trademark = MOD.Code_Trademark, Code_Seller = MOD.Code_Seller, Order_Date = MOD.Order_Date, Delivery_Date = MOD.Delivery_Date, &#xA;&#x9;&#x9;Code_Address = MOD.Code_Address, Code_Type_Address = MOD.Code_Type_Address, Code_Currency = MOD.Code_Currency, Code_Paymentway = MOD.Code_Paymentway, &#xA;&#x9;&#x9;Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, Total_Weight = MOD.Total_Weight, Code_Status = MOD.Code_Status, Net_Amount = MOD.Net_Amount, &#xA;&#x9;&#x9;Observations = MOD.Observations, Code_Price_List = MOD.Code_Price_List, Net_Amount2 = MOD.Net_Amount2, Notes_3 = MOD.Notes_3, Type_Doc = MOD.Type_Doc, &#xA;&#x9;&#x9;Type_Order = MOD.Type_Order, Notes = MOD.Notes&#xA;FROM&#xA;(SELECT Code_User, Code_Price_List_default, Brute_Amount, &#xA;                      Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses.Code as Code_Address_Shipto, accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, &#xA;                      accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Taxes_Req, Special_discount, Pp_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Volume_discount, Units_discount, Taxes_IVA, Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User_Del, sellers.Code as Code_Seller_Del, '1' as Dispatched, Order_Num_ofClient, accounts.Code as Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, sellers_1.Code as Code_Seller, Order_Date, Delivery_Date, addresses_3.Code as Code_Address, &#xA;                      Code_Type_Address, Code_Currency, Code_Paymentway, Total_Amount, Total_Cost, Total_Weight, ERP_IMPLT_hist_orders_header.Code_Status, Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Observations, Code_Price_List, Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes&#xA;FROM        ERP_IMPLT_hist_orders_header inner join accounts on ERP_IMPLT_hist_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_hist_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_hist_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_hist_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_hist_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_hist_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_hist_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_hist_orders_header.Code_Seller_Del = sellers.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_hist_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join addresses as addresses_3 on ERP_IMPLT_hist_orders_header.Code_Address = addresses_3.Code_ofClient&#xA;WHERE &#x9;ERP_IMPLT_hist_orders_header.Order_Num is null&#x9;&#x9;&#xA;     EXCEPT&#xA;     SELECT  Code_User, Code_Price_List_default, Brute_Amount, &#xA;                      Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Address_Shipto, Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Taxes_Req, Special_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Pp_discount, Volume_discount, Units_discount, Taxes_IVA, Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User_Del, Code_Seller_Del, Dispatched, Order_Num_ofClient, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, Code_Seller, Order_Date, Delivery_Date, Code_Address, Code_Type_Address, Code_Currency, Code_Paymentway, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Total_Amount, Total_Cost, Total_Weight, Code_Status, Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Observations, Code_Price_List, Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes&#xA;FROM         prj_hist_orders_header) as MOD INNER JOIN prj_hist_orders_header ON MOD.Order_Num_ofClient = prj_hist_orders_header.Order_Num_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja (1)&#xA;UPDATE prj_hist_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num = prj_hist_orders_header.Order_Num and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Baja (2)&#xA;UPDATE prj_hist_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num_ofClient = prj_hist_orders_header.Order_Num_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja (1)&#xA;UPDATE prj_hist_orders_header SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num = prj_hist_orders_header.Order_Num and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Quitar Baja (2)&#xA;UPDATE prj_hist_orders_header SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num_ofClient = prj_hist_orders_header.Order_Num_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_header CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_header CI"
      DTS:DTSID="{3613a109-51ad-428f-81e7-2bd03fc1b6e7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_header CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="29">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial (1)&#xA;UPDATE prj_hist_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num = prj_hist_orders_header.Order_Num ) &#xA;GO&#xA;&#xA;-- Borrado por carga inicial (2)&#xA;UPDATE prj_hist_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num_ofClient = prj_hist_orders_header.Order_Num_ofClient) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_lines"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_lines"
      DTS:DTSID="{1e567cb7-a188-4670-bf63-e8fd23ecc2e9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_lines"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_hist_orders_lines (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Num_Line, Code_Account, Order_Date, Code_Product,  Factor_Conversion, Br_Price, Price_N_Promo, Manual, &#xA;                      Brute_Amount, Taxes_Amount, Quantity_Unit, Code_Promotion, Quantity_Promotion, Code_Price_List_default, Code_Price_List, Code_ReturnCause, Code_Lock, &#xA;                      Observations, Transfered, Quantity_promo_def, Quantity_promo_def_gif, Discount_promo_def, Price_promo_def, Invoiced, Quantity_Order, Quantity_Order_Gift, &#xA;                      TaxClassification, Quantity_Gift, IVA_Amount, Req_Amount, Unit_Type_Sel, Price, Total_Discount, &#xA;                      Total_Amount, Total_Cost, Total_Weight, Quantity, Sale_Type, Code_Status, Unit_Type_Inv, Net_Amount, Total_Com, Per_Com)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_hist_orders_header.Order_Num, Num_Line, accounts.code as Code_Account, ERP_IMPLT_hist_orders_lines.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Factor_Conversion, Br_Price, Price_N_Promo, Manual, ERP_IMPLT_hist_orders_lines.Brute_Amount, ERP_IMPLT_hist_orders_lines.Taxes_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_Unit, ERP_IMPLT_hist_orders_lines.Code_Promotion, ERP_IMPLT_hist_orders_lines.Quantity_Promotion, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Code_Price_List_default, ERP_IMPLT_hist_orders_lines.Code_Price_List, ERP_IMPLT_hist_orders_lines.Code_ReturnCause, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Code_Lock, ERP_IMPLT_hist_orders_lines.Observations, '1' as Transfered, ERP_IMPLT_hist_orders_lines.Quantity_promo_def, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_promo_def_gif, ERP_IMPLT_hist_orders_lines.Discount_promo_def, ERP_IMPLT_hist_orders_lines.Price_promo_def, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Invoiced, ERP_IMPLT_hist_orders_lines.Quantity_Order, ERP_IMPLT_hist_orders_lines.Quantity_Order_Gift, &#xA;    ERP_IMPLT_hist_orders_lines.TaxClassification, ERP_IMPLT_hist_orders_lines.Quantity_Gift, ERP_IMPLT_hist_orders_lines.IVA_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Req_Amount, ERP_IMPLT_hist_orders_lines.Unit_Type_Sel, ERP_IMPLT_hist_orders_lines.Price, ERP_IMPLT_hist_orders_lines.Total_Discount, &#xA;    ERP_IMPLT_hist_orders_lines.Total_Amount, ERP_IMPLT_hist_orders_lines.Total_Cost, ERP_IMPLT_hist_orders_lines.Total_Weight, ERP_IMPLT_hist_orders_lines.Quantity, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Sale_Type, ERP_IMPLT_hist_orders_lines.Code_Status, ERP_IMPLT_hist_orders_lines.Unit_Type_Inv, ERP_IMPLT_hist_orders_lines.Net_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Total_Com, ERP_IMPLT_hist_orders_lines.Per_Com&#xA;FROM        ERP_IMPLT_hist_orders_lines inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_lines.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;inner join Products on ERP_IMPLT_hist_orders_lines.Code_Product = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_hist_orders_lines.Code_Account = accounts.Code_ofClient&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num, Num_Line from prj_hist_orders_lines where Order_Num = prj_hist_orders_header.Order_Num and &#xA;Num_Line = ERP_IMPLT_hist_orders_lines.Num_Line)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_hist_orders_lines SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Order_Date = MOD.Order_Date, Code_Product = MOD.Code_Product, Factor_Conversion = MOD.Factor_Conversion, Br_Price = MOD.Br_Price, &#xA;&#x9;&#x9;Price_N_Promo = MOD.Price_N_Promo, Manual = MOD.Manual, Brute_Amount = MOD.Brute_Amount, Taxes_Amount = MOD.Taxes_Amount, Quantity_Unit = MOD.Quantity_Unit, &#xA;&#x9;&#x9;Code_Promotion = MOD.Code_Promotion, Quantity_Promotion = MOD.Quantity_Promotion, Code_Price_List_default = MOD.Code_Price_List_default, &#xA;&#x9;&#x9;Code_Price_List = MOD.Code_Price_List, Code_ReturnCause = MOD.Code_ReturnCause, Code_Lock = MOD.Code_Lock, Observations = MOD.Observations, &#xA;&#x9;&#x9;Quantity_promo_def = MOD.Quantity_promo_def, Quantity_promo_def_gif = MOD.Quantity_promo_def_gif, Discount_promo_def = MOD.Discount_promo_def, &#xA;&#x9;&#x9;Price_promo_def = MOD.Price_promo_def, Invoiced = MOD.Invoiced, Quantity_Order = MOD.Quantity_Order, Quantity_Order_Gift = MOD.Quantity_Order_Gift, &#xA;        TaxClassification = MOD.TaxClassification, Quantity_Gift = MOD.Quantity_Gift, IVA_Amount = MOD.IVA_Amount, Req_Amount = MOD.Req_Amount, &#xA;&#x9;&#x9;Unit_Type_Sel = MOD.Unit_Type_Sel, Price = MOD.Price, Total_Discount = MOD.Total_Discount, Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, &#xA;&#x9;&#x9;Total_Weight = MOD.Total_Weight, Quantity = MOD.Quantity, Sale_Type = MOD.Sale_Type, Code_Status = MOD.Code_Status, Unit_Type_Inv = MOD.Unit_Type_Inv, &#xA;&#x9;&#x9;Net_Amount = MOD.Net_Amount, Total_Com = MOD.Total_Com, Per_Com = MOD.Per_Com&#xA;FROM&#xA;(SELECT distinct prj_hist_orders_header.Order_Num, Num_Line, accounts.code as Code_Account, ERP_IMPLT_hist_orders_lines.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Factor_Conversion, Br_Price, Price_N_Promo, Manual, ERP_IMPLT_hist_orders_lines.Brute_Amount, ERP_IMPLT_hist_orders_lines.Taxes_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_Unit, ERP_IMPLT_hist_orders_lines.Code_Promotion, ERP_IMPLT_hist_orders_lines.Quantity_Promotion, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Code_Price_List_default, ERP_IMPLT_hist_orders_lines.Code_Price_List, ERP_IMPLT_hist_orders_lines.Code_ReturnCause, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Code_Lock, ERP_IMPLT_hist_orders_lines.Observations, '1' as Transfered, ERP_IMPLT_hist_orders_lines.Quantity_promo_def, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_promo_def_gif, ERP_IMPLT_hist_orders_lines.Discount_promo_def, ERP_IMPLT_hist_orders_lines.Price_promo_def, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Invoiced, ERP_IMPLT_hist_orders_lines.Quantity_Order, ERP_IMPLT_hist_orders_lines.Quantity_Order_Gift, &#xA;    ERP_IMPLT_hist_orders_lines.TaxClassification, ERP_IMPLT_hist_orders_lines.Quantity_Gift, ERP_IMPLT_hist_orders_lines.IVA_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Req_Amount, ERP_IMPLT_hist_orders_lines.Unit_Type_Sel, ERP_IMPLT_hist_orders_lines.Price, ERP_IMPLT_hist_orders_lines.Total_Discount, &#xA;    ERP_IMPLT_hist_orders_lines.Total_Amount, ERP_IMPLT_hist_orders_lines.Total_Cost, ERP_IMPLT_hist_orders_lines.Total_Weight, ERP_IMPLT_hist_orders_lines.Quantity, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Sale_Type, ERP_IMPLT_hist_orders_lines.Code_Status, ERP_IMPLT_hist_orders_lines.Unit_Type_Inv, ERP_IMPLT_hist_orders_lines.Net_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Total_Com, ERP_IMPLT_hist_orders_lines.Per_Com&#xA;FROM        ERP_IMPLT_hist_orders_lines inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_lines.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;inner join Products on ERP_IMPLT_hist_orders_lines.Code_Product = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_hist_orders_lines.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Num_Line, Code_Account, Order_Date, Code_Product,  Factor_Conversion, Br_Price, Price_N_Promo, Manual, &#xA;&#x9;&#x9;Brute_Amount, Taxes_Amount, Quantity_Unit, Code_Promotion, Quantity_Promotion, Code_Price_List_default, Code_Price_List, Code_ReturnCause, Code_Lock, &#xA;        Observations, Transfered, Quantity_promo_def, Quantity_promo_def_gif, Discount_promo_def, Price_promo_def, Invoiced, Quantity_Order, Quantity_Order_Gift, &#xA;        TaxClassification, Quantity_Gift, IVA_Amount, Req_Amount, Unit_Type_Sel, Price, Total_Discount, &#xA;        Total_Amount, Total_Cost, Total_Weight, Quantity, Sale_Type, Code_Status, Unit_Type_Inv, Net_Amount, Total_Com, Per_Com&#xA;     FROM prj_hist_orders_lines) as MOD &#xA;&#x9;&#x9;INNER JOIN prj_hist_orders_lines ON MOD.Order_Num = prj_hist_orders_lines.Order_Num and MOD.Num_Line = prj_hist_orders_lines.Num_Line &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_hist_orders_lines SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_lines CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_hist_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_hist_orders_lines inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_lines.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_lines.Order_Num and ERP_IMPLT_hist_orders_lines.Num_Line = prj_hist_orders_lines.Num_Line&#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_hist_orders_lines SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_hist_orders_lines CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_hist_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_hist_orders_lines inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_lines.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_lines.Order_Num and ERP_IMPLT_hist_orders_lines.Num_Line = prj_hist_orders_lines.Num_Line and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_lines CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_lines CI"
      DTS:DTSID="{8475287f-468c-44a8-8b01-b8eccfe86a9a}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_lines CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="30">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_hist_orders_lines SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_lines CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT prj_hist_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_hist_orders_lines inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_lines.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_lines.Order_Num and ERP_IMPLT_hist_orders_lines.Num_Line = prj_hist_orders_lines.Num_Line) &#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_sec"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_sec"
      DTS:DTSID="{6ac90f38-8e85-425b-b0a8-37cb4c0417d8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_sec"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_hist_orders_sec (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Num_Line, Secuence, Code_Table, Value,  Code_Account, &#xA;                      Code_Product, Orden, Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_hist_orders_header.Order_Num, Num_Line, Secuence, Code_Table, Value, accounts.code as Code_Account, products.Code as Code_Product,  &#xA;&#x9;Orden, ERP_IMPLT_hist_orders_sec.Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based&#xA;FROM        ERP_IMPLT_hist_orders_sec inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;inner join Products on ERP_IMPLT_hist_orders_sec.Code_Product = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_hist_orders_sec.Code_Account = accounts.Code_ofClient&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num, Num_Line, Secuence from prj_hist_orders_sec where Order_Num = prj_hist_orders_header.Order_Num and &#xA;Num_Line = ERP_IMPLT_hist_orders_sec.Num_Line and Secuence = ERP_IMPLT_hist_orders_sec.Secuence and Code_Table = ERP_IMPLT_hist_orders_sec.Code_Table)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_hist_orders_sec SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Value = MOD.Value, Code_Account = MOD.Code_Account, Code_Product = MOD.Code_Product, Orden = MOD.Orden, Code_Currency = MOD.Code_Currency, Unit_Measure = MOD.Unit_Measure, &#xA;&#x9;&#x9;Exclusive = MOD.Exclusive, On_Base = MOD.On_Base, Amount_Line = MOD.Amount_Line, Type_Based = MOD.Type_Based&#xA;FROM&#xA;(SELECT distinct prj_hist_orders_header.Order_Num, Num_Line, Secuence, Code_Table, Value, accounts.code as Code_Account, products.Code as Code_Product,  &#xA;&#x9;Orden, ERP_IMPLT_hist_orders_sec.Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based&#xA;FROM        ERP_IMPLT_hist_orders_sec inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;inner join Products on ERP_IMPLT_hist_orders_sec.Code_Product = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_hist_orders_sec.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Num_Line, Secuence, Code_Table, Value,  Code_Account, Code_Product, Orden, Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based&#xA;     FROM prj_hist_orders_sec) as MOD &#xA;&#x9;&#x9;INNER JOIN prj_hist_orders_sec ON MOD.Order_Num = prj_hist_orders_sec.Order_Num and MOD.Num_Line = prj_hist_orders_sec.Num_Line and MOD.Secuence = prj_hist_orders_sec.Secuence&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_hist_orders_sec SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_sec CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_hist_orders_header.Order_Num, Num_Line, Secuence FROM ERP_IMPLT_hist_orders_sec inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_sec.Order_Num and ERP_IMPLT_hist_orders_sec.Num_Line = prj_hist_orders_sec.Num_Line and ERP_IMPLT_hist_orders_sec.Secuence = prj_hist_orders_sec.Secuence&#xA;&#x9;&#x9;and ERP_IMPLT_hist_orders_sec.Code_Table = prj_hist_orders_sec.Code_Table and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_hist_orders_sec SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_hist_orders_sec CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_hist_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_hist_orders_sec inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_sec.Order_Num and ERP_IMPLT_hist_orders_sec.Num_Line = prj_hist_orders_sec.Num_Line and ERP_IMPLT_hist_orders_sec.Secuence = prj_hist_orders_sec.Secuence &#xA;&#x9;&#x9;and ERP_IMPLT_hist_orders_sec.Code_Table = prj_hist_orders_sec.Code_Table and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_sec CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_sec CI"
      DTS:DTSID="{de6ec8db-9fa1-48ed-aed7-3780ba38d881}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_sec CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="31">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_hist_orders_sec SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_sec CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT prj_hist_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_hist_orders_sec inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_sec.Order_Num and ERP_IMPLT_hist_orders_sec.Num_Line = prj_hist_orders_sec.Num_Line and ERP_IMPLT_hist_orders_sec.Secuence = prj_hist_orders_sec.Secuence and ERP_IMPLT_hist_orders_sec.Code_Table = prj_hist_orders_sec.Code_Table) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_orders_header"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_orders_header"
      DTS:DTSID="{e792ff14-1709-45aa-aa0e-040184bb97bc}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_orders_header"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- (1) Recibimos el número de pedido de Telynet. Puede que exista o no el pedido en el histórico. Las comparaciones se hacen usando Order_Num&#xA;-- (2) No recibimos el número de pedido de Telynet. Puede que exista o no el pedido en el histórico. &#xA;--     Las comparaciones se hacen usando Order_Num_ofClient y hay que generar el Order_Num&#xA;&#xA;-- Alta (1)&#xA;INSERT INTO prj_orders_header (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Code_Account, Code_Unit_Org, Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;                      Ordernum_Linked, Code_User_Del, Code_Seller_Del, Code_Promotion, Blocked, Code_User, Order_Num_ofClient, Code_Trademark, Code_Seller, Delivery_Date, &#xA;                      Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;                      Order_Num_Cli, Observations, Code_Lock, Code_ReturnCause, Status, Transfered, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, &#xA;                      Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Code_Ica, Net_Amount2, Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;                      Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;                      Code_Wholesales, Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, Name1, Name2, Phone1, Population, Code_Warehouse, Amount_Surcharge, &#xA;                      Date_Expired)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Num, accounts.Code as Code_Account, ERP_IMPLT_orders_header.Code_Unit_Org, ERP_IMPLT_orders_header.Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;                      Ordernum_Linked, Code_User_Del, sellers.Code as Code_Seller_Del, Code_Promotion, ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User, Order_Num_ofClient, Code_Trademark, sellers_1.Code as Code_Seller, Delivery_Date, &#xA;                      Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;                      Order_Num_Cli, ERP_IMPLT_orders_header.Observations, Code_Lock, Code_ReturnCause, Status, '1' as Transfered, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, addresses.Code as Code_Address_Shipto, &#xA;                      accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Code_Ica, Net_Amount2, Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;                      Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;                      accounts_4.Code as Code_Wholesales, accounts.Code as Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, ERP_IMPLT_orders_header.Name1, ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1, ERP_IMPLT_orders_header.Population, warehouses.Code as Code_Warehouse, Amount_Surcharge, &#xA;                      Date_Expired&#xA;FROM        ERP_IMPLT_orders_header inner join accounts on ERP_IMPLT_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_orders_header.Code_Seller_Del = sellers.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_4 on ERP_IMPLT_orders_header.Code_Wholesales = accounts_4.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_5 on ERP_IMPLT_orders_header.Code_Collaborator = accounts_5.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join warehouses on ERP_IMPLT_orders_header.Code_Warehouse = warehouses.Code_ofClient&#x9;&#xA;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num FROM prj_orders_header where Order_Num = ERP_IMPLT_orders_header.Order_Num) and Order_Num is NOT NULL&#xA;GO&#xA;&#xA;-- Alta (2)&#xA;INSERT INTO prj_orders_header (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Code_Account, Code_Unit_Org, Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;                      Ordernum_Linked, Code_User_Del, Code_Seller_Del, Code_Promotion, Blocked, Code_User, Order_Num_ofClient, Code_Trademark, Code_Seller, Delivery_Date, &#xA;                      Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;                      Order_Num_Cli, Observations, Code_Lock, Code_ReturnCause, Status, Transfered, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, &#xA;                      Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Code_Ica, Net_Amount2, Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;                      Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;                      Code_Wholesales, Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, Name1, Name2, Phone1, Population, Code_Warehouse, Amount_Surcharge, &#xA;                      Date_Expired)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;&#x9;&#x9;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by Order_Num_ofClient) + 10000000 as varchar(8)) as Order_Num, accounts.Code as Code_Account, ERP_IMPLT_orders_header.Code_Unit_Org, ERP_IMPLT_orders_header.Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;                      Ordernum_Linked, Code_User_Del, sellers.Code as Code_Seller_Del, Code_Promotion, ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User, Order_Num_ofClient, Code_Trademark, sellers_1.Code as Code_Seller, Delivery_Date, &#xA;                      Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;                      Order_Num_Cli, ERP_IMPLT_orders_header.Observations, Code_Lock, Code_ReturnCause, Status, '1' as Transfered, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, addresses.Code as Code_Address_Shipto, &#xA;                      accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Code_Ica, Net_Amount2, Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;                      Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;                      accounts_4.Code as Code_Wholesales, accounts.Code as Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, ERP_IMPLT_orders_header.Name1, ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1, ERP_IMPLT_orders_header.Population, warehouses.Code as Code_Warehouse, Amount_Surcharge, &#xA;                      Date_Expired&#xA;FROM        ERP_IMPLT_orders_header inner join accounts on ERP_IMPLT_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_orders_header.Code_Seller_Del = sellers.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_4 on ERP_IMPLT_orders_header.Code_Wholesales = accounts_4.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_5 on ERP_IMPLT_orders_header.Code_Collaborator = accounts_5.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join warehouses on ERP_IMPLT_orders_header.Code_Warehouse = warehouses.Code_ofClient&#x9;&#xA;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num_ofClient FROM prj_orders_header where Order_Num_ofClient = ERP_IMPLT_orders_header.Order_Num_ofClient) and Order_Num is NULL&#xA;GO&#xA;&#xA;-- Modificación (1)&#xA;UPDATE prj_orders_header SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, Order_Date = MOD.Order_Date, Order_Type = MOD.Order_Type, &#xA;&#x9;&#x9;Notes = MOD.Notes, Observations2 = MOD.Observations2, Code_Sales_Office = MOD.Code_Sales_Office, Assigned_Dispatch = MOD.Assigned_Dispatch, Dispatched = MOD.Dispatched, &#xA;&#x9;&#x9;Capacity_load = MOD.Capacity_load, Type_Document = MOD.Type_Document, Ordernum_Linked = MOD.Ordernum_Linked, Code_User_Del = MOD.Code_User_Del, Code_Seller_Del = MOD.Code_Seller_Del, &#xA;&#x9;&#x9;Code_Promotion = MOD.Code_Promotion, Blocked = MOD.Blocked, Code_User = MOD.Code_User, Code_Trademark = MOD.Code_Trademark, &#xA;&#x9;&#x9;Code_Seller = MOD.Code_Seller, Delivery_Date = MOD.Delivery_Date, Code_Currency = MOD.Code_Currency, Code_Paymentway = MOD.Code_Paymentway, Code_Price_List_default = MOD.Code_Price_List_default, &#xA;&#x9;&#x9;Code_Price_List = MOD.Code_Price_List, Brute_Amount = MOD.Brute_Amount, Net_Amount = MOD.Net_Amount, Taxes_Amount = MOD.Taxes_Amount, Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, &#xA;&#x9;&#x9;Total_Weight = MOD.Total_Weight, Order_Num_Cli = MOD.Order_Num_Cli, Observations = MOD.Observations, Code_Lock = MOD.Code_Lock, Code_ReturnCause = MOD.Code_ReturnCause, &#xA;&#x9;&#x9;Status = MOD.Status, Transfered = MOD.Transfered, Order_Num_Telynet = MOD.Order_Num_Telynet, Code_Account_Shipto = MOD.Code_Account_Shipto, Code_Address_Shipto = MOD.Code_Address_Shipto, &#xA;        Code_Account_Billto = MOD.Code_Account_Billto, Code_Address_Billto = MOD.Code_Address_Billto, Code_Account_Payer = MOD.Code_Account_Payer, Code_Address_Payer = MOD.Code_Address_Payer, &#xA;&#x9;&#x9;Code_Ica = MOD.Code_Ica, Net_Amount2 = MOD.Net_Amount2, Invoiced = MOD.Invoiced, Grouped = MOD.Grouped, Taxes_Req = MOD.Taxes_Req, Special_discount = MOD.Special_discount, &#xA;        Pp_discount = MOD.Pp_discount, Volume_discount = MOD.Volume_discount, Units_discount = MOD.Units_discount, Fiscal = MOD.Fiscal, Route = MOD.Route, Num_Order_Provider = MOD.Num_Order_Provider, &#xA;&#x9;&#x9;Notes_1 = MOD.Notes_1, Notes_2 = MOD.Notes_2, Notes_3 = MOD.Notes_3, Taxes_IVA = MOD.Taxes_IVA, Payment_Way_Changed = MOD.Payment_Way_Changed, Code_Wholesales = MOD.Code_Wholesales, &#xA;&#x9;&#x9;Code_Collaborator = MOD.Code_Collaborator, By_Phone = MOD.By_Phone, Code_Hash = MOD.Code_Hash, Charged = MOD.Charged, To_Charge = MOD.To_Charge, Name1 = MOD.Name1, Name2 = MOD.Name2, &#xA;&#x9;&#x9;Phone1 = MOD.Phone1, Population = MOD.Population, Code_Warehouse = MOD.Code_Warehouse, Amount_Surcharge = MOD.Amount_Surcharge, Date_Expired = MOD.Date_Expired&#xA;FROM&#xA;(SELECT Order_Num, accounts.Code as Code_Account, ERP_IMPLT_orders_header.Code_Unit_Org, ERP_IMPLT_orders_header.Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;                      Ordernum_Linked, Code_User_Del, sellers.Code as Code_Seller_Del, Code_Promotion, ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User, Order_Num_ofClient, Code_Trademark, sellers_1.Code as Code_Seller, Delivery_Date, &#xA;                      Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;                      Order_Num_Cli, ERP_IMPLT_orders_header.Observations, Code_Lock, Code_ReturnCause, Status, '1' as Transfered, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, addresses.Code as Code_Address_Shipto, &#xA;                      accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Code_Ica, Net_Amount2, Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;                      Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;                      accounts_4.Code as Code_Wholesales, accounts.Code as Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, ERP_IMPLT_orders_header.Name1, ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1, ERP_IMPLT_orders_header.Population, warehouses.Code as Code_Warehouse, Amount_Surcharge, &#xA;                      Date_Expired&#xA;FROM        ERP_IMPLT_orders_header inner join accounts on ERP_IMPLT_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_orders_header.Code_Seller_Del = sellers.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_4 on ERP_IMPLT_orders_header.Code_Wholesales = accounts_4.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_5 on ERP_IMPLT_orders_header.Code_Collaborator = accounts_5.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join warehouses on ERP_IMPLT_orders_header.Code_Warehouse = warehouses.Code_ofClient&#xA;WHERE &#x9;ERP_IMPLT_orders_header.Order_Num is not null&#x9;&#x9;&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Code_Account, Code_Unit_Org, &#xA;                      Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;                      Ordernum_Linked, Code_User_Del, Code_Seller_Del, Code_Promotion, Blocked, Code_User, Order_Num_ofClient, Code_Trademark, Code_Seller, Delivery_Date, &#xA;                      Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;                      Order_Num_Cli, Observations, Code_Lock, Code_ReturnCause, Status, '1' as Transfered, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, &#xA;                      Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Code_Ica, Net_Amount2, Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;                      Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;                      Code_Wholesales, Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, Name1, Name2, Phone1, Population, Code_Warehouse, Amount_Surcharge, &#xA;                      Date_Expired&#xA;FROM         prj_orders_header) as MOD INNER JOIN prj_orders_header ON MOD.Order_Num = prj_orders_header.Order_Num CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Modificación (2)&#xA;UPDATE prj_orders_header SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, Order_Date = MOD.Order_Date, Order_Type = MOD.Order_Type, &#xA;&#x9;&#x9;Notes = MOD.Notes, Observations2 = MOD.Observations2, Code_Sales_Office = MOD.Code_Sales_Office, Assigned_Dispatch = MOD.Assigned_Dispatch, Dispatched = MOD.Dispatched, &#xA;&#x9;&#x9;Capacity_load = MOD.Capacity_load, Type_Document = MOD.Type_Document, Ordernum_Linked = MOD.Ordernum_Linked, Code_User_Del = MOD.Code_User_Del, Code_Seller_Del = MOD.Code_Seller_Del, &#xA;&#x9;&#x9;Code_Promotion = MOD.Code_Promotion, Blocked = MOD.Blocked, Code_User = MOD.Code_User, Code_Trademark = MOD.Code_Trademark, &#xA;&#x9;&#x9;Code_Seller = MOD.Code_Seller, Delivery_Date = MOD.Delivery_Date, Code_Currency = MOD.Code_Currency, Code_Paymentway = MOD.Code_Paymentway, Code_Price_List_default = MOD.Code_Price_List_default, &#xA;&#x9;&#x9;Code_Price_List = MOD.Code_Price_List, Brute_Amount = MOD.Brute_Amount, Net_Amount = MOD.Net_Amount, Taxes_Amount = MOD.Taxes_Amount, Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, &#xA;&#x9;&#x9;Total_Weight = MOD.Total_Weight, Order_Num_Cli = MOD.Order_Num_Cli, Observations = MOD.Observations, Code_Lock = MOD.Code_Lock, Code_ReturnCause = MOD.Code_ReturnCause, &#xA;&#x9;&#x9;Status = MOD.Status, Transfered = MOD.Transfered, Order_Num_Telynet = MOD.Order_Num_Telynet, Code_Account_Shipto = MOD.Code_Account_Shipto, Code_Address_Shipto = MOD.Code_Address_Shipto, &#xA;        Code_Account_Billto = MOD.Code_Account_Billto, Code_Address_Billto = MOD.Code_Address_Billto, Code_Account_Payer = MOD.Code_Account_Payer, Code_Address_Payer = MOD.Code_Address_Payer, &#xA;&#x9;&#x9;Code_Ica = MOD.Code_Ica, Net_Amount2 = MOD.Net_Amount2, Invoiced = MOD.Invoiced, Grouped = MOD.Grouped, Taxes_Req = MOD.Taxes_Req, Special_discount = MOD.Special_discount, &#xA;        Pp_discount = MOD.Pp_discount, Volume_discount = MOD.Volume_discount, Units_discount = MOD.Units_discount, Fiscal = MOD.Fiscal, Route = MOD.Route, Num_Order_Provider = MOD.Num_Order_Provider, &#xA;&#x9;&#x9;Notes_1 = MOD.Notes_1, Notes_2 = MOD.Notes_2, Notes_3 = MOD.Notes_3, Taxes_IVA = MOD.Taxes_IVA, Payment_Way_Changed = MOD.Payment_Way_Changed, Code_Wholesales = MOD.Code_Wholesales, &#xA;&#x9;&#x9;Code_Collaborator = MOD.Code_Collaborator, By_Phone = MOD.By_Phone, Code_Hash = MOD.Code_Hash, Charged = MOD.Charged, To_Charge = MOD.To_Charge, Name1 = MOD.Name1, Name2 = MOD.Name2, &#xA;&#x9;&#x9;Phone1 = MOD.Phone1, Population = MOD.Population, Code_Warehouse = MOD.Code_Warehouse, Amount_Surcharge = MOD.Amount_Surcharge, Date_Expired = MOD.Date_Expired&#xA;FROM&#xA;(SELECT accounts.Code as Code_Account, ERP_IMPLT_orders_header.Code_Unit_Org, ERP_IMPLT_orders_header.Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;                      Ordernum_Linked, Code_User_Del, sellers.Code as Code_Seller_Del, Code_Promotion, ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User, Order_Num_ofClient, Code_Trademark, sellers_1.Code as Code_Seller, Delivery_Date, &#xA;                      Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;                      Order_Num_Cli, ERP_IMPLT_orders_header.Observations, Code_Lock, Code_ReturnCause, Status, '1' as Transfered, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, addresses.Code as Code_Address_Shipto, &#xA;                      accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Code_Ica, Net_Amount2, Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;                      Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;                      accounts_4.Code as Code_Wholesales, accounts.Code as Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, ERP_IMPLT_orders_header.Name1, ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1, ERP_IMPLT_orders_header.Population, warehouses.Code as Code_Warehouse, Amount_Surcharge, &#xA;                      Date_Expired&#xA;FROM        ERP_IMPLT_orders_header inner join accounts on ERP_IMPLT_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_orders_header.Code_Seller_Del = sellers.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_4 on ERP_IMPLT_orders_header.Code_Wholesales = accounts_4.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_5 on ERP_IMPLT_orders_header.Code_Collaborator = accounts_5.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join warehouses on ERP_IMPLT_orders_header.Code_Warehouse = warehouses.Code_ofClient&#xA;WHERE &#x9;ERP_IMPLT_orders_header.Order_Num is null&#x9;&#x9;&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Unit_Org, &#xA;                      Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;                      Ordernum_Linked, Code_User_Del, Code_Seller_Del, Code_Promotion, Blocked, Code_User, Order_Num_ofClient, Code_Trademark, Code_Seller, Delivery_Date, &#xA;                      Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;                      Order_Num_Cli, Observations, Code_Lock, Code_ReturnCause, Status, '1' as Transfered, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, &#xA;                      Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Code_Ica, Net_Amount2, Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;                      Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;                      Code_Wholesales, Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, Name1, Name2, Phone1, Population, Code_Warehouse, Amount_Surcharge, &#xA;                      Date_Expired&#xA;FROM         prj_orders_header) as MOD INNER JOIN prj_orders_header ON MOD.Order_Num_ofClient = prj_orders_header.Order_Num_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja (1)&#xA;UPDATE prj_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_orders_header &#xA;&#x9;&#x9;where Order_Num = prj_orders_header.Order_Num and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Baja (2)&#xA;UPDATE prj_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_orders_header &#xA;&#x9;&#x9;where Order_Num_ofClient = prj_orders_header.Order_Num_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja (1)&#xA;UPDATE prj_orders_header SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_orders_header &#xA;&#x9;&#x9;where Order_Num = prj_orders_header.Order_Num and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Quitar Baja (2)&#xA;UPDATE prj_orders_header SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_orders_header &#xA;&#x9;&#x9;where Order_Num_ofClient = prj_orders_header.Order_Num_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_orders_lines"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_orders_lines"
      DTS:DTSID="{ea960f4c-c99d-45d4-96a5-616fa929df7d}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_orders_lines"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_orders_lines (Create_User, Create_Date, Modify_User, Modify_Date, Platform,  Order_Num, Num_Line, Code_Account, Order_Date, Code_Product, Lot_Number, Discount_Manual, Unit_Type_Sel, &#xA;                      Unit_Type_Inv, Factor_Conversion, Br_Price, Price, Price_N_Promo, Manual, Total_Discount, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Quantity, Quantity_Unit, Code_Promotion, Quantity_Promotion, Code_Price_List_default, Code_Price_List, Code_ReturnCause, Sale_Type, Code_Lock, Observations, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Transfered, Quantity_promo_def, Quantity_promo_def_gif, Discount_promo_def, Price_promo_def, Invoiced, Quantity_Order, Quantity_Order_Gift, TaxClassification, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Quantity_Gift, IVA_Amount, Req_Amount, Total_Com, Per_Com, New_Sale, Price_Ret)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_orders_header.Order_Num, Num_Line, accounts.code as Code_Account, ERP_IMPLT_orders_lines.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_orders_lines.Lot_Number, ERP_IMPLT_orders_lines.Discount_Manual, ERP_IMPLT_orders_lines.Unit_Type_Sel, ERP_IMPLT_orders_lines.Unit_Type_Inv, &#xA;&#x9;ERP_IMPLT_orders_lines.Factor_Conversion, ERP_IMPLT_orders_lines.Br_Price, ERP_IMPLT_orders_lines.Price, ERP_IMPLT_orders_lines.Price_N_Promo, &#xA;&#x9;ERP_IMPLT_orders_lines.Manual, ERP_IMPLT_orders_lines.Total_Discount, ERP_IMPLT_orders_lines.Brute_Amount, ERP_IMPLT_orders_lines.Net_Amount, &#xA;&#x9;ERP_IMPLT_orders_lines.Taxes_Amount, ERP_IMPLT_orders_lines.Total_Amount, ERP_IMPLT_orders_lines.Total_Cost, ERP_IMPLT_orders_lines.Total_Weight, &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity, ERP_IMPLT_orders_lines.Quantity_Unit, ERP_IMPLT_orders_lines.Code_Promotion, ERP_IMPLT_orders_lines.Quantity_Promotion, &#xA;    ERP_IMPLT_orders_lines.Code_Price_List_default, ERP_IMPLT_orders_lines.Code_Price_List, ERP_IMPLT_orders_lines.Code_ReturnCause, ERP_IMPLT_orders_lines.Sale_Type, &#xA;&#x9;ERP_IMPLT_orders_lines.Code_Lock, ERP_IMPLT_orders_lines.Observations, '1' as Transfered, ERP_IMPLT_orders_lines.Quantity_promo_def, &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity_promo_def_gif, ERP_IMPLT_orders_lines.Discount_promo_def, ERP_IMPLT_orders_lines.Price_promo_def, ERP_IMPLT_orders_lines.Invoiced, &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity_Order, ERP_IMPLT_orders_lines.Quantity_Order_Gift, ERP_IMPLT_orders_lines.TaxClassification, ERP_IMPLT_orders_lines.Quantity_Gift, &#xA;&#x9;ERP_IMPLT_orders_lines.IVA_Amount, ERP_IMPLT_orders_lines.Req_Amount, ERP_IMPLT_orders_lines.Total_Com, ERP_IMPLT_orders_lines.Per_Com, ERP_IMPLT_orders_lines.New_Sale, &#xA;&#x9;ERP_IMPLT_orders_lines.Price_Ret&#xA;FROM        ERP_IMPLT_orders_lines inner join prj_orders_header on ERP_IMPLT_orders_lines.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;inner join Products on ERP_IMPLT_orders_lines.Code_Product = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_lines.Code_Account = accounts.Code_ofClient&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num, Num_Line from prj_orders_lines where Order_Num = prj_orders_header.Order_Num and &#xA;Num_Line = ERP_IMPLT_orders_lines.Num_Line)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_orders_lines SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Order_Date = MOD.Order_Date, Code_Product = MOD.Code_Product, Lot_Number = MOD.Lot_Number, Discount_Manual = MOD.Discount_Manual, &#xA;&#x9;&#x9;Unit_Type_Sel = MOD.Unit_Type_Sel, Unit_Type_Inv = MOD.Unit_Type_Inv, Factor_Conversion = MOD.Factor_Conversion, Br_Price = MOD.Br_Price, Price = MOD.Price, &#xA;&#x9;&#x9;Price_N_Promo = MOD.Price_N_Promo, Manual = MOD.Manual, Total_Discount = MOD.Total_Discount, Brute_Amount = MOD.Brute_Amount, Net_Amount = MOD.Net_Amount, &#xA;&#x9;&#x9;Taxes_Amount = MOD.Taxes_Amount, Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, Total_Weight = MOD.Total_Weight, Quantity = MOD.Quantity, &#xA;&#x9;&#x9;Quantity_Unit = MOD.Quantity_Unit, Code_Promotion = MOD.Code_Promotion, Quantity_Promotion = MOD.Quantity_Promotion, Code_Price_List_default = MOD.Code_Price_List_default, &#xA;&#x9;&#x9;Code_Price_List = MOD.Code_Price_List, Code_ReturnCause = MOD.Code_ReturnCause, Sale_Type = MOD.Sale_Type, Code_Lock = MOD.Code_Lock, Observations = MOD.Observations, &#xA;&#x9;&#x9;Transfered = MOD.Transfered, Quantity_promo_def = MOD.Quantity_promo_def, Quantity_promo_def_gif = MOD.Quantity_promo_def_gif, Discount_promo_def = MOD.Discount_promo_def, &#xA;&#x9;&#x9;Price_promo_def = MOD.Price_promo_def, Invoiced = MOD.Invoiced, Quantity_Order = MOD.Quantity_Order, Quantity_Order_Gift = MOD.Quantity_Order_Gift, &#xA;&#x9;&#x9;TaxClassification = MOD.TaxClassification, Quantity_Gift = MOD.Quantity_Gift, IVA_Amount = MOD.IVA_Amount, Req_Amount = MOD.Req_Amount, Total_Com = MOD.Total_Com, &#xA;        Per_Com = MOD.Per_Com, New_Sale = MOD.New_Sale, Price_Ret = MOD.Price_Ret&#xA;FROM&#xA;(SELECT distinct prj_orders_header.Order_Num, Num_Line, accounts.code as Code_Account, ERP_IMPLT_orders_lines.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_orders_lines.Lot_Number, ERP_IMPLT_orders_lines.Discount_Manual, ERP_IMPLT_orders_lines.Unit_Type_Sel, ERP_IMPLT_orders_lines.Unit_Type_Inv, &#xA;&#x9;ERP_IMPLT_orders_lines.Factor_Conversion, ERP_IMPLT_orders_lines.Br_Price, ERP_IMPLT_orders_lines.Price, ERP_IMPLT_orders_lines.Price_N_Promo, &#xA;&#x9;ERP_IMPLT_orders_lines.Manual, ERP_IMPLT_orders_lines.Total_Discount, ERP_IMPLT_orders_lines.Brute_Amount, ERP_IMPLT_orders_lines.Net_Amount, &#xA;&#x9;ERP_IMPLT_orders_lines.Taxes_Amount, ERP_IMPLT_orders_lines.Total_Amount, ERP_IMPLT_orders_lines.Total_Cost, ERP_IMPLT_orders_lines.Total_Weight, &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity, ERP_IMPLT_orders_lines.Quantity_Unit, ERP_IMPLT_orders_lines.Code_Promotion, ERP_IMPLT_orders_lines.Quantity_Promotion, &#xA;    ERP_IMPLT_orders_lines.Code_Price_List_default, ERP_IMPLT_orders_lines.Code_Price_List, ERP_IMPLT_orders_lines.Code_ReturnCause, ERP_IMPLT_orders_lines.Sale_Type, &#xA;&#x9;ERP_IMPLT_orders_lines.Code_Lock, ERP_IMPLT_orders_lines.Observations, '1' as Transfered, ERP_IMPLT_orders_lines.Quantity_promo_def, &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity_promo_def_gif, ERP_IMPLT_orders_lines.Discount_promo_def, ERP_IMPLT_orders_lines.Price_promo_def, ERP_IMPLT_orders_lines.Invoiced, &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity_Order, ERP_IMPLT_orders_lines.Quantity_Order_Gift, ERP_IMPLT_orders_lines.TaxClassification, ERP_IMPLT_orders_lines.Quantity_Gift, &#xA;&#x9;ERP_IMPLT_orders_lines.IVA_Amount, ERP_IMPLT_orders_lines.Req_Amount, ERP_IMPLT_orders_lines.Total_Com, ERP_IMPLT_orders_lines.Per_Com, ERP_IMPLT_orders_lines.New_Sale, &#xA;&#x9;ERP_IMPLT_orders_lines.Price_Ret&#xA;FROM        ERP_IMPLT_orders_lines inner join prj_orders_header on ERP_IMPLT_orders_lines.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;inner join Products on ERP_IMPLT_orders_lines.Code_Product = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_lines.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Num_Line, Code_Account, Order_Date, Code_Product, Lot_Number, Discount_Manual, Unit_Type_Sel, Unit_Type_Inv, Factor_Conversion, &#xA;&#x9;&#x9;Br_Price, Price, Price_N_Promo, Manual, Total_Discount, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, Quantity, &#xA;&#x9;&#x9;Quantity_Unit, Code_Promotion, Quantity_Promotion, Code_Price_List_default, Code_Price_List, Code_ReturnCause, Sale_Type, Code_Lock, Observations, &#xA;&#x9;&#x9;Transfered, Quantity_promo_def, Quantity_promo_def_gif, Discount_promo_def, Price_promo_def, Invoiced, Quantity_Order, Quantity_Order_Gift, &#xA;&#x9;&#x9;TaxClassification, Quantity_Gift, IVA_Amount, Req_Amount, Total_Com, Per_Com, New_Sale, Price_Ret&#xA;     FROM prj_orders_lines) as MOD &#xA;&#x9;&#x9;INNER JOIN prj_orders_lines ON MOD.Order_Num = prj_orders_lines.Order_Num and MOD.Num_Line = prj_orders_lines.Num_Line &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_orders_lines SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_orders_lines CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_orders_lines inner join prj_orders_header on ERP_IMPLT_orders_lines.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_lines.Order_Num and ERP_IMPLT_orders_lines.Num_Line = prj_orders_lines.Num_Line&#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_orders_lines SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_orders_lines CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_orders_lines inner join prj_orders_header on ERP_IMPLT_orders_lines.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_lines.Order_Num and ERP_IMPLT_orders_lines.Num_Line = prj_orders_lines.Num_Line and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_orders_lines_lots"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_orders_lines_lots"
      DTS:DTSID="{ee06f90f-fa41-4d2f-983d-6c1a0604668e}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_orders_lines_lots"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_orders_lines_lots (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Num_Line, Lot_Number, Code_Account, &#xA;                      Order_Date, Code_Product, Unit_Type_Sel, Unit_Type_Inv, Factor_Conversion, Quantity, Quantity_Unit, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_orders_header.Order_Num, Num_Line, Lot_Number, accounts.code as Code_Account, ERP_IMPLT_orders_lines_lots.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_orders_lines_lots.Unit_Type_Sel, ERP_IMPLT_orders_lines_lots.Unit_Type_Inv, ERP_IMPLT_orders_lines_lots.Factor_Conversion, ERP_IMPLT_orders_lines_lots.Quantity, ERP_IMPLT_orders_lines_lots.Quantity_Unit, '1' as Transfered&#xA;FROM        ERP_IMPLT_orders_lines_lots inner join prj_orders_header on ERP_IMPLT_orders_lines_lots.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;inner join Products on ERP_IMPLT_orders_lines_lots.Code_Product = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_lines_lots.Code_Account = accounts.Code_ofClient&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num, Num_Line from prj_orders_lines_lots where Order_Num = prj_orders_header.Order_Num and &#xA;Num_Line = ERP_IMPLT_orders_lines_lots.Num_Line and Lot_Number = ERP_IMPLT_orders_lines_lots.Lot_Number)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_orders_lines_lots SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Order_Date = MOD.Order_Date, Code_Product = MOD.Code_Product, Unit_Type_Sel = MOD.Unit_Type_Sel, Unit_Type_Inv = MOD.Unit_Type_Inv, &#xA;&#x9;&#x9;Factor_Conversion = MOD.Factor_Conversion, Quantity = MOD.Quantity, Quantity_Unit = MOD.Quantity_Unit, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT distinct prj_orders_header.Order_Num, Num_Line, Lot_Number, accounts.code as Code_Account, ERP_IMPLT_orders_lines_lots.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_orders_lines_lots.Unit_Type_Sel, ERP_IMPLT_orders_lines_lots.Unit_Type_Inv, ERP_IMPLT_orders_lines_lots.Factor_Conversion, ERP_IMPLT_orders_lines_lots.Quantity, ERP_IMPLT_orders_lines_lots.Quantity_Unit, '1' as Transfered&#xA;FROM        ERP_IMPLT_orders_lines_lots inner join prj_orders_header on ERP_IMPLT_orders_lines_lots.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;inner join Products on ERP_IMPLT_orders_lines_lots.Code_Product = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_lines_lots.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Num_Line, Lot_Number, Code_Account, Order_Date, Code_Product, Unit_Type_Sel, Unit_Type_Inv, Factor_Conversion, Quantity, &#xA;&#x9; Quantity_Unit, Transfered&#xA;     FROM prj_orders_lines_lots) as MOD &#xA;&#x9;&#x9;INNER JOIN prj_orders_lines_lots ON MOD.Order_Num = prj_orders_lines_lots.Order_Num and MOD.Num_Line = prj_orders_lines_lots.Num_Line &#xA;&#x9;&#x9;and MOD.Lot_Number = prj_orders_lines_lots.Lot_Number CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_orders_lines_lots SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_orders_lines_lots CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_orders_lines_lots inner join prj_orders_header on ERP_IMPLT_orders_lines_lots.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_lines_lots.Order_Num and ERP_IMPLT_orders_lines_lots.Num_Line = prj_orders_lines_lots.Num_Line&#xA;&#x9;&#x9;and ERP_IMPLT_orders_lines_lots.Lot_Number = prj_orders_lines_lots.Lot_Number and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_orders_lines_lots SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_orders_lines_lots CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_orders_lines_lots inner join prj_orders_header on ERP_IMPLT_orders_lines_lots.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_lines_lots.Order_Num and ERP_IMPLT_orders_lines_lots.Num_Line = prj_orders_lines_lots.Num_Line &#xA;&#x9;&#x9;and ERP_IMPLT_orders_lines_lots.Lot_Number = prj_orders_lines_lots.Lot_Number and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_orders_secuences"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_orders_secuences"
      DTS:DTSID="{06bdc7f8-8493-4a1c-acad-b91790ab71c3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_orders_secuences"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_orders_secuences (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Num_Line, Type, Secuence, Code_Table, Code_Account, &#xA;                      Code_Product, Orden, Value, Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based, Use_Sec, Transfered, Ori_Value, Ori_Base)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_orders_header.Order_Num, Num_Line, Type, Secuence, Code_Table, accounts.code as Code_Account, products.Code as Code_Product,  &#xA;&#x9;Orden, Value, ERP_IMPLT_orders_secuences.Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based, Use_Sec, '1' as Transfered, Ori_Value, Ori_Base&#xA;FROM        ERP_IMPLT_orders_secuences inner join prj_orders_header on ERP_IMPLT_orders_secuences.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;inner join Products on ERP_IMPLT_orders_secuences.Code_Product = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_secuences.Code_Account = accounts.Code_ofClient&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num, Num_Line, Secuence from prj_orders_secuences where Order_Num = prj_orders_header.Order_Num and &#xA;Num_Line = ERP_IMPLT_orders_secuences.Num_Line and Type = ERP_IMPLT_orders_secuences.Type and Secuence = ERP_IMPLT_orders_secuences.Secuence and Code_Table = ERP_IMPLT_orders_secuences.Code_Table)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_orders_secuences SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Code_Product = MOD.Code_Product, Orden = MOD.Orden, Value = MOD.Value, Code_Currency = MOD.Code_Currency, Unit_Measure = MOD.Unit_Measure, &#xA;&#x9;&#x9;Exclusive = MOD.Exclusive, On_Base = MOD.On_Base, Amount_Line = MOD.Amount_Line, Type_Based = MOD.Type_Based, Use_Sec = MOD.Use_Sec, Transfered = MOD.Transfered, &#xA;&#x9;&#x9;Ori_Value = MOD.Ori_Value, Ori_Base = MOD.Ori_Base&#xA;FROM&#xA;(SELECT prj_orders_header.Order_Num, Num_Line, Type, Secuence, Code_Table, accounts.code as Code_Account, products.Code as Code_Product,  &#xA;&#x9;Orden, Value, ERP_IMPLT_orders_secuences.Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based, Use_Sec, '1' as Transfered, Ori_Value, Ori_Base&#xA;FROM        ERP_IMPLT_orders_secuences inner join prj_orders_header on ERP_IMPLT_orders_secuences.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;inner join Products on ERP_IMPLT_orders_secuences.Code_Product = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_secuences.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Num_Line, Type, Secuence, Code_Table, Code_Account, Code_Product, Orden, Value, Code_Currency, Unit_Measure, Exclusive, On_Base, &#xA;&#x9;&#x9;&#x9;Amount_Line, Type_Based, Use_Sec, Transfered, Ori_Value, Ori_Base&#xA;     FROM prj_orders_secuences) as MOD &#xA;&#x9;&#x9;INNER JOIN prj_orders_secuences ON MOD.Order_Num = prj_orders_secuences.Order_Num and MOD.Num_Line = prj_orders_secuences.Num_Line and MOD.Secuence = prj_orders_secuences.Secuence&#xA;&#x9;&#x9;and MOD.Type = prj_orders_secuences.Type and MOD.Code_Table = prj_orders_secuences.Code_Table CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_orders_secuences SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_orders_secuences CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_orders_header.Order_Num, Num_Line, Secuence, Type, Code_Table FROM ERP_IMPLT_orders_secuences inner join prj_orders_header on ERP_IMPLT_orders_secuences.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_secuences.Order_Num and ERP_IMPLT_orders_secuences.Num_Line = prj_orders_secuences.Num_Line and ERP_IMPLT_orders_secuences.Secuence = prj_orders_secuences.Secuence&#xA;&#x9;&#x9;&#x9;and ERP_IMPLT_orders_secuences.Type = prj_orders_secuences.Type and ERP_IMPLT_orders_secuences.Code_Table = prj_orders_secuences.Code_Table&#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_orders_secuences SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_orders_secuences CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_orders_secuences inner join prj_orders_header on ERP_IMPLT_orders_secuences.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_secuences.Order_Num and ERP_IMPLT_orders_secuences.Num_Line = prj_orders_secuences.Num_Line and ERP_IMPLT_orders_secuences.Secuence = prj_orders_secuences.Secuence &#xA;&#x9;&#x9;and ERP_IMPLT_orders_secuences.Type = prj_orders_secuences.Type and ERP_IMPLT_orders_secuences.Code_Table = prj_orders_secuences.Code_Table and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_orders_type_user"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_orders_type_user"
      DTS:DTSID="{dcc0b849-6891-4f0b-8bd8-5d22297ceb56}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_orders_type_user"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Solamente tratamos alta. Ponemos por defecto a los usuarios todos los tipos de pedidos que tienen sus organizaciones&#xA;INSERT INTO prj_orders_type_user (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_User, Code_Unit_Org, Code_Sales_Org)&#xA;SELECT   DISTINCT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, prj_orders_type_sales_organ.Code, users_organizations.Code_User, users_organizations.Code_Unit_Org, &#xA;                      users_organizations.Code_Sales_Org&#xA;FROM         prj_orders_type_sales_organ INNER JOIN&#xA;                      users_organizations ON prj_orders_type_sales_organ.Code_Unit_Org = users_organizations.Code_Unit_Org AND &#xA;                      prj_orders_type_sales_organ.Code_Sales_Org = users_organizations.Code_Sales_Org INNER JOIN&#xA;                      ERP_IMPLT_users ON users_organizations.Code_User = ERP_IMPLT_users.Code CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT Code, Code_User, Code_Unit_Org, Code_Sales_Org FROM prj_orders_type_user where Code = prj_orders_type_sales_organ.Code and Code_User = users_organizations.Code_User and &#xA;Code_Unit_Org = users_organizations.Code_Unit_Org and Code_Sales_Org = users_organizations.Code_Sales_Org)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_payment_accounts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{EF4CACD6-FD77-4C1B-A9A8-A4C694171A0B}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_payment_accounts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="INSERT INTO prj_accounts_payment_terms &#xA;(Create_User, Create_Date, Modify_User, Modify_Date, Platform, Delete_User, Delete_Date,&#xA;Code_Account, Code_Sales_Org, Code_Payment)&#xA;&#xA;SELECT distinct View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform, &#xA;NULL as Delete_User,&#xA;NULL as Delete_Date,&#xA;accounts.Code as Code_Account,&#xA;&#x9;Code_Sales_Org,&#xA;&#x9;CASE WHEN  Code_Payment = 'CA'&#xA;&#x9;THEN '01'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'CH'&#xA;&#x9;THEN '02'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'BT'&#xA;&#x9;THEN '03'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'ZD'&#xA;&#x9;THEN '04'&#xA;    ELSE CASE WHEN Code_Payment = 'CC'&#xA;&#x9;THEN '06'&#xA;    ELSE CASE WHEN Code_Payment = 'ZR'&#xA;&#x9;THEN  '07' END END END END END END AS Code_Payment&#xA;FROM  ERP_IMPLT_payment_accounts INNER JOIN accounts ON&#xA;accounts.Code_ofClient = ERP_IMPLT_payment_accounts.Code_Account&#xA; CROSS JOIN view_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Sales_Org, Code_Payment from prj_accounts_payment_terms&#xA; --where Code_Account = ERP_IMPLT_payment_accounts.Code_Account AND&#xA; --Code_Sales_Org = ERP_IMPLT_payment_accounts.code_Sales_Org AND&#xA; --Code_Payment = ERP_IMPLT_payment_accounts.Code_Payment&#xA; )&#xA;GO&#xA;&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts_payment_terms  SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;&#x9;&#x9;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;&#x9;&#x9;Delete_User = NULL, &#xA;&#x9;&#x9;Delete_Date = NULL, &#xA;&#x9;&#x9;Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, &#xA;&#x9;&#x9;Code_Sales_Org = MOD.Code_Sales_Org, &#xA;&#x9;&#x9;Code_Payment = MOD.Code_Payment &#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, Code_Sales_Org, &#xA;CASE WHEN  Code_Payment = 'CA'&#xA;&#x9;THEN '01'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'CH'&#xA;&#x9;THEN '02'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'BT'&#xA;&#x9;THEN '03'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'ZD'&#xA;&#x9;THEN '04'&#xA;    ELSE CASE WHEN Code_Payment = 'CC'&#xA;&#x9;THEN '06'&#xA;    ELSE CASE WHEN Code_Payment = 'ZR'&#xA;&#x9;THEN  '07' END END END END END END AS Code_Payment&#xA;FROM  ERP_IMPLT_payment_accounts INNER JOIN accounts ON&#xA;accounts.Code_ofClient = ERP_IMPLT_payment_accounts.Code_Account&#xA; CROSS JOIN view_System_Fields_ERP&#xA;EXCEPT &#xA;SELECT Code_Account, Code_Sales_Org, Code_Payment from prj_accounts_payment_terms&#xA; where Code_Account = prj_accounts_payment_terms.Code_Account AND&#xA; Code_Sales_Org = prj_accounts_payment_terms.code_Sales_Org) AS MOD&#xA; INNER JOIN prj_accounts_payment_terms ON &#xA; MOD.Code_Account = prj_accounts_payment_terms.Code_Account AND&#xA; MOD.Code_Sales_Org = prj_accounts_payment_terms.Code_Sales_Org&#xA; CROSS JOIN View_System_Fields_ERP&#xA;GO  &#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_payment_terms"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_payment_terms"
      DTS:DTSID="{009c53d2-2f09-49e5-a0bc-e889db2211a6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_payment_terms"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_payment_terms (Code, Code_Unit_Org, Code_Sales_Org, Description, Days, Credit, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Payment as Code, Code_Unit_Org, Code_Sales_Org, Code_Payment as Description, '0' as Days, '1' as Credit, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM        ERP_IMPLT_accounts_org&#xA;where not exists (SELECT Code, Code_Unit_Org, Code_Sales_Org FROM ERP_IMPLT_payment_terms where code = ERP_IMPLT_accounts_org.Code_Payment and Code_Unit_Org = ERP_IMPLT_accounts_org.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_org.Code_Sales_Org) &#xA;and not exists (SELECT Code, Code_Unit_Org, Code_Sales_Org FROM prj_payment_terms where code = ERP_IMPLT_accounts_org.Code_Payment and Code_Unit_Org = ERP_IMPLT_accounts_org.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_org.Code_Sales_Org) and Code_Payment is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO prj_payment_terms (Create_User, Create_Date, Modify_User, Modify_Date, Platform,  Code, Description, Days, Orden, Code_Unit_Org, &#xA;                      Code_Sales_Org, Credit, Days_EP, Discount)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, Days, 1 as Orden, Code_Unit_Org, Code_Sales_Org, Credit, 0 as Days_EP, 0 as Discount &#xA;FROM         ERP_IMPLT_payment_terms CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code, Credit, Days_EP, Discount FROM prj_payment_terms where code = prj_payment_terms.Code and Code_Unit_Org = prj_payment_terms.Code_Unit_Org &#xA;and Code_Sales_Org = prj_payment_terms.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_payment_terms SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description, Days = MOD.Days, Credit = MOD.Credit FROM&#xA;(SELECT  Code, Code_Unit_Org, Code_Sales_Org, Description, Days, Credit&#xA;FROM         ERP_IMPLT_payment_terms&#xA;EXCEPT&#xA;SELECT   Code, Code_Unit_Org, Code_Sales_Org, Description, Days, Credit&#xA;FROM         prj_payment_terms) as MOD INNER JOIN prj_payment_terms ON MOD.Code = prj_payment_terms.Code and MOD.Code_Unit_Org = prj_payment_terms.Code_Unit_Org &#xA;and MOD.Code_Sales_Org = prj_payment_terms.Code_Sales_Org CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_payment_terms SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_payment_terms CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_payment_terms where Code = prj_payment_terms.Code and Code_Unit_Org = prj_payment_terms.Code_Unit_Org &#xA;and Code_Sales_Org = prj_payment_terms.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_payment_terms SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_payment_terms CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_payment_terms where Code = prj_payment_terms.Code and Code_Unit_Org = prj_payment_terms.Code_Unit_Org &#xA;and Code_Sales_Org = prj_payment_terms.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_payment_terms CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_payment_terms CI"
      DTS:DTSID="{09574dbb-df23-41ce-8bd5-e414a794ed46}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_payment_terms CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="33">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_payment_terms SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_payment_terms CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_payment_terms where Code = prj_payment_terms.Code and Code_Unit_Org = prj_payment_terms.Code_Unit_Org &#xA;and Code_Sales_Org = prj_payment_terms.Code_Sales_Org) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_price_list"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_price_list"
      DTS:DTSID="{811d6f2d-aaf3-4df0-9bf7-9f044654ab93}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_price_list"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_price_list (Code, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Price_list as Code, Code_Price_list as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts_org&#xA;where not exists (SELECT Code FROM ERP_IMPLT_Price_list where code = ERP_IMPLT_accounts_org.Code_Price_List)  &#xA;and not exists (SELECT Code FROM prj_Price_list where code = ERP_IMPLT_accounts_org.Code_Price_List) and Code_Price_list is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO prj_price_list (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_price_list CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM prj_price_list where Code = ERP_IMPLT_price_list.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_price_list SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Description&#xA;FROM         ERP_IMPLT_price_list&#xA;EXCEPT&#xA;SELECT     Code, Description&#xA;FROM         prj_price_list) as MOD INNER JOIN prj_price_list ON MOD.Code = prj_price_list.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_price_list SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_price_list CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_price_list where Code = prj_price_list.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_price_list SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_price_list CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_price_list where Code = prj_price_list.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_price_list CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_price_list CI"
      DTS:DTSID="{e34e8948-7ee9-4432-a0a2-67aaa0a339a9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_price_list CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="34">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_price_list SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_price_list CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_price_list where Code = prj_price_list.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_pricing_tables"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_pricing_tables"
      DTS:DTSID="{0c188fd0-7578-4aeb-9118-c3de508a23d7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_pricing_tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_pricing_tables (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Secuence, Code_Table, ValueKey, Code1, Code2, Code3, &#xA;                      Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_Fin, Price_Min, Price_Max, ID_ERP, Type_Based, Code_Currency, Unit_Measure)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Secuence, Code_Table, ValueKey, Code1, Code2, Code3, Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_End, &#xA;&#x9;NULL as Price_Min, NULL as Price_Max, ID_ERP, Type_Based, Code_Currency, Unit_Measure&#xA;FROM        ERP_IMPLT_pricing_tables CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin from prj_pricing_tables where Secuence = ERP_IMPLT_pricing_tables.Secuence and &#xA;Code_Table = ERP_IMPLT_pricing_tables.Code_Table and ValueKey = ERP_IMPLT_pricing_tables.ValueKey and Date_Ini = ERP_IMPLT_pricing_tables.Date_Ini and Date_Fin = ERP_IMPLT_pricing_tables.Date_End)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_pricing_tables SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code1 = MOD.Code1, Code2 = MOD.Code2, Code3 = MOD.Code3, Code4 = MOD.Code4, Code5 = MOD.Code5, Code6 = MOD.Code6, Code7 = MOD.Code7, Code8 = MOD.Code8, &#xA;&#x9;&#x9;Value = MOD.Value, Base = MOD.Base, ID_ERP = MOD.ID_ERP, Type_Based = MOD.Type_Based, &#xA;&#x9;&#x9;Code_Currency = MOD.Code_Currency, Unit_Measure = MOD.Unit_Measure&#xA;FROM&#xA;(SELECT Secuence, Code_Table, ValueKey, Code1, Code2, Code3, Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_End as Date_Fin, &#xA;&#x9; ID_ERP, Type_Based, Code_Currency, Unit_Measure&#xA;FROM        ERP_IMPLT_pricing_tables&#xA;     EXCEPT&#xA;     SELECT  Secuence, Code_Table, ValueKey, Code1, Code2, Code3, Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_Fin, &#xA;&#x9;ID_ERP, Type_Based, Code_Currency, Unit_Measure&#xA;FROM         prj_pricing_tables) as MOD INNER JOIN prj_pricing_tables ON MOD.Secuence = prj_pricing_tables.Secuence and MOD.Code_Table = prj_pricing_tables.Code_Table &#xA;and MOD.ValueKey = prj_pricing_tables.ValueKey and MOD.Date_Ini = prj_pricing_tables.Date_Ini and MOD.Date_Fin = prj_pricing_tables.Date_Fin&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_pricing_tables SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_pricing_tables CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin FROM ERP_IMPLT_pricing_tables &#xA;&#x9;&#x9;where Secuence = prj_pricing_tables.Secuence and Code_Table = prj_pricing_tables.Code_Table and ValueKey = prj_pricing_tables.ValueKey &#xA;&#x9;&#x9;and Date_Ini = prj_pricing_tables.Date_Ini and Date_Fin = prj_pricing_tables.Date_Fin and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_pricing_tables SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_pricing_tables CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin FROM ERP_IMPLT_pricing_tables &#xA;&#x9;&#x9;where Secuence = prj_pricing_tables.Secuence and Code_Table = prj_pricing_tables.Code_Table and ValueKey = prj_pricing_tables.ValueKey &#xA;&#x9;&#x9;and Date_Ini = prj_pricing_tables.Date_Ini and Date_Fin = prj_pricing_tables.Date_Fin and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_pricing_tables CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_pricing_tables CI"
      DTS:DTSID="{a8c11989-b602-4d6e-957f-f24d7aaccfd6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_pricing_tables CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="35">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_pricing_tables SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_pricing_tables CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin FROM ERP_IMPLT_pricing_tables &#xA;&#x9;&#x9;where Secuence = prj_pricing_tables.Secuence and Code_Table = prj_pricing_tables.Code_Table and ValueKey = prj_pricing_tables.ValueKey &#xA;&#x9;&#x9;and Date_Ini = prj_pricing_tables.Date_Ini and Date_Fin = prj_pricing_tables.Date_Fin) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_pricing_tables Mantenimiento"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_pricing_tables Mantenimiento"
      DTS:DTSID="{50c0e6a3-92e6-4962-9d92-e659f006b235}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_pricing_tables Mantenimiento"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Proceso especial: Ponemos de baja todos los registros que tengan el mismo ID_ERP de los datos que hemos recibido&#xA;-- Esto se hace porque normalmente no coinciden las claves, y pueden cambiar la fecha inicial o final como si no fueran claves&#xA;-- Esto NO se puede hacer si el pricing es de carga inicial porque bajarían todos los días todos los registros a los terminales&#xA;UPDATE prj_pricing_tables SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_pricing_tables CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_pricing_tables.ID_ERP FROM ERP_IMPLT_pricing_tables&#x9;where ID_ERP = prj_pricing_tables.ID_ERP)&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_assor"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8C82D035-7DB7-4BD6-9061-9389ACDB7C9A}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_assor"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="INSERT INTO prj_products_assor(&#xA;      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User,&#xA;      Delete_Date, Platform, Code,&#xA;&#x9;&#x9;&#x9;&#x9;Description,&#xA;&#x9;&#x9;&#x9;&#x9;Date_Ini,&#xA;&#x9;&#x9;&#x9;    Date_End,&#xA;&#x9;&#x9;&#x9;&#x9;Active) &#xA; SELECT distinct View_System_Fields_ERP.Create_User, &#xA;                View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_Date,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_User,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_Date,&#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Platform,  &#xA;&#x9;&#x9;&#x9;&#x9;Code_Product AS Code,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Description,&#xA;&#x9;&#x9;&#x9;&#x9;LEFT(View_System_Fields_ERP.Modify_Date, 8)  AS Date_Ini,&#xA;&#x9;&#x9;&#x9;&#x9;'99999999' AS Date_End,&#xA;&#x9;&#x9;&#x9;&#x9;'1' AS Active&#xA;  FROM ERP_IMPLT_products_exc CROSS JOIN View_System_Fields_ERP&#xA;  WHERE not exists (SELECT Code&#xA;    FROM prj_products_assor WHERE ERP_IMPLT_products_exc.Code_Product = prj_products_assor.Code)&#xA;GO&#xA;&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_assor SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code = MOD.Code,&#xA;Description = MOD.Description,&#xA;Date_Ini = MOD.Date_Ini,&#xA;Date_End = MOD.Date_End,&#xA;Active = MOD.Active&#xA;FROM&#xA;(SELECT Code_Product AS Code,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Description,&#xA;&#x9;&#x9;&#x9;&#x9;LEFT(View_System_Fields_ERP.Modify_Date, 8)  AS Date_Ini,&#xA;&#x9;&#x9;&#x9;&#x9;'99999999' AS Date_End,&#xA;&#x9;&#x9;&#x9;&#x9;'1' AS Active&#xA;  FROM ERP_IMPLT_products_exc CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT Code,&#xA;&#x9;&#x9;&#x9;&#x9;Description,&#xA;&#x9;&#x9;&#x9;&#x9;Date_Ini,&#xA;&#x9;&#x9;&#x9;    Date_End,&#xA;&#x9;&#x9;&#x9;&#x9;Active FROM prj_products_assor) AS MOD INNER JOIN prj_products_assor ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code = prj_products_Assor.Code&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_assor_det"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ADCF0574-D2E1-425F-96F0-73C677E5A582}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_assor_det"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="INSERT INTO prj_products_assor_det(&#xA;      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User,&#xA;      Delete_Date, Platform, &#xA;&#x9;            Code,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Product,&#xA;&#x9;&#x9;&#x9;&#x9;Orden,&#xA;&#x9;&#x9;&#x9;&#x9;Excluded) &#xA; SELECT distinct View_System_Fields_ERP.Create_User, &#xA;                View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_Date,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_User,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_Date,&#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Platform,  &#xA;&#x9;&#x9;&#x9;&#x9;code_Product as Code,&#xA;&#x9;&#x9;&#x9;&#x9; products.code AS Code_Product,&#xA;&#x9;&#x9;&#x9;&#x9; NULL AS Orden,&#xA;&#x9;&#x9;&#x9;&#x9; NULL AS Excluded&#xA;  FROM ERP_IMPLT_products_exc INNER JOIN ERP_IMPLT_products &#xA;  ON ERP_IMPLT_products_exc.Code_Product = ERP_IMPLT_products.Code_ofClient&#xA;  INNER JOIN products ON products.Code_ofClient = ERP_IMPLT_products_exc.Code_Product CROSS JOIN View_System_Fields_ERP&#xA;  WHERE not exists &#xA;    (SELECT Code, Code_Product&#xA;    FROM prj_products_assor_det &#xA;&#x9;WHERE products.Code = prj_products_assor_det.Code_Product&#xA;&#x9;AND products.Code_ofClient = prj_products_assor_det.Code&#xA;&#x9;)&#xA;&#x9;&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_assor_det SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code = MOD.Code,&#xA;Code_Product = MOD.Code_Product,&#xA;Orden = MOD.Orden,&#xA;Excluded = MOD.Exluded&#xA;FROM&#xA;(SELECT Code_Product AS Code,&#xA;products.code AS Code_Product,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Orden,&#xA;&#x9;&#x9;&#x9;&#x9; NULL AS Exluded&#xA;  FROM ERP_IMPLT_products_exc &#xA;  INNER JOIN products ON products.Code_ofClient = ERP_IMPLT_products_exc.Code_Product &#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT Code,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Product,&#xA;&#x9;&#x9;&#x9;&#x9;Orden,&#xA;&#x9;&#x9;&#x9;    Excluded&#xA;&#x9;&#x9;&#x9;&#x9;FROM prj_products_assor_det) AS MOD INNER JOIN prj_products_assor_det ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code = prj_products_Assor_det.Code&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_assor_sel"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{554F8E27-8013-4D6C-B68E-099C8ACDF445}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_assor_sel"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="INSERT INTO prj_products_assor_sel(&#xA;      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User,&#xA;      Delete_Date, Platform, &#xA;&#x9;            Code,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Seller) &#xA; SELECT distinct View_System_Fields_ERP.Create_User, &#xA;                View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_Date,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_User,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_Date,&#xA;&#x9;&#x9;&#x9;&#x9; View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;&#x9;&#x9; Code_Product AS Code,&#xA;&#x9;&#x9;&#x9;&#x9;Sellers.Code AS Code_Seller&#xA;   FROM ERP_IMPLT_products_exc INNER JOIN ERP_IMPLT_products &#xA;  ON ERP_IMPLT_products_exc.Code_Product = ERP_IMPLT_products.Code_ofClient&#xA;  INNER JOIN sellers ON sellers.Code_ofClient = ERP_IMPLT_products_exc.Code_Product CROSS JOIN View_System_Fields_ERP&#xA;  WHERE not exists (SELECT Code, Code_Product&#xA;    FROM prj_products_assor_det &#xA;&#x9;WHERE ERP_IMPLT_products_exc.Code_Product = prj_products_assor_det.Code_Product&#xA;&#x9;AND ERP_IMPLT_products_exc.Code_Route = prj_products_assor_det.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_assor_sel SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code = MOD.Code,&#xA;Code_Seller = MOD.Code_Seller&#xA;FROM&#xA;(SELECT Code_Product AS Code,&#xA;&#x9;&#x9;Code_Sales_Org AS Code_Seller&#xA;  FROM ERP_IMPLT_products_exc CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT Code,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Seller FROM prj_products_assor_sel) AS MOD INNER JOIN prj_products_assor_sel ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code = prj_products_Assor_sel.Code&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_control"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_products_control"
      DTS:DTSID="{18d56d9a-f5ab-4b01-bfc0-a909ffd8e4bf}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_products_control (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Control1, Control2, Control3, Control4, &#xA;                      Control5, Control6, Control7, Control8, Control9, Control10, Control11, Control12, Control13, Control14)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;products.Code, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11, Control12, &#xA;&#x9;Control13, Control14&#xA;FROM        ERP_IMPLT_product_control inner join products on ERP_IMPLT_product_control.Code_product = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from prj_products_control where Code = products.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_control SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Control1 = MOD.Control1, Control2 = MOD.Control2, Control3 = MOD.Control3, Control4 = MOD.Control4, Control5 = MOD.Control5, Control6 = MOD.Control6, &#xA;&#x9;&#x9;Control7 = MOD.Control7, Control8 = MOD.Control8, Control9 = MOD.Control9, Control10 = MOD.Control10, Control11 = MOD.Control11, Control12 = MOD.Control12, &#xA;&#x9;&#x9;Control13 = MOD.Control13, Control14 = MOD.Control14&#xA;FROM&#xA;(SELECT  products.Code as Code_Product, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11, Control12, &#xA;&#x9;Control13, Control14&#xA;FROM   ERP_IMPLT_product_control inner join products on ERP_IMPLT_product_control.Code_product = products.Code_ofClient &#xA;     EXCEPT&#xA;     SELECT  Code, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11, &#xA;&#x9; Control12, Control13, Control14&#xA;FROM         prj_products_control) as MOD INNER JOIN prj_products_control ON MOD.Code_product = prj_products_control.Code&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_products_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_product_control.Code_product FROM ERP_IMPLT_product_control inner join products on ERP_IMPLT_product_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_control.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_products_control SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_products_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_product_control.Code_product FROM ERP_IMPLT_product_control inner join products on ERP_IMPLT_product_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_control.Code&#x9;and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_control CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_products_control CI"
      DTS:DTSID="{bb18579f-512e-4df4-a5b4-54d3f091e48d}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_control CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="36">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_products_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_product_control.Code_product FROM ERP_IMPLT_product_control inner join products on ERP_IMPLT_product_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_control.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_tax"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_products_tax"
      DTS:DTSID="{2466a0cc-8fd4-4136-ae7a-72cf265abfed}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_tax"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_products_tax (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_product, Code_Country, Type, TaxClassification)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;products.Code as Code_product, ERP_IMPLT_products_tax.Code_Country, Type, TaxClassification&#xA;FROM        ERP_IMPLT_products_tax inner join products on ERP_IMPLT_products_tax.Code_product = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_product, Code_Country, Type from prj_products_tax where Code_product = products.Code and &#xA;Code_Country = ERP_IMPLT_products_tax.Code_Country and Type = ERP_IMPLT_products_tax.Type)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_tax SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;TaxClassification = MOD.TaxClassification&#xA;FROM&#xA;(SELECT  products.Code as Code_product, ERP_IMPLT_products_tax.Code_Country, Type, TaxClassification&#xA;     FROM   ERP_IMPLT_products_tax inner join products on ERP_IMPLT_products_tax.Code_product = products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_product, Code_Country, Type, TaxClassification&#xA;FROM         prj_products_tax) as MOD INNER JOIN prj_products_tax ON MOD.Code_product = prj_products_tax.Code_product and MOD.Code_Country = prj_products_tax.Code_Country and MOD.Type = prj_products_tax.Type&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_products_tax SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_tax.Code_product FROM ERP_IMPLT_products_tax inner join products on ERP_IMPLT_products_tax.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_tax.Code_product and ERP_IMPLT_products_tax.Code_Country = prj_products_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_products_tax.Type = prj_products_tax.Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_products_tax SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_products_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_tax.Code_product FROM ERP_IMPLT_products_tax inner join products on ERP_IMPLT_products_tax.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_tax.Code_product and ERP_IMPLT_products_tax.Code_Country = prj_products_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_products_tax.Type = prj_products_tax.Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_tax CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_products_tax CI"
      DTS:DTSID="{c6712660-df03-49bb-a336-a31ef0e3a80e}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_tax CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="37">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_products_tax SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_products_tax.Code_product FROM ERP_IMPLT_products_tax inner join products on ERP_IMPLT_products_tax.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_tax.Code_product and ERP_IMPLT_products_tax.Code_Country = prj_products_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_products_tax.Type = prj_products_tax.Type) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_promotions_head"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{245F5659-D140-4986-BC91-4697F424D79D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_promotions_head"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_promotions_head&#xA;&#x9;&#x9;&#x9;(Platform, Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Code_Type_Apply, Code_ofClient, Head_Line, Apply_Gift, Apply_Val, Head_Table, Code,&#xA;&#x9;&#x9;&#x9;Description, Date_Ini, Date_End, Apply_to, Type, Order_Apply, Cumulative, Quantity_from,&#xA;            Quantity_Mult, Code_Product_Gift, Quantity_Gift, Maximun_Gift, Price_Gift, Unit_Sales,&#xA;&#x9;&#x9;&#x9;Per_Client, Price_List, Condition_List, Code_Currency, Modificable, Activable, Quantity_Ini,&#xA;&#x9;&#x9;&#x9;Quantity_Fin)&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;      View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  'G' AS Code_Type_Apply,&#xA;&#x9;  ERP_IMPLT_promotions_head.Code_Promotion as Code_ofClient,&#xA; --     ERP_IMPLT_promotions_head.Code_Account as Code_ofClient,&#xA;      '1' AS Head_Line,&#xA;      '16' AS Apply_Gift,&#xA;      NULL AS Apply_Val,&#xA;      NULL AS Head_Table,&#xA;--&#x9;  ERP_IMPLT_promotions_head.Code_Promotion as Code,&#xA;&#x9;  convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;&#x9;  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_promotions_head.Code_Promotion) + 100000 as varchar(8)) as Code,&#xA;      ERP_IMPLT_promotions_head.Description,&#xA;      ERP_IMPLT_promotions_head.Date_Ini,&#xA;      ERP_IMPLT_promotions_head.Date_End,&#xA;&#x9; CASE WHEN ERP_IMPLT_promotions_head.Code_Account IS NULL&#xA;&#x9;  THEN '01'&#xA;&#x9;  ELSE '14'&#xA;&#x9;  END AS Apply_To,&#xA;--&#x9;  CASE WHEN ERP_IMPLT_promotions_head.Code_Account IS NULL&#xA;--&#x9;  THEN 'V'&#xA;--&#x9;  ELSE 'T' END AS Apply_to,&#xA;      CASE WHEN ERP_IMPLT_promotions_head.Code_Type IN ('IB01','IB02')&#xA;&#x9;  THEN '00'&#xA;&#x9;  ELSE CASE WHEN ERP_IMPLT_promotions_head.Code_Type IN ('AC01','AC02')&#xA;&#x9;  THEN '01' END END as Type,&#xA;      '1' as Order_Apply,&#xA;      '1' AS Cumulative,&#xA;      ERP_IMPLT_promotions_detail.Quantity AS Quantity_from,&#xA;      ERP_IMPLT_promotions_detail.Multiple AS Quantity_Mult,&#xA;      products.code AS Code_Product_Gift,&#xA;      ERP_IMPLT_promotions_gift.Quantity AS Quantity_Gift,&#xA;      '999999' AS Maximun_Gift,&#xA;      NULL AS Price_Gift,&#xA;      ERP_IMPLT_promotions_detail.type_unit AS Unit_Sales,&#xA;      '-1' AS Per_Client,&#xA;      NULL AS Price_List,&#xA;      NULL AS Condition_List,&#xA;      NULL AS Code_Currency,&#xA;      '0' AS Modificable,&#xA;      '0' AS Activable,&#xA;    --  ERP_IMPLT_promotions_gift.Quantity AS &#xA;&#x9;'0' AS Quantity_Ini,&#xA;   --   ERP_IMPLT_promotions_detail.Quantity AS &#xA;   '0' AS Quantity_Fin&#xA;  FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN ERP_IMPLT_promotions_gift ON &#xA;  ERP_IMPLT_promotions_gift.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN&#xA;  ERP_IMPLT_promotions_detail ON ERP_IMPLT_promotions_detail.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN products ON ERP_IMPLT_promotions_detail.Code_Product = products.code_ofClient&#xA;  --INNER JOIN prj_variables ON prj_variables.Type = ERP_IMPLT_promotions_head. AND prj_variables.Type IN ('T','V')&#xA;--&#x9;&#x9;&#x9;INNER JOIN prj_promotions_type ON ERP_IMPLT_promotions_head. = &#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT Code_ofClient, Code, prj_promotions_head.Description FROM prj_promotions_head &#xA;INNER JOIN ERP_IMPLT_promotions_head&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ON Code_ofClient = ERP_IMPLT_promotions_head.Code_Promotion )&#xA;GO&#xA;&#xA;-------------------------------------------------------------------------------------------------------------------------&#xA;-------------------------------------------------------------------------------------------------------------------------&#xA;--ACTUALIZACION&#xA;--prj_promotions_head&#xA;-- Modificación&#xA;UPDATE prj_promotions_head SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;code_ofClient = MOD.Code_ofClient,&#xA; --     ERP_IMPLT_promotions_head.Code_Account as Code_ofClient,&#xA;     Description = MOD.Description,&#xA;      Date_Ini = MOD.Date_Ini,&#xA;      Date_End = MOD.Date_End,&#xA;&#x9; Apply_to = MOD.Apply_To,&#xA;Type = MOD.Type,&#xA;Quantity_from = MOD.Quantity_from,&#xA;Quantity_Mult = MOD.Quantity_Mult,&#xA;   Code_Product_Gift = MOD.Code_Product_Gift,&#xA;      Quantity_Gift = MOD.Quantity_Gift,&#xA;      Unit_Sales = MOD.Unit_Sales&#xA;   FROM&#xA;(SELECT  DISTINCT &#xA;&#x9;  ERP_IMPLT_promotions_head.Code_Promotion as Code_ofClient,&#xA; --&#x9;  ERP_IMPLT_promotions_head.Code_Promotion as Code,&#xA;&#x9;  ERP_IMPLT_promotions_head.Description,&#xA;      ERP_IMPLT_promotions_head.Date_Ini,&#xA;      ERP_IMPLT_promotions_head.Date_End,&#xA;&#x9; CASE WHEN ERP_IMPLT_promotions_head.Code_Account IS NULL&#xA;&#x9;  THEN '01'&#xA;&#x9;  ELSE '14'&#xA;&#x9;  END AS Apply_To,&#xA;--&#x9;  CASE WHEN ERP_IMPLT_promotions_head.Code_Account IS NULL&#xA;--&#x9;  THEN 'V'&#xA;--&#x9;  ELSE 'T' END AS Apply_to,&#xA;      CASE WHEN ERP_IMPLT_promotions_head.Code_Type IN ('IB01','IB02')&#xA;&#x9;  THEN '00'&#xA;&#x9;  ELSE CASE WHEN ERP_IMPLT_promotions_head.Code_Type IN ('AC01','AC02')&#xA;&#x9;  THEN '01' END END as Type,&#xA;&#x9;  ERP_IMPLT_promotions_detail.Quantity AS Quantity_from,&#xA;      ERP_IMPLT_promotions_detail.Multiple AS Quantity_Mult,&#xA;     products.code AS Code_Product_Gift,&#xA;      ERP_IMPLT_promotions_gift.Quantity AS Quantity_Gift,&#xA;     ERP_IMPLT_promotions_detail.type_unit AS Unit_Sales&#xA;  FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN ERP_IMPLT_promotions_gift ON &#xA;  ERP_IMPLT_promotions_gift.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN&#xA;  ERP_IMPLT_promotions_detail ON ERP_IMPLT_promotions_detail.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN products ON ERP_IMPLT_promotions_detail.Code_Product = products.code_ofClient&#xA;  --INNER JOIN prj_variables ON prj_variables.Type = ERP_IMPLT_promotions_head. AND prj_variables.Type IN ('T','V')&#xA;--&#x9;&#x9;&#x9;INNER JOIN prj_promotions_type ON ERP_IMPLT_promotions_head. = &#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT code_ofClient,&#xA;     Description ,&#xA;      Date_Ini ,&#xA;      Date_End ,&#xA;&#x9; Apply_to ,&#xA;Type , Quantity_from, Quantity_Mult,&#xA;   Code_Product_Gift,&#xA;      Quantity_Gift,&#xA;      Unit_Sales FROM prj_promotions_head) AS MOD INNER JOIN prj_promotions_head ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code_ofClient = prj_promotions_head.Code_ofClient&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_promotions_hier_gift"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{938C3B99-EF46-4C2C-A46C-F5BDFBEFD1CF}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_promotions_hier_gift"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="INSERT INTO prj_promotions_hier_gift(&#xA;      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User,&#xA;      Delete_Date, Platform, &#xA;&#x9;  Code_Promotion,&#xA;      Code_Entity,&#xA;      Quantity_Gift,&#xA;      Maximun_Gift,&#xA;      Price_Gift,&#xA;      Unit_Sales,&#xA;      Code_Currency)&#xA; SELECT distinct View_System_Fields_ERP.Create_User, &#xA;                View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_Date,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_User,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;&#x9;&#x9;prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Product AS Code_Entity,&#xA;&#x9;&#x9;&#x9;&#x9;Quantity AS Quantity_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;'999999' AS Maximun_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Price_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;Type_Unit AS Unit_Sales,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Code_Currency --Traer de prj_currency&#xA;  FROM ERP_IMPLT_promotions_gift &#xA;  INNER JOIN ERP_IMPLT_promotions_head &#xA;  ON ERP_IMPLT_promotions_gift.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN prj_promotions_head &#xA;  ON ERP_IMPLT_promotions_head.code_Promotion = prj_promotions_head.Code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  WHERE not exists (SELECT Code_Promotion, Code_Entity&#xA;    FROM prj_promotions_hier_gift&#xA;&#x9;WHERE ERP_IMPLT_promotions_gift.Code_Product = prj_promotions_hier_gift.Code_Entity)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_hier_gift SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code_Promotion = MOD.Code_Promotion,&#xA;Code_Entity = MOD.Code_Entity,&#xA;Quantity_Gift = MOD.Quantity_Gift,&#xA;Maximun_Gift = MOD.Maximun_Gift,&#xA;Price_Gift = MOD.Price_Gift,&#xA;Unit_Sales = MOD.Unit_Sales,&#xA;Code_Currency = MOD.Code_Currency&#xA;FROM&#xA;(SELECT prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Product AS Code_Entity,&#xA;&#x9;&#x9;&#x9;&#x9;Quantity AS Quantity_Gift,&#xA;&#x9;&#x9;&#x9;    '999999' AS Maximun_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Price_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;Type_Unit AS Unit_Sales,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Code_Currency --Traer de prj_currency&#xA;  FROM ERP_IMPLT_promotions_gift&#xA;  INNER JOIN ERP_IMPLT_promotions_head &#xA;  ON ERP_IMPLT_promotions_gift.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN prj_promotions_head &#xA;  ON ERP_IMPLT_promotions_head.code_Promotion = prj_promotions_head.Code_ofClient &#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT Code_Promotion,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Entity,&#xA;&#x9;&#x9;&#x9;&#x9;Quantity_Gift,&#xA;&#x9;&#x9;&#x9;    Maximun_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;Price_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;Unit_Sales,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Currency FROM prj_promotions_hier_gift) AS MOD INNER JOIN prj_promotions_hier_gift ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code_Promotion = prj_promotions_hier_gift.Code_Promotion AND &#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code_Entity = prj_promotions_hier_gift.Code_Entity&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_promtions_hierarchy"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B7ACFF00-7BF8-44FE-B262-0104B1592E41}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_promtions_hierarchy"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="INSERT INTO prj_promotions_hierarchy(&#xA;      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User,&#xA;      Delete_Date, Platform, &#xA;&#x9;  Code_Promotion, &#xA;&#x9;  Code_Entity,&#xA;      Unit_Sales,&#xA;      Quantity)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, &#xA;                View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_Date,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_User,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_Date,  &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;&#x9;&#x9; prj_promotions_head.code as Code_Promotion,&#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;Code_Product AS Code_Entity,&#xA;&#x9;&#x9;&#x9;&#x9;Type_Unit AS Unit_Sales,&#xA;&#x9;&#x9;&#x9;&#x9;Quantity&#xA;  FROM ERP_IMPLT_promotions_detail &#xA;  INNER JOIN ERP_IMPLT_promotions_head &#xA;  ON ERP_IMPLT_promotions_detail.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN prj_promotions_head &#xA;  ON ERP_IMPLT_promotions_head.code_Promotion = prj_promotions_head.Code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA; WHERE not exists (SELECT Code_Promotion, Code_Entity &#xA;    FROM prj_promotions_hierarchy WHERE ERP_IMPLT_promotions_detail.Code_Product = prj_promotions_hierarchy.Code_Entity)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_hierarchy SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code_Promotion = MOD.Code_Promotion,&#xA;Code_Entity = MOD.Code_Entity,&#xA;Unit_Sales = MOD.Unit_Sales,&#xA;Quantity = MOD.Quantity&#xA;FROM&#xA;(SELECT prj_promotions_head.code as Code_Promotion,&#xA;&#x9;   &#x9;&#x9;&#x9;&#x9;Code_Product AS Code_Entity,&#xA;&#x9;&#x9;&#x9;&#x9;Type_Unit AS Unit_Sales,&#xA;&#x9;&#x9;&#x9;&#x9;Quantity&#xA;  FROM ERP_IMPLT_promotions_detail &#xA;  INNER JOIN ERP_IMPLT_promotions_head &#xA;  ON ERP_IMPLT_promotions_detail.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN prj_promotions_head &#xA;  ON ERP_IMPLT_promotions_head.code_Promotion = prj_promotions_head.Code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT Code_Promotion,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Entity,&#xA;&#x9;&#x9;&#x9;&#x9;Unit_Sales,&#xA;&#x9;&#x9;&#x9;    Quantity FROM prj_promotions_hierarchy) AS MOD INNER JOIN prj_promotions_hierarchy ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code_Promotion = prj_promotions_hierarchy.Code_Promotion AND &#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code_Entity = prj_promotions_hierarchy.Code_Entity&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_users_control"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_users_control"
      DTS:DTSID="{ff2dba60-5532-4aeb-a90d-1cb6f77cb989}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_users_control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_users_control (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code_User, Control1, Control2, Control3, Account_Gen_NI, &#xA;                      Account_Gen_Amount, Act_DDP, Coll_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, Man_Print_Col, Mod_Promo_Dis, Mod_Promo, Con_Check_Return, &#xA;                      Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, A_Return_Good, A_Return_Bad, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_New_Order, Del_Route_Re, Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, &#xA;                      Manage_Less)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;Code_User, Control1, Control2, Control3, Account_Gen_NI, Account_Gen_Amount, Act_DDP, Coll_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, Man_Print_Col, Mod_Promo_Dis, &#xA;&#x9;&#x9;Mod_Promo, Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, A_Return_Good, A_Return_Bad, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;        Del_Route_New_Order, Del_Route_Re, Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less&#xA;FROM         ERP_IMPLT_users_control CROSS JOIN View_System_Fields_ERP&#xA;WHERE Code_User not in (SELECT Code_User from prj_users_control)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_users_control SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Control1 = MOD.Control1, Control2 = MOD.Control2, Control3 = MOD.Control3, Account_Gen_NI = MOD.Account_Gen_NI, Account_Gen_Amount = MOD.Account_Gen_Amount, &#xA;&#x9;&#x9;Act_DDP = MOD.Act_DDP, Coll_Print_NFC = MOD.Coll_Print_NFC, A_Prod_Price0 = MOD.A_Prod_Price0, A_Mod_Price = MOD.A_Mod_Price, Max_Doc_Lock = MOD.Max_Doc_Lock, &#xA;&#x9;&#x9;Man_Print_Col = MOD.Man_Print_Col, Mod_Promo_Dis = MOD.Mod_Promo_Dis, Mod_Promo = MOD.Mod_Promo, Con_Check_Return = MOD.Con_Check_Return, &#xA;&#x9;&#x9;Check_Return_Cred = MOD.Check_Return_Cred, Check_Return_Cash = MOD.Check_Return_Cash, Doc_Pen_Cred = MOD.Doc_Pen_Cred, DDP_Doc_neg = MOD.DDP_Doc_neg, &#xA;&#x9;&#x9;A_Return_Good = MOD.A_Return_Good, A_Return_Bad = MOD.A_Return_Bad, Man_Stock_Acc = MOD.Man_Stock_Acc, Cop_Prin_Order = MOD.Cop_Prin_Order, &#xA;&#x9;&#x9;Stock_Liq = MOD.Stock_Liq, Del_Route_New_Order = MOD.Del_Route_New_Order, Del_Route_Re = MOD.Del_Route_Re, Del_Route_Acc_Order = MOD.Del_Route_Acc_Order, &#xA;&#x9;&#x9;Del_Route_Acc_Today = MOD.Del_Route_Acc_Today, Del_Route_Acc_All = MOD.Del_Route_Acc_All, Print_NFC = MOD.Print_NFC, &#xA;&#x9;&#x9;Mod_Date_Delivery = MOD.Mod_Date_Delivery, Manage_More = MOD.Manage_More, Manage_Less = MOD.Manage_Less &#xA;FROM&#xA;(SELECT  Code_User, Control1, Control2, Control3, Account_Gen_NI, Account_Gen_Amount, Act_DDP, Coll_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, &#xA;&#x9;&#x9;Man_Print_Col, Mod_Promo_Dis, Mod_Promo, Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, A_Return_Good, &#xA;&#x9;&#x9;A_Return_Bad, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, Del_Route_New_Order, Del_Route_Re, Del_Route_Acc_Order, Del_Route_Acc_Today, &#xA;&#x9;&#x9;Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less&#xA;FROM         ERP_IMPLT_users_control&#xA;EXCEPT&#xA;SELECT  Code_User, Control1, Control2, Control3, Account_Gen_NI, Account_Gen_Amount, Act_DDP, Coll_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, &#xA;&#x9;&#x9;Man_Print_Col, Mod_Promo_Dis, Mod_Promo, Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, A_Return_Good, &#xA;&#x9;&#x9;A_Return_Bad, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, Del_Route_New_Order, Del_Route_Re, Del_Route_Acc_Order, Del_Route_Acc_Today, &#xA;&#x9;&#x9;Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less&#xA;FROM         prj_users_control) as MOD INNER JOIN prj_users_control ON MOD.Code_User = prj_users_control.Code_User CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_users_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_User FROM ERP_IMPLT_users_control where Code_User = prj_users_control.Code_User and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_users_control SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_users_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_User FROM ERP_IMPLT_users_control where Code_User = prj_users_control.Code_User and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_users_control CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_users_control CI"
      DTS:DTSID="{a3ba7189-a35b-4907-8ae1-68b389afbed7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_users_control CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="38">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_users_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_User FROM ERP_IMPLT_users_control where Code_User = prj_users_control.Code_User) and Code_User &lt;&gt; '9999'&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_users_fiscal"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0198D1E1-7418-43D7-B1E4-9657113BF63F}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_users_fiscal"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Solamente tratamos alta.&#xA;&#xA;INSERT INTO prj_users_fiscal(Create_User, Create_Date, Modify_User, Modify_Date, Delete_Date, Delete_User, Platform, &#xA;            Code_User, Type,  Counter_Ini, Counter_Fin, N_Counter, Base, Code_Route, Code_Sales_Org,&#xA;&#x9;&#x9;&#x9;Code_Unit_Org, date_fin, date_ini,  Internal_Request,&#xA;&#x9;&#x9;&#x9;&#x9; Sub_Number)&#xA;SELECT  DISTINCT View_System_Fields_ERP.Create_User, &#xA;                 View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9; View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9; View_System_Fields_ERP.Modify_Date, &#xA;                 NULL as Delete_Date,&#xA;&#x9;&#x9;&#x9;&#x9; NULL as Delete_User,     &#xA;&#x9;&#x9;&#x9;     View_System_Fields_ERP.Platform,&#xA;                 core_users.Code as Code_User,&#xA;&#x9;&#x9;         Type,&#xA;&#x9;&#x9;&#x9;&#x9; Counter_Ini,&#xA;&#x9;&#x9;&#x9;&#x9; Counter_Fin,&#xA;&#x9;&#x9;&#x9;&#x9; N_Counter,&#xA;&#x9;&#x9;&#x9;&#x9; Base,&#xA;&#x9;&#x9;&#x9;&#x9; Code_Route,&#xA;&#x9;&#x9;&#x9;&#x9; Code_Sales_Org,&#xA;&#x9;&#x9;&#x9;&#x9; Code_Unit_Org,&#xA;&#x9;&#x9;&#x9;&#x9; Date_End AS Date_Fin,&#xA;&#x9;&#x9;&#x9;&#x9; Date_Ini AS Date_Ini,&#xA;&#x9;&#x9;&#x9;&#x9; Internal_Request,&#xA;&#x9;&#x9;&#x9;&#x9; Sub_Number&#xA;  FROM ERP_IMPLT_users_fiscal &#xA;  INNER JOIN core_users ON ERP_IMPLT_users_fiscal.Code_Seller = core_users.Code &#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS(SELECT Code_User, &#xA;Type,  Counter_Ini, Counter_Fin, N_Counter, Base, &#xA;Code_Route,&#xA;Code_Sales_Org, Code_Unit_Org FROM prj_users_fiscal &#xA;                  WHERE Code_User = ERP_IMPLT_users_fiscal.Code_Seller AND type = ERP_IMPLT_users_fiscal.Type &#xA;&#x9;&#x9;&#x9;&#x9;  and  prj_users_fiscal.code_sales_org = ERP_IMPLT_users_fiscal.Code_Sales_Org )&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;  -- Modificación&#xA;UPDATE prj_users_fiscal SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;&#x9;&#x9;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;&#x9;&#x9;Delete_User = NULL, Delete_Date = NULL, &#xA;&#x9;&#x9;Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_User = MOD.Code_User,&#xA;&#x9;&#x9;Type = MOD.type,&#xA;&#x9;&#x9;Counter_Ini = MOD.Counter_Ini,&#xA;&#x9;    Counter_Fin = MOD.Counter_Fin,&#xA;&#x9;&#x9;N_Counter = MOD.N_Counter,&#xA;&#x9;&#x9;Base = MOD.Base,&#xA;&#x9;&#x9;Code_Route = MOD.Code_Route,&#xA;&#x9;&#x9;code_sales_org = MOD.Code_Sales_Org,&#xA;&#x9;&#x9;Code_Unit_Org = MOD.Code_Unit_Org,&#xA;&#x9;&#x9;Date_Ini = MOD.Date_Ini,&#xA;&#x9;&#x9;Date_Fin = MOD.Date_End,&#xA;&#x9;&#x9;Internal_Request = MOD.Internal_Request,&#xA;&#x9;&#x9;Sub_Number = MOD.Sub_Number&#xA;FROM&#xA;(SELECT  core_users.Code as Code_User,&#xA;&#x9;&#x9;         Type,&#xA;&#x9;&#x9;&#x9;&#x9; Counter_Ini,&#xA;&#x9;&#x9;&#x9;&#x9; Counter_Fin,&#xA;&#x9;&#x9;&#x9;&#x9; N_Counter,&#xA;&#x9;&#x9;&#x9;&#x9; Base,&#xA;&#x9;&#x9;&#x9;&#x9; Code_Route,&#xA;&#x9;&#x9;&#x9;&#x9; Code_Sales_Org,&#xA;&#x9;&#x9;&#x9;&#x9; Code_Unit_Org,&#xA;&#x9;&#x9;&#x9;&#x9; Date_Ini,&#xA;&#x9;&#x9;&#x9;&#x9; Date_End,&#xA;&#x9;&#x9;&#x9;&#x9; Internal_Request,&#xA;&#x9;&#x9;&#x9;&#x9; Sub_Number&#xA;FROM         ERP_IMPLT_users_fiscal INNER JOIN core_users ON ERP_IMPLT_users_fiscal.Code_Seller = core_users.Code&#xA;EXCEPT&#xA;SELECT  Code_User,&#xA;&#x9;&#x9;         Type,&#xA;&#x9;&#x9;&#x9;&#x9; Counter_Ini,&#xA;&#x9;&#x9;&#x9;&#x9; Counter_Fin,&#xA;&#x9;&#x9;&#x9;&#x9; N_Counter,&#xA;&#x9;&#x9;&#x9;&#x9; Base,&#xA;&#x9;&#x9;&#x9;&#x9; Code_Route,&#xA;&#x9;&#x9;&#x9;&#x9; Code_Sales_Org,&#xA;&#x9;&#x9;&#x9;&#x9; Code_Unit_Org, Date_Ini, date_fin, Internal_Request,&#xA;&#x9;&#x9;&#x9;&#x9; Sub_Number&#xA;FROM         prj_users_fiscal ) as MOD CROSS JOIN View_System_Fields_ERP &#xA;WHERE prj_users_fiscal.Code_user = MOD.Code_User &#xA;AND prj_users_fiscal.Code_Sales_Org = MOD.Code_Sales_Org&#xA;AND prj_users_fiscal.Code_Unit_Org = MOD.Code_Unit_Org &#xA;AND prj_users_fiscal.Type = MOD.Type" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_users_type_control"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_users_type_control"
      DTS:DTSID="{7bfc752c-56a8-4605-b0b8-ba3bbed31cfe}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_users_type_control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_users_type_control (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code_Type, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;Code_Type, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, &#xA;&#x9;&#x9;Mod_Date_Delivery, Manage_More, Manage_Less&#xA;FROM         ERP_IMPLT_users_type_control CROSS JOIN View_System_Fields_ERP&#xA;WHERE Code_Type not in (SELECT Code_Type from prj_users_type_control)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_users_type_control SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Man_Stock_Acc = MOD.Man_Stock_Acc, Cop_Prin_Order = MOD.Cop_Prin_Order, Stock_Liq = MOD.Stock_Liq, Del_Route_Acc_Order = MOD.Del_Route_Acc_Order, &#xA;&#x9;&#x9;Del_Route_Acc_Today = MOD.Del_Route_Acc_Today, Del_Route_Acc_All = MOD.Del_Route_Acc_All, Print_NFC = MOD.Print_NFC, &#xA;&#x9;&#x9;Mod_Date_Delivery = MOD.Mod_Date_Delivery, Manage_More = MOD.Manage_More, Manage_Less = MOD.Manage_Less&#xA;FROM&#xA;(SELECT  Code_Type, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, &#xA;&#x9;&#x9;Mod_Date_Delivery, Manage_More, Manage_Less&#xA;FROM         ERP_IMPLT_users_type_control&#xA;EXCEPT&#xA;SELECT  Code_Type, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, &#xA;&#x9;&#x9;Mod_Date_Delivery, Manage_More, Manage_Less&#xA;FROM         prj_users_type_control) as MOD INNER JOIN prj_users_type_control ON MOD.Code_Type = prj_users_type_control.Code_Type CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_users_type_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users_type_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_Type FROM ERP_IMPLT_users_type_control where Code_Type = prj_users_type_control.Code_Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_users_type_control SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_users_type_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_Type FROM ERP_IMPLT_users_type_control where Code_Type = prj_users_type_control.Code_Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_users_type_control CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_users_type_control CI"
      DTS:DTSID="{62e3dceb-4b62-46cd-97a2-3ff85b42ed9b}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_users_type_control CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="7">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_users_type_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users_type_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_Type FROM ERP_IMPLT_users_type_control where Code_Type = prj_users_type_control.Code_Type)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products"
      DTS:DTSID="{7e2b6c16-79d4-48a0-939d-650d5b3426c0}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO products (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code,  Code_ofClient, Description, Description_short, &#xA;                      Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, &#xA;                      Code_ClassificationD, Code_ClassificationE, Code_Status, Blocked, Ean14, Ean128, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, &#xA;                      Price_Min, Price_Max, Price, Pack, Code_ERP, Observations, Code_Hierarchy6)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by Code_ofClient) + 100000 as varchar(8)) as Code,  Code_ofClient,  Description, Description_short, &#xA;    Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, &#xA;    Code_ClassificationD, Code_ClassificationE, Code_Status, Blocked, Ean14, Ean128, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, &#xA;    Price_Min, Price_Max, Price, Pack, Code_ERP, Observations, Code_Hierarchy6&#xA;FROM        ERP_IMPLT_products CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient from products where Code_ofClient = ERP_IMPLT_products.Code_ofClient)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Description = MOD.Description, Description_short = MOD.Description_short, Code_Hierarchy1 = MOD.Code_Hierarchy1, Code_Hierarchy2 = MOD.Code_Hierarchy2, &#xA;&#x9;&#x9;Code_Hierarchy3 = MOD.Code_Hierarchy3, Code_Hierarchy4 = MOD.Code_Hierarchy4, Code_Hierarchy5 = MOD.Code_Hierarchy5, Code_ClassificationA = MOD.Code_ClassificationA, &#xA;&#x9;&#x9;Code_ClassificationB = MOD.Code_ClassificationB, Code_ClassificationC = MOD.Code_ClassificationC, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_ClassificationE = MOD.Code_ClassificationE, Code_Status = MOD.Code_Status, Blocked = MOD.Blocked, Ean14 = MOD.Ean14, Ean128 = MOD.Ean128, &#xA;&#x9;&#x9;Factor_Conversion = MOD.Factor_Conversion, Unit_Box = MOD.Unit_Box, Unit_Pallet = MOD.Unit_Pallet, Unit_Type_Sales = MOD.Unit_Type_Sales, &#xA;&#x9;&#x9;Unit_Type_Inv = MOD.Unit_Type_Inv, Price_Min = MOD.Price_Min, Price_Max = MOD.Price_Max, Price = MOD.Price, Pack = MOD.Pack, Code_ERP = MOD.Code_ERP, &#xA;&#x9;&#x9;Observations = MOD.Observations, Code_Hierarchy6 = MOD.Code_Hierarchy6&#xA;FROM&#xA;(SELECT Code_ofClient, Description, Description_short, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5, &#xA;&#x9;&#x9;Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, Code_ClassificationE, Code_Status, Blocked, &#xA;&#x9;&#x9;Ean14, Ean128, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Price_Min, Price_Max, Price, Pack, Code_ERP, &#xA;&#x9;&#x9;Observations, Code_Hierarchy6&#xA;FROM       ERP_IMPLT_products &#xA;EXCEPT&#xA;SELECT  Code_ofClient, Description, Description_short, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5, &#xA;&#x9;&#x9;Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, Code_ClassificationE, Code_Status, Blocked, &#xA;&#x9;&#x9;Ean14, Ean128, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Price_Min, Price_Max, Price, Pack, Code_ERP, &#xA;&#x9;&#x9;Observations, Code_Hierarchy6&#xA;FROM         products) as MOD INNER JOIN products ON MOD.Code_ofClient = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_products where Code_ofClient = products.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_products where Code_ofClient = products.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_products (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, Weight, Secuence, Code_AgrupationA1, &#xA;                      Code_AgrupationA2, Priority, New_Item, UnitsUV, WeightUV, Code_AgrupationB1, Code_AgrupationB2, BoxLayer, Add_as_Total, Unit_Type_Weight, &#xA;                      Factor_Convert_W, Trazability, Volume, Unit_Type_Volume, Code_Hierarchy_All, Alcohol, Code_Skill, Type_Product)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;products.Code, Weight, Secuence, Code_AgrupationA1, &#xA;                      Code_AgrupationA2, Priority, New_Item, UnitsUV, WeightUV, Code_AgrupationB1, Code_AgrupationB2, BoxLayer, Add_as_Total, Unit_Type_Weight, &#xA;                      Factor_Convert_W, Trazability, Volume, Unit_Type_Volume, Code_Hierarchy_All, Alcohol, Code_Skill, Type_Product&#xA;FROM   ERP_IMPLT_products inner join products on ERP_IMPLT_products.Code_ofClient = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from prj_products where Code = products.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Weight = MOD.Weight, Secuence = MOD.Secuence, Code_AgrupationA1 = MOD.Code_AgrupationA1, Code_AgrupationA2 = MOD.Code_AgrupationA2, &#xA;&#x9;&#x9;Priority = MOD.Priority, New_Item = MOD.New_Item, UnitsUV = MOD.UnitsUV, WeightUV = MOD.WeightUV, Code_AgrupationB1 = MOD.Code_AgrupationB1, &#xA;&#x9;&#x9;Code_AgrupationB2 = MOD.Code_AgrupationB2, BoxLayer = MOD.BoxLayer, Add_as_Total = MOD.Add_as_Total, Unit_Type_Weight = MOD.Unit_Type_Weight, &#xA;&#x9;&#x9;Factor_Convert_W = MOD.Factor_Convert_W, Trazability = MOD.Trazability, Volume = MOD.Volume, Unit_Type_Volume = MOD.Unit_Type_Volume, &#xA;&#x9;&#x9;Code_Hierarchy_All = MOD.Code_Hierarchy_All, Alcohol = MOD.Alcohol, Code_Skill = MOD.Code_Skill, Type_Product = MOD.Type_Product&#xA;FROM&#xA;(SELECT products.Code, Weight, Secuence, Code_AgrupationA1, Code_AgrupationA2, Priority, New_Item, UnitsUV, WeightUV, Code_AgrupationB1, &#xA;&#x9;&#x9;Code_AgrupationB2, BoxLayer, Add_as_Total, Unit_Type_Weight, Factor_Convert_W, Trazability, Volume, Unit_Type_Volume, Code_Hierarchy_All, &#xA;&#x9;&#x9;Alcohol, Code_Skill, Type_Product&#xA;FROM       ERP_IMPLT_products inner join products on ERP_IMPLT_products.Code_ofClient = products.Code_ofClient &#xA;EXCEPT&#xA;SELECT  Code, Weight, Secuence, Code_AgrupationA1, Code_AgrupationA2, Priority, New_Item, UnitsUV, WeightUV, Code_AgrupationB1, &#xA;&#x9;&#x9;Code_AgrupationB2, BoxLayer, Add_as_Total, Unit_Type_Weight, Factor_Convert_W, Trazability, Volume, Unit_Type_Volume, Code_Hierarchy_All, &#xA;&#x9;&#x9;Alcohol, Code_Skill, Type_Product&#xA;FROM         prj_products) as MOD INNER JOIN prj_products ON MOD.Code = prj_products.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_products SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT products.Code FROM ERP_IMPLT_products inner join products on ERP_IMPLT_products.Code_ofClient = products.Code_ofClient&#xA;where products.Code = prj_products.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_products SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT products.Code FROM ERP_IMPLT_products inner join products on ERP_IMPLT_products.Code_ofClient = products.Code_ofClient&#xA;where products.Code = prj_products.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products CI"
      DTS:DTSID="{7efca2e6-bb4d-49e7-88a4-10011bcee62b}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="8">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;UPDATE products SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_products where Code_ofClient = products.Code_ofClient) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;UPDATE prj_products SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT products.Code FROM ERP_IMPLT_products inner join products on ERP_IMPLT_products.Code_ofClient = products.Code_ofClient&#xA;where products.Code = prj_products.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_array"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_array"
      DTS:DTSID="{38a73ed5-487c-4676-a358-d2c3282502ae}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_array"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_products_array (Code, Type, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_ClassificationA as Code, 1 as Type, Code_ClassificationA as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_array where code = ERP_IMPLT_products.Code_ClassificationA and Type = '1') &#xA;and not exists (SELECT Code FROM products_array where code = ERP_IMPLT_products.Code_ClassificationA and Type = '1') and Code_ClassificationA is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationB as Code, 2 as Type, Code_ClassificationB as Description, '0' as Source_Create, '1' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_array where code = ERP_IMPLT_products.Code_ClassificationB and Type = '2') &#xA;and not exists (SELECT Code FROM products_array where code = ERP_IMPLT_products.Code_ClassificationB and Type = '2') and Code_ClassificationB is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationC as Code, 3 as Type, Code_ClassificationC as Description, '0' as Source_Create, '1' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_array where code = ERP_IMPLT_products.Code_ClassificationC and Type = '3') &#xA;and not exists (SELECT Code FROM products_array where code = ERP_IMPLT_products.Code_ClassificationC and Type = '3') and Code_ClassificationC is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationD as Code, 4 as Type, Code_ClassificationD as Description, '0' as Source_Create, '1' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_array where code = ERP_IMPLT_products.Code_ClassificationD and Type = '4') &#xA;and not exists (SELECT Code FROM products_array where code = ERP_IMPLT_products.Code_ClassificationD and Type = '4') and Code_ClassificationD is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationE as Code, 5 as Type, Code_ClassificationE as Description, '0' as Source_Create, '1' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_array where code = ERP_IMPLT_products.Code_ClassificationE and Type = '5') &#xA;and not exists (SELECT Code FROM products_array where code = ERP_IMPLT_products.Code_ClassificationE and Type = '5') and Code_ClassificationE is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO products_array (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Type, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Type, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_products_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM products_array where Code = ERP_IMPLT_products_array.Code and Type = ERP_IMPLT_products_array.Type)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_array SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Type, Description&#xA;FROM         ERP_IMPLT_products_array&#xA;EXCEPT&#xA;SELECT     Code, Type, Description&#xA;FROM         products_array) as MOD INNER JOIN products_array ON MOD.Code = products_array.Code and MOD.Type = products_array.Type CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_products_array where Code = products_array.Code and Type = products_array.Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_array SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_products_array where Code = products_array.Code and Type = products_array.Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_array CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_array CI"
      DTS:DTSID="{2e486832-0ad8-494d-9d39-92faf33c7f4d}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_array CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="9">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE products_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_products_array where Code = products_array.Code and Type = products_array.Type) &#xA;and type not in (6,30,31)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy2"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy2"
      DTS:DTSID="{6b4cc2ca-6b4f-4dd4-ab58-92074e5f3763}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_products_hierarchy2 (Code, Code_hierarchy1, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_hierarchy2 as Code, Code_hierarchy1, Code_hierarchy2 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy2 where code = ERP_IMPLT_products.Code_hierarchy2 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1) &#xA;and not exists (SELECT Code FROM products_hierarchy2 where code = ERP_IMPLT_products.Code_hierarchy2 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1) and Code_hierarchy2 is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO products_hierarchy2 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_hierarchy1, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_hierarchy1, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_products_hierarchy2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM products_hierarchy2 where Code = ERP_IMPLT_products_hierarchy2.Code and Code_hierarchy1 = ERP_IMPLT_products_hierarchy2.Code_hierarchy1)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_hierarchy2 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_hierarchy1, Description&#xA;FROM         ERP_IMPLT_products_hierarchy2&#xA;EXCEPT&#xA;SELECT     Code, Code_hierarchy1, Description&#xA;FROM         products_hierarchy2) as MOD INNER JOIN products_hierarchy2 ON MOD.Code = products_hierarchy2.Code and MOD.Code_hierarchy1 = products_hierarchy2.Code_hierarchy1 CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_hierarchy2 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_products_hierarchy2 where Code = products_hierarchy2.Code and Code_hierarchy1 = products_hierarchy2.Code_hierarchy1 and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_hierarchy2 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_hierarchy2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_products_hierarchy2 where Code = products_hierarchy2.Code and Code_hierarchy1 = products_hierarchy2.Code_hierarchy1 and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy2 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy2 CI"
      DTS:DTSID="{03cbf98c-fd79-42b7-a1a2-54ddeb5cf576}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy2 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="10">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE products_hierarchy2 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy2 where Code = products_hierarchy2.Code and Code_hierarchy1 = products_hierarchy2.Code_hierarchy1) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy3"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy3"
      DTS:DTSID="{020923a3-18b8-4fb5-bba9-d93546738da0}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy3"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_products_hierarchy3 (Code, Code_hierarchy1, Code_hierarchy2, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_hierarchy3 as Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy3 where code = ERP_IMPLT_products.Code_hierarchy3 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products.Code_hierarchy2) &#xA;and not exists (SELECT Code FROM products_hierarchy3 where code = ERP_IMPLT_products.Code_hierarchy3 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products.Code_hierarchy2) and Code_hierarchy3 is not null&#xA;GO&#xA;&#xA;&#xA;-- Alta&#xA;INSERT INTO products_hierarchy3 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_hierarchy1, Code_hierarchy2, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_hierarchy1, Code_hierarchy2, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_products_hierarchy3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM products_hierarchy3 where Code = ERP_IMPLT_products_hierarchy3.Code and Code_hierarchy1 = ERP_IMPLT_products_hierarchy3.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products_hierarchy3.Code_hierarchy2)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_hierarchy3 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_hierarchy1, Code_hierarchy2, Description&#xA;FROM         ERP_IMPLT_products_hierarchy3&#xA;EXCEPT&#xA;SELECT     Code, Code_hierarchy1, Code_hierarchy2, Description&#xA;FROM         products_hierarchy3) as MOD INNER JOIN products_hierarchy3 ON MOD.Code = products_hierarchy3.Code and MOD.Code_hierarchy1 = products_hierarchy3.Code_hierarchy1 and MOD.Code_hierarchy2 = products_hierarchy3.Code_hierarchy2 CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_hierarchy3 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_products_hierarchy3 where Code = products_hierarchy3.Code and Code_hierarchy1 = products_hierarchy3.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy3.Code_hierarchy2 and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_hierarchy3 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_hierarchy3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_products_hierarchy3 where Code = products_hierarchy3.Code and Code_hierarchy1 = products_hierarchy3.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy3.Code_hierarchy2 and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy3 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy3 CI"
      DTS:DTSID="{1b152ac8-d1ff-4d9c-a7c1-1c9a5ffeddd9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy3 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="11">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE products_hierarchy3 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy3 where Code = products_hierarchy3.Code and Code_hierarchy1 = products_hierarchy3.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy3.Code_hierarchy2) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy4"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy4"
      DTS:DTSID="{2dd700a3-5cd9-449e-9c77-fb6011fa73e4}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy4"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_products_hierarchy4 (Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_hierarchy4 as Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Code_hierarchy4 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy4 where code = ERP_IMPLT_products.Code_hierarchy4 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products.Code_hierarchy2 and Code_hierarchy3 = ERP_IMPLT_products.Code_hierarchy3) &#xA;and not exists (SELECT Code FROM products_hierarchy4 where code = ERP_IMPLT_products.Code_hierarchy4 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products.Code_hierarchy2 and Code_hierarchy3 = ERP_IMPLT_products.Code_hierarchy3) and Code_hierarchy4 is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO products_hierarchy4 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_products_hierarchy4 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM products_hierarchy4 where Code = ERP_IMPLT_products_hierarchy4.Code and Code_hierarchy1 = ERP_IMPLT_products_hierarchy4.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products_hierarchy4.Code_hierarchy2 and Code_hierarchy3 = ERP_IMPLT_products_hierarchy4.Code_hierarchy3)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_hierarchy4 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Description&#xA;FROM         ERP_IMPLT_products_hierarchy4&#xA;EXCEPT&#xA;SELECT     Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Description&#xA;FROM         products_hierarchy4) as MOD INNER JOIN products_hierarchy4 ON MOD.Code = products_hierarchy4.Code and MOD.Code_hierarchy1 = products_hierarchy4.Code_hierarchy1 and MOD.Code_hierarchy2 = products_hierarchy4.Code_hierarchy2 and MOD.Code_hierarchy3 = products_hierarchy4.Code_hierarchy3 CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_hierarchy4 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy4 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_products_hierarchy4 where Code = products_hierarchy4.Code and Code_hierarchy1 = products_hierarchy4.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy4.Code_hierarchy2 and Code_hierarchy3 = products_hierarchy4.Code_hierarchy3 and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_hierarchy4 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_hierarchy4 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_products_hierarchy4 where Code = products_hierarchy4.Code and Code_hierarchy1 = products_hierarchy4.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy4.Code_hierarchy2 and Code_hierarchy3 = products_hierarchy4.Code_hierarchy3 and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy4 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy4 CI"
      DTS:DTSID="{ab2db09b-58ea-44ce-8d89-b836b12e2857}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy4 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="12">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE products_hierarchy4 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy4 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy4 where Code = products_hierarchy4.Code and Code_hierarchy1 = products_hierarchy4.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy4.Code_hierarchy2 and Code_hierarchy3 = products_hierarchy4.Code_hierarchy3) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_measure"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_measure"
      DTS:DTSID="{469821ce-75c3-4847-8511-59e8ddfd984b}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_measure"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO products_measure (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Product, Unit_Measure, Factor_Conversion, EAN, &#xA;                      P_Lengh, P_Width, P_Height, Unit_Type_Measure, Weight, Unit_Measure_Weight)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;products.Code as Code_product, ERP_IMPLT_products_measure.Unit_Measure, ERP_IMPLT_products_measure.Factor_Conversion, ERP_IMPLT_products_measure.EAN, &#xA;    ERP_IMPLT_products_measure.P_Lengh, ERP_IMPLT_products_measure.P_Width, ERP_IMPLT_products_measure.P_Height, ERP_IMPLT_products_measure.Unit_Type_Measure, &#xA;&#x9;ERP_IMPLT_products_measure.Weight, ERP_IMPLT_products_measure.Unit_Measure_Weight&#xA;FROM        ERP_IMPLT_products_measure inner join products on ERP_IMPLT_products_measure.Code_product = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_product, Unit_Measure from products_measure where Code_product = products.Code and &#xA;Unit_Measure = ERP_IMPLT_products_measure.Unit_Measure)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_measure SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Factor_Conversion = MOD.Factor_Conversion, EAN = MOD.EAN, P_Lengh = MOD.P_Lengh, P_Width = MOD.P_Width, P_Height = MOD.P_Height, &#xA;&#x9;&#x9;Unit_Type_Measure = MOD.Unit_Type_Measure, Weight = MOD.Weight, Unit_Measure_Weight = MOD.Unit_Measure_Weight&#xA;FROM&#xA;(SELECT  products.Code as Code_product, ERP_IMPLT_products_measure.Unit_Measure, ERP_IMPLT_products_measure.Factor_Conversion, ERP_IMPLT_products_measure.EAN, &#xA;    ERP_IMPLT_products_measure.P_Lengh, ERP_IMPLT_products_measure.P_Width, ERP_IMPLT_products_measure.P_Height, ERP_IMPLT_products_measure.Unit_Type_Measure, &#xA;&#x9;ERP_IMPLT_products_measure.Weight, ERP_IMPLT_products_measure.Unit_Measure_Weight&#xA;     FROM   ERP_IMPLT_products_measure inner join products on ERP_IMPLT_products_measure.Code_product = products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Product, Unit_Measure, Factor_Conversion, EAN, P_Lengh, P_Width, P_Height, Unit_Type_Measure, Weight, Unit_Measure_Weight&#xA;FROM         products_measure) as MOD INNER JOIN products_measure ON MOD.Code_product = products_measure.Code_product and MOD.Unit_Measure = products_measure.Unit_Measure&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_measure SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_measure CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_measure.Code_product FROM ERP_IMPLT_products_measure inner join products on ERP_IMPLT_products_measure.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = products_measure.Code_product and ERP_IMPLT_products_measure.Unit_Measure = products_measure.Unit_Measure &#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_measure SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_measure CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_measure.Code_product FROM ERP_IMPLT_products_measure inner join products on ERP_IMPLT_products_measure.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = products_measure.Code_product and ERP_IMPLT_products_measure.Unit_Measure = products_measure.Unit_Measure &#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_measure CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_measure CI"
      DTS:DTSID="{cce97053-26ec-4477-92ef-1149f7773b00}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_measure CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="13">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE products_measure SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_measure CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_products_measure.Code_product FROM ERP_IMPLT_products_measure inner join products on ERP_IMPLT_products_measure.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = products_measure.Code_product and ERP_IMPLT_products_measure.Unit_Measure = products_measure.Unit_Measure) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_organization"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_organization"
      DTS:DTSID="{31ca285c-aa41-4230-b7a5-46b111d6abc7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_organization"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, &#xA;                      Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, ERP_IMPLT_products_organization.Code_Status, ERP_IMPLT_products_organization.Lock, &#xA;&#x9;ERP_IMPLT_products_organization.Factor_Conversion, ERP_IMPLT_products_organization.Unit_Box, ERP_IMPLT_products_organization.Unit_Pallet, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Type_Sales, ERP_IMPLT_products_organization.Unit_Type_Inv, ERP_IMPLT_products_organization.Code_ClassificationD, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationE, ERP_IMPLT_products_organization.Code_ClassificationA, ERP_IMPLT_products_organization.Code_ClassificationB, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationC, ERP_IMPLT_products_organization.Code_Hierarchy1, ERP_IMPLT_products_organization.Code_Hierarchy2, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy3, ERP_IMPLT_products_organization.Code_Hierarchy4, ERP_IMPLT_products_organization.Code_Hierarchy5&#xA;FROM        ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Product, Code_Unit_Org, Code_Sales_Org from products_organization where Code_Product = Products.Code and &#xA;Code_Unit_Org = ERP_IMPLT_products_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_products_organization.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Lock = MOD.Lock, Factor_Conversion = MOD.Factor_Conversion, Unit_Box = MOD.Unit_Box, Unit_Pallet = MOD.Unit_Pallet, &#xA;&#x9;&#x9;Unit_Type_Sales = MOD.Unit_Type_Sales, Unit_Type_Inv = MOD.Unit_Type_Inv, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_ClassificationE = MOD.Code_ClassificationE, Code_ClassificationA = MOD.Code_ClassificationA, Code_ClassificationB = MOD.Code_ClassificationB, &#xA;&#x9;&#x9;Code_ClassificationC = MOD.Code_ClassificationC, Code_Hierarchy1 = MOD.Code_Hierarchy1, Code_Hierarchy2 = MOD.Code_Hierarchy2, &#xA;&#x9;&#x9;Code_Hierarchy3 = MOD.Code_Hierarchy3, Code_Hierarchy4 = MOD.Code_Hierarchy4, Code_Hierarchy5 = MOD.Code_Hierarchy5&#xA;FROM&#xA;(SELECT  Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, ERP_IMPLT_products_organization.Code_Status, ERP_IMPLT_products_organization.Lock, &#xA;&#x9;ERP_IMPLT_products_organization.Factor_Conversion, ERP_IMPLT_products_organization.Unit_Box, ERP_IMPLT_products_organization.Unit_Pallet, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Type_Sales, ERP_IMPLT_products_organization.Unit_Type_Inv, ERP_IMPLT_products_organization.Code_ClassificationD, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationE, ERP_IMPLT_products_organization.Code_ClassificationA, ERP_IMPLT_products_organization.Code_ClassificationB, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationC, ERP_IMPLT_products_organization.Code_Hierarchy1, ERP_IMPLT_products_organization.Code_Hierarchy2, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy3, ERP_IMPLT_products_organization.Code_Hierarchy4, ERP_IMPLT_products_organization.Code_Hierarchy5&#xA;     FROM   ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, &#xA;                      Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5&#xA;FROM         products_organization) as MOD INNER JOIN products_organization ON MOD.Code_Product = products_organization.Code_Product and MOD.Code_Unit_Org = products_organization.Code_Unit_Org and MOD.Code_Sales_Org = products_organization.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Frecuency, Min_Quantity_Order, Unit_Order, Min_Quantity_Del, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Unit_Del, Code_Hierarchy6, Weight_Variable, Origin_Society, Has_Weight_Management, &#xA;                      Trazability)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Frecuency, ERP_IMPLT_products_organization.Min_Quantity_Order, ERP_IMPLT_products_organization.Unit_Order, &#xA;&#x9;ERP_IMPLT_products_organization.Min_Quantity_Del, ERP_IMPLT_products_organization.Unit_Del, ERP_IMPLT_products_organization.Code_Hierarchy6, &#xA;&#x9;ERP_IMPLT_products_organization.Weight_Variable, &#xA;&#x9;CASE WHEN ERP_IMPLT_products_organization.Code_Sales_Org IN ('1000','6000')&#xA;&#x9;THEN '1000' ELSE '4000' END AS Origin_Society,&#xA;&#x9;ERP_IMPLT_products_organization.Has_Weight_Management, &#xA;&#x9;ERP_IMPLT_products_organization.Trazability&#xA;FROM        ERP_IMPLT_products_organization inner join Products &#xA;on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Product, Code_Unit_Org, Code_Sales_Org from prj_products_organization &#xA;where Code_Product = Products.Code and &#xA;Code_Unit_Org = ERP_IMPLT_products_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_products_organization.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Frecuency = MOD.Code_Frecuency, Min_Quantity_Order = MOD.Min_Quantity_Order, Unit_Order = MOD.Unit_Order, Min_Quantity_Del = MOD.Min_Quantity_Del, &#xA;&#x9;&#x9;Unit_Del = MOD.Unit_Del, Code_Hierarchy6 = MOD.Code_Hierarchy6, Weight_Variable = MOD.Weight_Variable, &#xA;&#x9;&#x9;Origin_Society = MOD.Origin_Society, &#xA;&#x9;&#x9;Has_Weight_Management = MOD.Has_Weight_Management, Trazability = MOD.Trazability&#xA;FROM&#xA;(SELECT  Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Frecuency, ERP_IMPLT_products_organization.Min_Quantity_Order, ERP_IMPLT_products_organization.Unit_Order, &#xA;&#x9;ERP_IMPLT_products_organization.Min_Quantity_Del, ERP_IMPLT_products_organization.Unit_Del, ERP_IMPLT_products_organization.Code_Hierarchy6, &#xA;&#x9;ERP_IMPLT_products_organization.Weight_Variable, &#xA;&#x9; CASE WHEN ERP_IMPLT_products_organization.Code_Sales_Org IN ('1000','6000')&#xA;&#x9;THEN '1000' ELSE '4000' END AS Origin_Society,&#xA;&#x9;ERP_IMPLT_products_organization.Has_Weight_Management, &#xA;&#x9;ERP_IMPLT_products_organization.Trazability&#xA;       FROM        ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Frecuency, Min_Quantity_Order, &#xA;&#x9; Unit_Order, Min_Quantity_Del, Unit_Del, Code_Hierarchy6,&#xA;&#x9; Weight_Variable, Origin_Society, Has_Weight_Management, Trazability&#xA;FROM         prj_products_organization) as MOD INNER JOIN prj_products_organization ON MOD.Code_Product = prj_products_organization.Code_Product and MOD.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;MOD.Code_Sales_Org = prj_products_organization.Code_Sales_Org CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;where Products.code = prj_products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;ERP_IMPLT_products_organization.Code_Sales_Org = prj_products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_products_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;where Products.code = prj_products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;ERP_IMPLT_products_organization.Code_Sales_Org = prj_products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, &#xA;                      Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, ERP_IMPLT_products_organization.Code_Status, ERP_IMPLT_products_organization.Lock, &#xA;&#x9;ERP_IMPLT_products_organization.Factor_Conversion, ERP_IMPLT_products_organization.Unit_Box, ERP_IMPLT_products_organization.Unit_Pallet, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Type_Sales, ERP_IMPLT_products_organization.Unit_Type_Inv, ERP_IMPLT_products_organization.Code_ClassificationD, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationE, ERP_IMPLT_products_organization.Code_ClassificationA, ERP_IMPLT_products_organization.Code_ClassificationB, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationC, ERP_IMPLT_products_organization.Code_Hierarchy1, ERP_IMPLT_products_organization.Code_Hierarchy2, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy3, ERP_IMPLT_products_organization.Code_Hierarchy4, ERP_IMPLT_products_organization.Code_Hierarchy5&#xA;FROM        ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Product, Code_Unit_Org, Code_Sales_Org from products_organization where Code_Product = Products.Code and &#xA;Code_Unit_Org = ERP_IMPLT_products_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_products_organization.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Lock = MOD.Lock, Factor_Conversion = MOD.Factor_Conversion, Unit_Box = MOD.Unit_Box, Unit_Pallet = MOD.Unit_Pallet, &#xA;&#x9;&#x9;Unit_Type_Sales = MOD.Unit_Type_Sales, Unit_Type_Inv = MOD.Unit_Type_Inv, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_ClassificationE = MOD.Code_ClassificationE, Code_ClassificationA = MOD.Code_ClassificationA, Code_ClassificationB = MOD.Code_ClassificationB, &#xA;&#x9;&#x9;Code_ClassificationC = MOD.Code_ClassificationC, Code_Hierarchy1 = MOD.Code_Hierarchy1, Code_Hierarchy2 = MOD.Code_Hierarchy2, &#xA;&#x9;&#x9;Code_Hierarchy3 = MOD.Code_Hierarchy3, Code_Hierarchy4 = MOD.Code_Hierarchy4, Code_Hierarchy5 = MOD.Code_Hierarchy5&#xA;FROM&#xA;(SELECT  Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, ERP_IMPLT_products_organization.Code_Status, ERP_IMPLT_products_organization.Lock, &#xA;&#x9;ERP_IMPLT_products_organization.Factor_Conversion, ERP_IMPLT_products_organization.Unit_Box, ERP_IMPLT_products_organization.Unit_Pallet, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Type_Sales, ERP_IMPLT_products_organization.Unit_Type_Inv, ERP_IMPLT_products_organization.Code_ClassificationD, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationE, ERP_IMPLT_products_organization.Code_ClassificationA, ERP_IMPLT_products_organization.Code_ClassificationB, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationC, ERP_IMPLT_products_organization.Code_Hierarchy1, ERP_IMPLT_products_organization.Code_Hierarchy2, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy3, ERP_IMPLT_products_organization.Code_Hierarchy4, ERP_IMPLT_products_organization.Code_Hierarchy5&#xA;     FROM   ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, &#xA;                      Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5&#xA;FROM         products_organization) as MOD INNER JOIN products_organization ON MOD.Code_Product = products_organization.Code_Product and MOD.Code_Unit_Org = products_organization.Code_Unit_Org and MOD.Code_Sales_Org = products_organization.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;--SE HACE AJUSTE PARA SOCIEDAD 6000 LA FOSFORERA PARA EVITAR LAS EJECUCIONES MANUALES&#xA;&#xA;-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, &#xA;                      Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, &#xA;&#x9;'6000' AS Code_Sales_Org, ERP_IMPLT_products_organization.Code_Status, ERP_IMPLT_products_organization.Lock, &#xA;&#x9;ERP_IMPLT_products_organization.Factor_Conversion, ERP_IMPLT_products_organization.Unit_Box, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Pallet, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Type_Sales, ERP_IMPLT_products_organization.Unit_Type_Inv, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationD, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationE, ERP_IMPLT_products_organization.Code_ClassificationA, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationB, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationC, ERP_IMPLT_products_organization.Code_Hierarchy1, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy2, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy3, ERP_IMPLT_products_organization.Code_Hierarchy4, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy5&#xA;FROM        ERP_IMPLT_products_organization&#xA;inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Product, Code_Unit_Org, Code_Sales_Org from products_organization where Code_Product = Products.Code and &#xA;Code_Unit_Org = ERP_IMPLT_products_organization.Code_Unit_Org and Code_Sales_Org = '6000') AND Code_Sales_Org &lt;&gt; '4000'&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Lock = MOD.Lock, Factor_Conversion = MOD.Factor_Conversion, Unit_Box = MOD.Unit_Box, Unit_Pallet = MOD.Unit_Pallet, &#xA;&#x9;&#x9;Unit_Type_Sales = MOD.Unit_Type_Sales, Unit_Type_Inv = MOD.Unit_Type_Inv, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_ClassificationE = MOD.Code_ClassificationE, Code_ClassificationA = MOD.Code_ClassificationA, Code_ClassificationB = MOD.Code_ClassificationB, &#xA;&#x9;&#x9;Code_ClassificationC = MOD.Code_ClassificationC, Code_Hierarchy1 = MOD.Code_Hierarchy1, Code_Hierarchy2 = MOD.Code_Hierarchy2, &#xA;&#x9;&#x9;Code_Hierarchy3 = MOD.Code_Hierarchy3, Code_Hierarchy4 = MOD.Code_Hierarchy4, Code_Hierarchy5 = MOD.Code_Hierarchy5&#xA;FROM&#xA;(SELECT  Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, ERP_IMPLT_products_organization.Code_Status, ERP_IMPLT_products_organization.Lock, &#xA;&#x9;ERP_IMPLT_products_organization.Factor_Conversion, ERP_IMPLT_products_organization.Unit_Box, ERP_IMPLT_products_organization.Unit_Pallet, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Type_Sales, ERP_IMPLT_products_organization.Unit_Type_Inv, ERP_IMPLT_products_organization.Code_ClassificationD, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationE, ERP_IMPLT_products_organization.Code_ClassificationA, ERP_IMPLT_products_organization.Code_ClassificationB, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationC, ERP_IMPLT_products_organization.Code_Hierarchy1, ERP_IMPLT_products_organization.Code_Hierarchy2, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy3, ERP_IMPLT_products_organization.Code_Hierarchy4, ERP_IMPLT_products_organization.Code_Hierarchy5&#xA;     FROM   ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, &#xA;                      Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5&#xA;FROM         products_organization) as MOD INNER JOIN products_organization ON MOD.Code_Product = products_organization.Code_Product and MOD.Code_Unit_Org = products_organization.Code_Unit_Org and MOD.Code_Sales_Org = '6000' &#xA;CROSS JOIN View_System_Fields_ERP &#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = '6000' and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = '6000' and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Frecuency, Min_Quantity_Order, Unit_Order, Min_Quantity_Del, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Unit_Del, Code_Hierarchy6, Weight_Variable, Origin_Society, Has_Weight_Management, &#xA;                      Trazability)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, &#xA;&#x9;'6000' AS Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Frecuency, ERP_IMPLT_products_organization.Min_Quantity_Order, ERP_IMPLT_products_organization.Unit_Order, &#xA;&#x9;ERP_IMPLT_products_organization.Min_Quantity_Del, ERP_IMPLT_products_organization.Unit_Del, ERP_IMPLT_products_organization.Code_Hierarchy6, &#xA;&#x9;ERP_IMPLT_products_organization.Weight_Variable, &#xA;&#x9;CASE WHEN ERP_IMPLT_products_organization.Code_Sales_Org IN ('1000','6000')&#xA;&#x9;THEN '1000' ELSE '4000' END AS Origin_Society,&#xA;&#x9;ERP_IMPLT_products_organization.Has_Weight_Management, &#xA;&#x9;ERP_IMPLT_products_organization.Trazability&#xA;FROM        ERP_IMPLT_products_organization inner join Products &#xA;on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Product, Code_Unit_Org, Code_Sales_Org from prj_products_organization &#xA;where Code_Product = Products.Code and &#xA;Code_Unit_Org = ERP_IMPLT_products_organization.Code_Unit_Org and Code_Sales_Org = '6000') AND Code_Sales_Org &lt;&gt; '4000'&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Frecuency = MOD.Code_Frecuency, Min_Quantity_Order = MOD.Min_Quantity_Order, Unit_Order = MOD.Unit_Order, Min_Quantity_Del = MOD.Min_Quantity_Del, &#xA;&#x9;&#x9;Unit_Del = MOD.Unit_Del, Code_Hierarchy6 = MOD.Code_Hierarchy6, Weight_Variable = MOD.Weight_Variable, &#xA;&#x9;&#x9;Origin_Society = MOD.Origin_Society, &#xA;&#x9;&#x9;Has_Weight_Management = MOD.Has_Weight_Management, Trazability = MOD.Trazability&#xA;FROM&#xA;(SELECT  Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Frecuency, ERP_IMPLT_products_organization.Min_Quantity_Order, ERP_IMPLT_products_organization.Unit_Order, &#xA;&#x9;ERP_IMPLT_products_organization.Min_Quantity_Del, ERP_IMPLT_products_organization.Unit_Del, ERP_IMPLT_products_organization.Code_Hierarchy6, &#xA;&#x9;ERP_IMPLT_products_organization.Weight_Variable, &#xA;&#x9;CASE WHEN ERP_IMPLT_products_organization.Code_Sales_Org IN ('1000','6000')&#xA;&#x9;THEN '1000' ELSE '4000' END AS Origin_Society, &#xA;&#x9;ERP_IMPLT_products_organization.Has_Weight_Management, &#xA;&#x9;ERP_IMPLT_products_organization.Trazability&#xA;       FROM        ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Frecuency, Min_Quantity_Order, &#xA;&#x9; Unit_Order, Min_Quantity_Del, Unit_Del, Code_Hierarchy6,&#xA;&#x9; Weight_Variable, Origin_Society, Has_Weight_Management, Trazability&#xA;FROM         prj_products_organization) as MOD INNER JOIN prj_products_organization ON MOD.Code_Product = prj_products_organization.Code_Product and MOD.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;MOD.Code_Sales_Org = '6000' CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;where Products.code = prj_products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;ERP_IMPLT_products_organization.Code_Sales_Org = '6000' and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_products_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;where Products.code = prj_products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;ERP_IMPLT_products_organization.Code_Sales_Org = '6000' and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_organization CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_organization CI"
      DTS:DTSID="{fad64475-02b2-45e4-b9ba-daa44651a4c8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_organization CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="39">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;UPDATE products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = products_organization.Code_Sales_Org ) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;UPDATE prj_products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;where Products.code = prj_products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;ERP_IMPLT_products_organization.Code_Sales_Org = prj_products_organization.Code_Sales_Org) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Promotions"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C7C783BE-4F22-432D-A665-8125FD087F72}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Promotions"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="--PROMOTIONS ORGANIZATION&#xA;-- Alta&#xA;INSERT INTO prj_promotions_organization &#xA;&#x9;&#x9;&#x9;( Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, Code_Promotion, Code_Unit_Org, Code_Sales_Org, Date_Ini, Date_End)&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  ERP_IMPLT_promotions_head.Code_Unit_Org, &#xA;&#x9;  ERP_IMPLT_promotions_head.Code_Sales_Org,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_head.Date_End&#x9;  &#xA;  FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT Code_Promotion, Code_Sales_Org FROM prj_promotions_organization )&#xA;&#x9;&#x9;&#x9;&#x9;--&#x9;WHERE Code = ERP_IMPLT_promotions_head.Code_Promotion)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_organization SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Date_Ini = MOD.Date_Ini,&#xA;Date_End = MOD.Date_End&#xA;FROM&#xA;(SELECT &#x9;   &#xA;  prj_promotions_head.Code,&#xA;&#x9; ERP_IMPLT_promotions_head.Code_Unit_Org, &#xA;&#x9;  ERP_IMPLT_promotions_head.Code_Sales_Org,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_head.Date_End&#x9;  &#xA;  FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  WHERE prj_promotions_head.Date_End &lt;&gt; ERP_IMPLT_promotions_head.Date_End&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code_Promotion,&#xA;Code_Unit_Org, Code_Sales_Org,&#xA;&#x9;  Date_Ini, Date_End&#xA;&#x9;  FROM    prj_promotions_organization     ) as MOD &#xA;&#x9;  INNER JOIN prj_promotions_head ON&#xA;prj_promotions_head.Code = MOD.Code&#xA;CROSS JOIN View_System_Fields_ERP &#xA;GO &#xA;-----------------------------------------------------------------------------------------------------------------------&#xA;-----------------------------------------------------------------------------------------------------------------------&#xA;--PROMOTIONS DESTINY&#xA;-- Alta&#xA;INSERT INTO prj_promotions_destiny &#xA;&#x9;&#x9;&#x9;( Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, Code, Code_Promo, Code_Variable )&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  CASE WHEN ERP_IMPLT_promotions_head.Code_Account IS NULL&#xA;&#x9;  THEN ERP_IMPLT_promotions_head.Code_Sales_Org&#xA;&#x9;  ELSE ERP_IMPLT_promotions_head.Code_Account&#xA;&#x9;  END AS Code,&#xA;&#x9;  prj_promotions_head.Code AS Code_promo,&#xA;&#x9;  prj_promotions_head.Apply_to AS Code_Variable   &#xA;  FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT prj_promotions_destiny.Code_Promo &#xA;FROM prj_promotions_destiny &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE Code_Promo = prj_promotions_head.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_destiny SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Code = MOD.Code,&#xA;Code_Promo = MOD.Code_Promo,&#xA;Code_Variable = MOD.Code_Variable&#xA;FROM&#xA;(SELECT &#x9;   &#xA; CASE WHEN ERP_IMPLT_promotions_head.Code_Account IS NULL&#xA;&#x9;  THEN ERP_IMPLT_promotions_head.Code_Sales_Org&#xA;&#x9;  ELSE ERP_IMPLT_promotions_head.Code_Account&#xA;&#x9;  END AS Code,&#xA;&#x9;  prj_promotions_head.Code AS Code_promo,&#xA;&#x9;  prj_promotions_head.Apply_to AS Code_Variable &#x9;  &#xA;  FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code,&#xA;Code_Promo, Code_Variable&#xA;&#x9;  FROM    prj_promotions_destiny     ) as MOD INNER JOIN prj_promotions_destiny ON&#xA;MOD.Code_Promo = prj_promotions_destiny.Code_Promo&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;-----------------------------------------------------------------------------------------------------------------------------&#xA;-----------------------------------------------------------------------------------------------------------------------------&#xA;--Prj_Promotions_Products&#xA;--PROMOTIONS products&#xA;-- Alta&#xA;INSERT INTO prj_promotions_products &#xA;&#x9;&#x9;&#x9;( Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, Code_Product, Code_Promotion, Quantity, Unit_Sales )&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  products.Code AS Code_Product,&#xA;&#x9;  prj_promotions_head.Code AS Code_promotion,&#xA;&#x9;  ERP_IMPLT_promotions_detail.Quantity AS Quantity,&#xA;&#x9;   prj_promotions_head.Unit_Sales AS Unit_Sales   &#xA;  FROM ERP_IMPLT_promotions_detail &#xA;  INNER JOIN ERP_IMPLT_promotions_head ON ERP_IMPLT_promotions_detail.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_detail.Code_promotion&#xA;  INNER JOIN products ON ERP_IMPLT_promotions_detail.Code_Product = products.code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT Code_Product, Code_Promotion&#xA;                    FROM prj_promotions_products &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE Code_Promotion = prj_promotions_head.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_products SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Code_Product = MOD.Code_Product,&#xA;Code_Promotion = MOD.Code_Promo,&#xA;Quantity = MOD.Quantity,&#xA;Unit_Sales = MOD.Unit_Sales&#xA;FROM&#xA;(SELECT &#x9;   &#xA;  products.Code AS Code_Product,&#xA;&#x9;  prj_promotions_head.Code AS Code_promo,&#xA;&#x9;  ERP_IMPLT_promotions_detail.Quantity AS Quantity,&#xA;&#x9;   prj_promotions_head.Unit_Sales AS Unit_Sales &#x9;  &#xA; FROM ERP_IMPLT_promotions_detail &#xA;  INNER JOIN ERP_IMPLT_promotions_head ON ERP_IMPLT_promotions_detail.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_detail.Code_promotion&#xA;  INNER JOIN products ON ERP_IMPLT_promotions_detail.Code_Product = products.code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code_Product,&#xA;Code_Promotion, Quantity, Unit_Sales&#xA;&#x9;  FROM    prj_promotions_products     ) as MOD INNER JOIN prj_promotions_head ON&#xA;MOD.Code_promo = prj_promotions_head.Code &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;-----------------------------------------------------------------------------------------------------------------------------&#xA;-----------------------------------------------------------------------------------------------------------------------------&#xA;--prj_promotions_quantity&#xA;--PROMOTIONS Quantity&#xA;-- Alta&#xA;INSERT INTO prj_promotions_quantity&#xA;&#x9;&#x9;&#x9;( Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, Code_Account, Code_Promo, Code_Unit_Org, Code_Sales_Org )&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  Accounts.Code AS code_Account,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promo,&#xA;&#x9; ERP_IMPLT_promotions_head.Code_Unit_Org, &#xA;&#x9;  ERP_IMPLT_promotions_head.Code_Sales_Org &#xA;  FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  INNER JOIN accounts ON accounts.Code_ofClient = ERP_IMPLT_Promotions_Head.Code_Account&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT prj_promotions_quantity.Code_Account, &#xA;prj_promotions_quantity.Code_Promo, &#xA;prj_promotions_quantity.Code_Unit_Org, &#xA;prj_promotions_quantity.Code_Sales_Org &#xA;FROM prj_promotions_quantity &#xA;    WHERE prj_promotions_quantity.Code_Promo = prj_promotions_head.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_quantity SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Code_Account = MOD.code_Account,&#xA;Code_Promo = MOD.Code_Promo,&#xA;Code_Unit_Org = MOD.Code_Unit_Org,&#xA;Code_Sales_Org = MOD.Code_Sales_Org&#xA;FROM&#xA;(SELECT &#x9;   &#xA; Accounts.Code AS code_Account,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promo,&#xA;&#x9; ERP_IMPLT_promotions_head.Code_Unit_Org, &#xA;&#x9;  ERP_IMPLT_promotions_head.Code_Sales_Org &#x9;  &#xA; FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  INNER JOIN accounts ON accounts.Code_ofClient = ERP_IMPLT_Promotions_Head.Code_Account&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code_Account,&#xA;Code_Promo, Code_Unit_Org, Code_Sales_Org&#xA;&#x9;  FROM    prj_promotions_quantity     ) as MOD INNER JOIN prj_promotions_head ON&#xA;MOD.Code_Promo = prj_promotions_head.Code &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;---------------------------------------------------------------------------------------------------------------------------&#xA;---------------------------------------------------------------------------------------------------------------------------&#xA;--prj_promotions_sellers&#xA;--PROMOTIONS SELLERS&#xA;--Alta&#xA;INSERT INTO prj_promotions_sellers&#xA;&#x9;&#x9;&#x9;(Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, &#xA;&#x9;&#x9;&#x9;Code_Promotion, Code_Seller, Quantity, Date_Ini, Date_End, Guid_Prom,&#xA;&#x9;&#x9;&#x9;Modificable, Activable, Quantity_Ini, Quantity_Fin )&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  route_sellers.Code_Seller AS Code_Seller,&#xA;&#x9;  ERP_IMPLT_promotions_Detail.Quantity,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_head.Date_End,&#xA;&#x9;  convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;&#x9;  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_promotions_head.Code_Promotion) + 100000 as varchar(8)) AS Guid_Prom,&#xA;&#x9;  '0' AS Modificable,&#xA;      '0' AS Activable,&#xA;&#x9;  '0' AS Quantity_Ini,&#xA;&#x9;  '0' AS Quantity_Fin&#xA;FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  INNER JOIN ERP_IMPLT_promotions_detail &#xA;     ON ERP_IMPLT_promotions_head.Code_promotion = ERP_IMPLT_promotions_detail.Code_promotion&#xA;  INNER JOIN route_header&#xA;     ON ERP_IMPLT_promotions_head.Code_Route = route_header.Code_ofClient&#xA;&#x9; AND ERP_IMPLT_promotions_head.Code_Sales_Org = route_header.Code_Sales_Org&#xA;  INNER JOIN route_sellers&#xA;     ON route_header.Code = route_sellers.Code_Route&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  WHERE NOT EXISTS (SELECT prj_promotions_sellers.Code_Promotion, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;prj_promotions_sellers.Code_Seller &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    FROM prj_promotions_sellers &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;where  prj_promotions_sellers.Code_Promotion = prj_promotions_head.Code&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND prj_promotions_sellers.Date_Ini = prj_promotions_head.Date_Ini&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND prj_promotions_sellers.Date_End = prj_promotions_head.Date_End)&#xA;&#xA;UNION &#xA;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  route_sellers.Code_Seller AS Code_Seller,&#xA;&#x9;  ERP_IMPLT_promotions_Detail.Quantity,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_head.Date_End,&#xA;&#x9;  convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;&#x9;  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_promotions_head.Code_Promotion) + 500000 as varchar(8)) AS Guid_Prom,&#xA;&#x9;  '0' AS Modificable,&#xA;      '0' AS Activable,&#xA;&#x9;  '0' AS Quantity_Ini,&#xA;&#x9;  '0' AS Quantity_Fin&#xA;FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  INNER JOIN ERP_IMPLT_promotions_detail &#xA;     ON ERP_IMPLT_promotions_head.Code_promotion = ERP_IMPLT_promotions_detail.Code_promotion&#xA; INNER JOIN accounts &#xA; ON accounts.Code_ofClient = ERP_IMPLT_promotions_head.Code_Account&#xA; INNER JOIN route_accounts&#xA; ON accounts.Code = route_accounts.Code_Account &#xA; AND route_accounts.Code_Sales_Org &lt;&gt; '6000'&#xA; INNER JOIN route_sellers&#xA; ON route_sellers.Code_Route = route_accounts.Code_Route&#xA;&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT prj_promotions_sellers.Code_Promotion, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;prj_promotions_sellers.Code_Seller &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    FROM prj_promotions_sellers &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;where  prj_promotions_sellers.Code_Promotion = prj_promotions_head.Code&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND prj_promotions_sellers.Date_Ini = prj_promotions_head.Date_Ini&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND prj_promotions_sellers.Date_End = prj_promotions_head.Date_End)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_sellers SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Code_Promotion = MOD.Code_Promotion,&#xA;Code_Seller = MOD.Code_Seller,&#xA;Quantity = MOD.Quantity,&#xA;Date_Ini = MOD.Date_Ini, &#xA;Date_End = MOD.Date_End,&#xA;Modificable = MOD.Modificable,&#xA;Activable = MOD.Activable,&#xA;Quantity_Ini = MOD.Quantity_Ini,&#xA;Quantity_Fin= MOD.Quantity_Fin&#xA;FROM&#xA;(SELECT   &#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  route_sellers.Code_Seller AS Code_Seller,&#xA;&#x9;  ERP_IMPLT_promotions_Detail.Quantity,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_head.Date_End,&#xA;&#x9;  '0' AS Modificable,&#xA;      '0' AS Activable,&#xA;&#x9;  '0' AS Quantity_Ini,&#xA;&#x9;  '0' AS Quantity_Fin&#xA;  FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  INNER JOIN ERP_IMPLT_promotions_detail &#xA;     ON ERP_IMPLT_promotions_head.Code_promotion = ERP_IMPLT_promotions_detail.Code_promotion&#xA;  INNER JOIN route_header&#xA;     ON ERP_IMPLT_promotions_head.Code_Route = route_header.Code_ofClient&#xA;&#x9; AND ERP_IMPLT_promotions_head.Code_Sales_Org = route_header.Code_Sales_Org&#xA;  INNER JOIN route_sellers&#xA;     ON route_header.Code = route_sellers.Code_Route&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  UNION &#xA;&#xA;SELECT  DISTINCT &#xA;&#xA;--&#x9;  NULL AS Delete_User, &#xA;--&#x9;  NULL AS Delete_Date, &#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  route_sellers.Code_Seller AS Code_Seller,&#xA;&#x9;  ERP_IMPLT_promotions_Detail.Quantity,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_head.Date_End,&#xA;&#x9;--  convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;&#x9; -- + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_promotions_head.Code_Promotion) + 100000 as varchar(8)) AS Guid_Prom,&#xA;&#x9;  '0' AS Modificable,&#xA;      '0' AS Activable,&#xA;&#x9;  '0' AS Quantity_Ini,&#xA;&#x9;  '0' AS Quantity_Fin&#xA;FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  INNER JOIN ERP_IMPLT_promotions_detail &#xA;     ON ERP_IMPLT_promotions_head.Code_promotion = ERP_IMPLT_promotions_detail.Code_promotion&#xA; INNER JOIN accounts &#xA; ON accounts.Code_ofClient = ERP_IMPLT_promotions_head.Code_Account&#xA; INNER JOIN route_accounts&#xA; ON accounts.Code = route_accounts.Code_Account &#xA; AND route_accounts.Code_Sales_Org &lt;&gt; '6000'&#xA; INNER JOIN route_sellers&#xA; ON route_sellers.Code_Route = route_accounts.Code_Route&#xA;&#xA;&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code_Promotion,Code_Seller, Quantity, Date_Ini, Date_End,&#xA;&#x9;&#x9;&#x9;Modificable, Activable, Quantity_Ini, Quantity_Fin&#xA;&#x9;  FROM    prj_promotions_sellers) as MOD INNER JOIN prj_promotions_head ON&#xA;MOD.Code_Promotion = prj_promotions_head.Code &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;---------------------------------------------------------------------------------------------------------------------------&#xA;---------------------------------------------------------------------------------------------------------------------------&#xA;--prj_promotions_type_user&#xA;--PROMOTIONS TYPE USER&#xA;--Alta&#xA;INSERT INTO [dbo].[prj_promotions_type_user]&#xA;&#x9;&#x9;&#x9;(Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, &#xA;&#x9;&#x9;&#x9;Code_Promotion, Code_Type, Date_Ini, Date_End )&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  prj_users_type.Code AS Code_Type,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_Ini AS Date_Ini,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_End AS Date_End&#xA;&#x9;    FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  CROSS JOIN prj_users_type&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  WHERE NOT EXISTS (SELECT prj_promotions_type_user.Code_Promotion, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;prj_promotions_type_user.Code_Type &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    FROM prj_promotions_type_user &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;where  prj_promotions_type_user.Code_Promotion = prj_promotions_head.Code)&#xA;GO&#xA;&#xA;--Actualización&#xA;-- Modificación&#xA;UPDATE prj_promotions_type_user SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Code_Promotion = MOD.Code_Promotion,&#xA;Code_Type = MOD.Code_Type,&#xA;Date_Ini = MOD.Date_Ini,&#xA;Date_End = MOD.Date_End&#xA;FROM&#xA;(SELECT   &#xA;&#x9; prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  prj_users_type.Code AS Code_Type,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_Ini AS Date_Ini,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_End AS Date_End&#xA; FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  CROSS JOIN prj_users_type&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code_Promotion, Code_Type, Date_Ini, Date_End&#xA;&#x9;&#x9;&#x9;FROM    prj_promotions_type_user) as MOD INNER JOIN [dbo].[prj_promotions_type_user] ON&#xA;MOD.Code_Promotion = prj_promotions_type_user.Code_Promotion AND MOD.Code_Type = prj_promotions_Type_user.Code_Type&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\provinces"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="provinces"
      DTS:DTSID="{372d9763-2044-497e-b361-552dc45a216b}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="provinces"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_provinces (Code, Code_Country, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Province as Code, Code_Country, Code_Province as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_provinces where code = ERP_IMPLT_accounts.Code_Province and Code_Country = ERP_IMPLT_accounts.Code_Country) &#xA;and not exists (SELECT Code FROM provinces where code = ERP_IMPLT_accounts.Code_Province and Code_Country = ERP_IMPLT_accounts.Code_Country) and Code_Province is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO provinces (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_Country, Description)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_Country, Description&#xA;FROM         ERP_IMPLT_provinces CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM provinces where Code = ERP_IMPLT_provinces.Code AND Code_Country = ERP_IMPLT_provinces.Code_Country)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE provinces SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_Country, Description&#xA;FROM         ERP_IMPLT_provinces&#xA;EXCEPT&#xA;SELECT     Code, Code_Country, Description&#xA;FROM         provinces) as MOD INNER JOIN provinces ON MOD.Code = provinces.Code and MOD.Code_Country = provinces.Code_Country CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE provinces SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  provinces CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_provinces where Code = provinces.Code and Code_Country = provinces.Code_Country and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE provinces SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  provinces CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_provinces where Code = provinces.Code and Code_Country = provinces.Code_Country and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\provinces CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="provinces CI"
      DTS:DTSID="{a56ed5d2-aaa0-4912-bbf2-34495c67693a}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="provinces CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="40">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE provinces SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  provinces CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_provinces where Code = provinces.Code and Code_Country = provinces.Code_Country) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_accounts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_accounts"
      DTS:DTSID="{82c8bac4-6116-436a-9d86-1015385c6204}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_accounts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO route_accounts (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Route, [Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_route_accounts.Code_Unit_Org, ERP_IMPLT_route_accounts.Code_Sales_Org, route_header.Code as Code_Route,&#xA;&#x9;[Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun&#xA;FROM        ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Route from route_accounts where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_route_accounts.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_route_accounts.Code_Sales_Org and Code_Route = route_header.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE route_accounts SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;[Order] = MOD.[Order], Visit_Day = MOD.Visit_Day, Visit_Mon = MOD.Visit_Mon, Visit_Tue = MOD.Visit_Tue, Visit_Wen = MOD.Visit_Wen,&#xA;&#x9;&#x9; Visit_Thu = MOD.Visit_Thu, Visit_Fri = MOD.Visit_Fri, Visit_Sat = MOD.Visit_Sat, Visit_Sun = MOD.Visit_Sun&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_route_accounts.Code_Unit_Org, ERP_IMPLT_route_accounts.Code_Sales_Org, route_header.Code as Code_Route,&#xA;&#x9;[Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun&#xA;     FROM   ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT     Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Route, [Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun&#xA;FROM         route_accounts) as MOD INNER JOIN route_accounts ON MOD.Code_Account = route_accounts.Code_Account and MOD.Code_Unit_Org = route_accounts.Code_Unit_Org and MOD.Code_Sales_Org = route_accounts.Code_Sales_Org and &#xA;MOD.Code_Route = route_accounts.Code_Route CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE route_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = route_accounts.Code_Sales_Org and &#xA;accounts.code = route_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE route_accounts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = route_accounts.Code_Sales_Org and &#xA;accounts.code = route_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_route_accounts (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Route, Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, &#xA;                      Visit_Sun_Order)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_route_accounts.Code_Unit_Org, ERP_IMPLT_route_accounts.Code_Sales_Org, route_header.Code as Code_Route,&#xA;&#x9;Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, Visit_Sun_Order&#xA;FROM        ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Route from prj_route_accounts where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_route_accounts.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_route_accounts.Code_Sales_Org and Code_Route = route_header.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_route_accounts SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Frecuency_V = MOD.Code_Frecuency_V, Code_Week_V = MOD.Code_Week_V, Visit_Mon_Order = MOD.Visit_Mon_Order, Visit_Tue_Order = MOD.Visit_Tue_Order, &#xA;&#x9;&#x9;Visit_Wen_Order = MOD.Visit_Wen_Order, Visit_Fri_Order = MOD.Visit_Fri_Order, Visit_Thu_Order = MOD.Visit_Thu_Order, Visit_Sat_Order = MOD.Visit_Sat_Order, &#xA;&#x9;&#x9;Visit_Sun_Order = MOD.Visit_Sun_Order&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_route_accounts.Code_Unit_Org, ERP_IMPLT_route_accounts.Code_Sales_Org, route_header.Code as Code_Route,&#xA;&#x9;Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, Visit_Sun_Order&#xA;     FROM   ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT     Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;               Code_Route, Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, Visit_Sun_Order&#xA;FROM         prj_route_accounts) as MOD INNER JOIN prj_route_accounts ON MOD.Code_Account = prj_route_accounts.Code_Account and MOD.Code_Unit_Org = prj_route_accounts.Code_Unit_Org and MOD.Code_Sales_Org = prj_route_accounts.Code_Sales_Org and &#xA;MOD.Code_Route = prj_route_accounts.Code_Route CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_route_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = prj_route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = prj_route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = prj_route_accounts.Code_Sales_Org and &#xA;accounts.code = prj_route_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_route_accounts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = prj_route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = prj_route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = prj_route_accounts.Code_Sales_Org and &#xA;accounts.code = prj_route_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;--6000&#xA;INSERT INTO route_accounts (Create_User, Create_Date, Modify_User, Modify_Date, Platform, &#xA;Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Route, [Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Visit_Sat, Visit_Sun)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_route_accounts.Code_Unit_Org, &#xA;&#x9;'6000' as Code_Sales_Org, &#xA;&#x9;route_header.Code as Code_Route,&#xA;&#x9;[Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun&#xA;FROM        ERP_IMPLT_route_accounts &#xA;inner join route_header &#xA;on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE  (ERP_IMPLT_route_accounts.Code_Sales_Org = '1000') AND not exists &#xA;(SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Route from route_accounts where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_route_accounts.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_route_accounts.Code_Sales_Org and Code_Route = route_header.Code)&#xA;GO&#xA;&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_route_accounts (Create_User, Create_Date, Modify_User, Modify_Date, &#xA;Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;Code_Route, Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, &#xA;Visit_Wen_Order, Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, &#xA;                      Visit_Sun_Order)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, &#xA;&#x9;ERP_IMPLT_route_accounts.Code_Unit_Org, &#xA;&#x9;'6000' AS Code_Sales_Org, &#xA;&#x9;route_header.Code as Code_Route,&#xA;&#x9;Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, &#xA;&#x9;Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, Visit_Sun_Order&#xA;FROM        ERP_IMPLT_route_accounts inner join route_header &#xA;on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE  (ERP_IMPLT_route_accounts.Code_Sales_Org = '1000') AND not exists &#xA;(SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Route from prj_route_accounts &#xA;where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_route_accounts.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_route_accounts.Code_Sales_Org &#xA;and Code_Route = route_header.Code)&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_accounts CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_accounts CI"
      DTS:DTSID="{996e20c8-9ca7-4018-9171-2859793a45af}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_accounts CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="47">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;UPDATE route_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = route_accounts.Code_Sales_Org and &#xA;accounts.code = route_accounts.Code_Account) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;UPDATE prj_route_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = prj_route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = prj_route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = prj_route_accounts.Code_Sales_Org and &#xA;accounts.code = prj_route_accounts.Code_Account) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_header"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_header"
      DTS:DTSID="{d3c2c267-e968-4dec-a49d-15d113f9cd59}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_header"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO route_header (Create_User, Create_Date, Modify_User, Modify_Date,  &#xA;   Platform, Code, Code_ofClient, Description, Code_Region, Seasonal, &#xA;   DayofWeek, Code_Unit_Org, Code_Sales_Org, N_List_Disp)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;+ cast(ROW_NUMBER() OVER (order by Code_ofClient) + 100000 as varchar(8)) as Code, &#xA;Code_ofClient, Description, Code_Region, Seasonal, &#xA;                      DayofWeek, Code_Unit_Org, Code_Sales_Org, N_List_Disp&#xA;FROM        ERP_IMPLT_route_header CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient from route_header &#xA;where Code_ofClient = ERP_IMPLT_route_header.Code_ofClient)&#xA;GO&#xA;&#xA;-- Modificación&#xA;-- Si la Organización en las rutas se mantiene desde Hydra hay que quitar el Code_Sales_Org y el Code_Unit_Org de estas queries&#xA;UPDATE route_header SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Description = MOD.Description, Code_Region = MOD.Code_Region, Seasonal = MOD.Seasonal, DayofWeek = MOD.DayofWeek, Code_Unit_Org = MOD.Code_Unit_Org, &#xA;&#x9;&#x9;Code_Sales_Org = MOD.Code_Sales_Org, N_List_Disp = MOD.N_List_Disp&#xA;FROM&#xA;(SELECT  Code_ofClient, Description, Code_Region, Seasonal, DayofWeek, Code_Unit_Org, Code_Sales_Org, N_List_Disp&#xA;FROM       ERP_IMPLT_route_header &#xA;EXCEPT&#xA;SELECT    Code_ofClient, Description, Code_Region, Seasonal, DayofWeek, Code_Unit_Org, Code_Sales_Org, N_List_Disp&#xA;FROM         route_header) as MOD INNER JOIN route_header ON MOD.Code_ofClient = route_header.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO&#xA;&#xA;-- Baja&#xA;UPDATE route_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_route_header where Code_ofClient = route_header.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE route_header SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  route_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_route_header where Code_ofClient = route_header.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Alta 6000&#xA;INSERT INTO route_header (Create_User, Create_Date, Modify_User, Modify_Date,  &#xA;   Platform, Code, Code_ofClient, Description, Code_Region, Seasonal, &#xA;   DayofWeek, Code_Unit_Org, Code_Sales_Org, N_List_Disp)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;+ cast(ROW_NUMBER() OVER (order by Code_ofClient) + 100000 as varchar(8)) as Code, &#xA;Code_ofClient, Description, Code_Region, Seasonal, &#xA;                      DayofWeek, Code_Unit_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  '6000' as Code_Sales_Org, N_List_Disp&#xA;FROM        ERP_IMPLT_route_header CROSS JOIN View_System_Fields_ERP&#xA;WHERE Code_Sales_Org = '1000' AND not exists (SELECT Code_ofClient from route_header &#xA;where Code_ofClient = ERP_IMPLT_route_header.Code_ofClient)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_header CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_header CI"
      DTS:DTSID="{b83ac685-de10-4f57-a023-c01ce3d5701c}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_header CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE route_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_route_header where Code_ofClient = route_header.Code_ofClient) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_sellers"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_sellers"
      DTS:DTSID="{eb7ed34a-8471-46ac-95a8-839fd75aefe2}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_sellers"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO route_sellers (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Seller, &#xA;Code_Unit_Org, Code_Sales_Org, Code_Route)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;sellers.Code as Code_Seller, &#xA;ERP_IMPLT_route_sellers.Code_Unit_Org, &#xA;ERP_IMPLT_route_sellers.Code_Sales_Org, &#xA;route_header.Code as Code_Route&#xA;FROM        ERP_IMPLT_route_sellers &#xA;inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;AND route_header.Code_Sales_Org = ERP_IMPLT_Route_sellers.Code_Sales_Org&#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Seller, Code_Unit_Org, Code_Sales_Org, Code_Route from route_sellers where Code_Seller = sellers.Code and &#xA;Code_Unit_Org = ERP_IMPLT_route_sellers.Code_Unit_Org &#xA;and Code_Sales_Org = ERP_IMPLT_route_sellers.Code_Sales_Org &#xA;and Code_Route = route_header.Code)&#xA;GO&#xA;&#xA;-- Modificación (no existe modificación ya que solamente hay campos que forman parte de la PK)&#xA;&#xA;-- Baja&#xA;UPDATE route_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_route_sellers.Code_Route FROM ERP_IMPLT_route_sellers inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient where route_header.code = route_sellers.Code_Route and &#xA;ERP_IMPLT_route_sellers.Code_Unit_Org = route_sellers.Code_Unit_Org and ERP_IMPLT_route_sellers.Code_Sales_Org = route_sellers.Code_Sales_Org and &#xA;sellers.code = route_sellers.Code_Seller and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE route_sellers SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  route_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_route_sellers.Code_Route FROM ERP_IMPLT_route_sellers inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient where route_header.code = route_sellers.Code_Route and &#xA;ERP_IMPLT_route_sellers.Code_Unit_Org = route_sellers.Code_Unit_Org and ERP_IMPLT_route_sellers.Code_Sales_Org = route_sellers.Code_Sales_Org and &#xA;sellers.code = route_sellers.Code_Seller and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;&#xA;-- Alta 6000&#xA;INSERT INTO route_sellers (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Seller, Code_Unit_Org, Code_Sales_Org, Code_Route)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;sellers.Code as Code_Seller, ERP_IMPLT_route_sellers.Code_Unit_Org, &#xA;'6000' AS Code_Sales_Org, route_header.Code as Code_Route&#xA;FROM        ERP_IMPLT_route_sellers &#xA;inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;AND route_header.Code_Sales_Org = '6000'&#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE        (ERP_IMPLT_route_sellers.Code_Sales_Org = '1000') and not exists &#xA;(select Code_Seller, Code_Unit_Org, Code_Sales_Org, Code_Route &#xA;from route_sellers as &#xA;ao where ao.Code_Seller = ERP_IMPLT_route_sellers.Code_Seller &#xA;and ao.Code_Unit_Org = ERP_IMPLT_route_sellers.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;&#xA;--Update 6000&#xA;UPDATE route_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists &#xA;(SELECT ERP_IMPLT_route_sellers.Code_Route &#xA;FROM ERP_IMPLT_route_sellers inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient &#xA;where route_header.code = route_sellers.Code_Route and &#xA;ERP_IMPLT_route_sellers.Code_Unit_Org = route_sellers.Code_Unit_Org &#xA;and ERP_IMPLT_route_sellers.Code_Sales_Org = '6000' and &#xA;sellers.code = route_sellers.Code_Seller and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_sellers CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_sellers CI"
      DTS:DTSID="{39aa91bd-d8b3-4a8d-99f2-f16be38f6e53}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_sellers CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE route_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_route_sellers.Code_Route FROM ERP_IMPLT_route_sellers inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient where route_header.code = route_sellers.Code_Route and &#xA;ERP_IMPLT_route_sellers.Code_Unit_Org = route_sellers.Code_Unit_Org and ERP_IMPLT_route_sellers.Code_Sales_Org = route_sellers.Code_Sales_Org and &#xA;sellers.code = route_sellers.Code_Seller) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\sellers"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="sellers"
      DTS:DTSID="{079cb1a7-509e-4ac9-8dc7-decb13eb81c7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="sellers"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Creamos el Código de Telynet del Vendedor&#xA;INSERT INTO prj_assig_seller (Code_Seller)&#xA;SELECT     DISTINCT Code_ofClient&#xA;FROM         ERP_IMPLT_sellers&#xA;where Code_ofClient not in (SELECT Code_Seller FROM prj_assig_seller)&#xA;GO&#xA;&#xA;-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO sellers (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, Code_ofClient, Code_Type, Description, First_Name, &#xA;                      Last_Name)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code_ofClient as Code,&#xA;--prj_assig_seller.Id as Code, &#xA;Code_ofClient, Code_Type, &#xA;Description, First_Name, Last_Name&#xA;FROM         ERP_IMPLT_sellers inner join  prj_assig_seller &#xA;on ERP_IMPLT_sellers.Code_ofClient = prj_assig_seller.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;WHERE prj_assig_seller.Code_Seller not in (SELECT Code from sellers)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE sellers SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Type = MOD.Code_Type, Description = MOD.Description, First_Name = MOD.First_Name, Last_Name = MOD.Last_Name &#xA;FROM&#xA;(SELECT  &#xA;Code_ofClient as Code,&#xA;--prj_assig_seller.id as Code, &#xA;Code_ofClient, Code_Type, Description, First_Name, Last_Name&#xA;FROM         ERP_IMPLT_sellers inner join prj_assig_seller on prj_assig_seller.Code_Seller = ERP_IMPLT_sellers.Code_ofClient&#xA;EXCEPT&#xA;SELECT     Code, Code_ofClient, Code_Type, Description, First_Name, Last_Name&#xA;FROM         sellers) as MOD INNER JOIN sellers ON MOD.Code = sellers.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_sellers where Code_ofClient = sellers.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE sellers SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_sellers where Code_ofClient = sellers.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Creamos el vendedor Virtual 9999&#xA;INSERT INTO sellers (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_ofClient, Code_Type, Description, First_Name, Last_Name)&#xA;SELECT Create_User, Create_Date, Modify_User, Modify_Date, Platform, 9999 as Code, '9999' as Code_ofClient, '02' as Code_Type, 'Vendedor Virtual' as Description, 'Virtual' as First_Name, 'Virtual' as Last_Name&#xA;FROM View_System_Fields_ERP&#xA;WHERE 9999 not in (select Code from sellers)&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_sellers (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, Employee_SSO, Address, Population, ZIP, &#xA;                      Code_Country, Located, Latitude, Length, Phone, Phone2, Code_Seller_Del, IVA_Amount, Retention_Amount, Print_Order)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code_ofClient as Code,&#xA;--prj_assig_seller.Id as Code, &#xA;Employee_SSO, Address, Population, ZIP, &#xA;                      Code_Country, Located, Latitude, Length, Phone, Phone2, prj_assig_seller_1.Id as Code_Seller_Del, IVA_Amount, Retention_Amount, Print_Order&#xA;FROM         ERP_IMPLT_sellers inner join  prj_assig_seller on ERP_IMPLT_sellers.Code_ofClient = prj_assig_seller.Code_Seller &#xA;left join prj_assig_seller as prj_assig_seller_1 on ERP_IMPLT_sellers.Code_Seller_Del = prj_assig_seller.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;WHERE prj_assig_seller.Code_Seller not in (SELECT Code from prj_sellers)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_sellers SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;Employee_SSO = MOD.Employee_SSO, Address = MOD.Address, Population = MOD.Population, ZIP = MOD.ZIP, &#xA;&#x9;Code_Country = MOD.Code_Country, Located = MOD.Located, Latitude = MOD.Latitude, Length = MOD.Length, Phone = MOD.Phone, Phone2 = MOD.Phone2, Code_Seller_Del = MOD.Code_Seller_Del, &#xA;&#x9;IVA_Amount = MOD.IVA_Amount, Retention_Amount = MOD.Retention_Amount, Print_Order = MOD.Print_Order &#xA;FROM&#xA;(SELECT  &#xA;Code_ofClient as Code,&#xA;--prj_assig_seller.id as Code, &#xA;Employee_SSO, Address, Population, ZIP, &#xA;                      Code_Country, Located, Latitude, Length, Phone, Phone2, prj_assig_seller_1.Id as Code_Seller_Del, IVA_Amount, Retention_Amount, Print_Order&#xA;FROM         ERP_IMPLT_sellers inner join prj_assig_seller on prj_assig_seller.Code_Seller = ERP_IMPLT_sellers.Code_ofClient&#xA;left join prj_assig_seller as prj_assig_seller_1 on ERP_IMPLT_sellers.Code_Seller_Del = prj_assig_seller.Code_Seller&#xA;EXCEPT&#xA;SELECT     Code, Employee_SSO, Address, Population, ZIP, &#xA;                      Code_Country, Located, Latitude, Length, Phone, Phone2, Code_Seller_Del, IVA_Amount, Retention_Amount, Print_Order&#xA;FROM         prj_sellers) as MOD INNER JOIN prj_sellers ON MOD.Code = prj_sellers.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_assig_seller.Code_Seller &#xA;FROM ERP_IMPLT_sellers inner join prj_assig_seller &#xA;on prj_assig_seller.Code_Seller = ERP_IMPLT_sellers.Code_ofClient &#xA;where prj_assig_seller.Code_Seller = prj_sellers.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_sellers SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_assig_seller.Code_Seller &#xA;FROM ERP_IMPLT_sellers inner join prj_assig_seller &#xA;on prj_assig_seller.Code_Seller = ERP_IMPLT_sellers.Code_ofClient &#xA;where prj_assig_seller.Code_Seller = prj_sellers.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Creamos el vendedor Virtual 9999&#xA;INSERT INTO prj_sellers (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Employee_SSO, Address, Population, ZIP, &#xA;                         Code_Country, Located, Latitude, Length, Phone, Phone2, Code_Seller_Del, IVA_Amount, Retention_Amount, Print_Order)&#xA;SELECT Create_User, Create_Date, Modify_User, Modify_Date, Platform, 9999 as Code, NULL as Employee_SSO, NULL as Address, NULL as Population, NULL as ZIP, NULL as Code_Country, NULL as Located, NULL as Latitude, &#xA;        NULL as Length, NULL as Phone, NULL as Phone2, NULL as Code_Seller_Del, NULL as IVA_Amount, NULL as Retention_Amount, &#xA;&#x9;&#x9;NULL as Print_Order&#xA;FROM View_System_Fields_ERP &#xA;WHERE 9999 not in (select Code from prj_sellers)&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\sellers CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="sellers CI"
      DTS:DTSID="{89dbc3a1-6567-43e9-9bd1-3961f5c2fee7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="sellers CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="24">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;-- Controlamos por si hemos creado manualmente el usuario genérico 9999&#xA;UPDATE sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_sellers where Code_ofClient = sellers.Code_ofClient) and Code &lt;&gt; '9999'&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;-- Controlamos por si hemos creado manualmente el usuario genérico 9999&#xA;UPDATE prj_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT prj_assig_seller.id FROM ERP_IMPLT_sellers inner join prj_assig_seller on prj_assig_seller.code_seller = ERP_IMPLT_sellers.Code_ofClient where prj_assig_seller.id = prj_sellers.Code) and Code &lt;&gt; '9999'&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Split_Imp_Final"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3A9A9F29-5470-4A79-BFFC-97DFA80324F5}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Split_Imp_Final"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- ESTAS QUERIES SI FALTAN DATOS DEL SPLIT DE LA SALES ORG 1000 A LA 6000 LOS METE DIRECTAMENTE EN LAS TABLAS MAESTRAS&#xA;-- ESTO HAY QUE EJECUTARLO CUANDO SE TERMINEN DE PASAR LOS DATOS A LAS TABLAS MAESTRAS&#xA;&#xA;-- accounts_og&#xA;INSERT INTO accounts_org (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Potential, Potential, Code_Status, Code_Hierarchy1, &#xA;                         Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, Transfered, Code_ClassificationA, Code_ClassificationB, Code_Frecuency_V, &#xA;                         Code_Week_V, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, Visit_Sat_Order, Visit_Sun_Order, &#xA;                         Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, Dely_Mon_Order, Dely_Tue_Order, Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, &#xA;                         Dely_Sun_Order, Client_Group)&#xA;SELECT   Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Potential, Potential, Code_Status, Code_Hierarchy1, &#xA;                         Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, Transfered, Code_ClassificationA, Code_ClassificationB, Code_Frecuency_V, &#xA;                         Code_Week_V, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, Visit_Sat_Order, Visit_Sun_Order, &#xA;                         Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, Dely_Mon_Order, Dely_Tue_Order, Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, &#xA;                         Dely_Sun_Order, Client_Group&#xA;FROM            accounts_org&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select code_account, Code_Unit_Org, Code_Sales_Org from accounts_org as ao where ao.code_account = accounts_org.code_account and ao.Code_Unit_Org = accounts_org.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;GO&#xA;&#xA;INSERT INTO accounts_organization (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Potential, Potential, Code_Status, Code_Hierarchy1, &#xA;                         Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, Transfered, Code_ClassificationA, Code_ClassificationB)&#xA;SELECT     Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Seller, Code_Potential, Potential, Code_Status, Code_Hierarchy1, &#xA;                         Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, Transfered, Code_ClassificationA, Code_ClassificationB&#xA;FROM            accounts_organization&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select code_account, Code_Unit_Org, Code_Sales_Org from accounts_organization as ao where ao.code_account = accounts_organization.code_account and ao.Code_Unit_Org = accounts_organization.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;GO&#xA;&#xA;INSERT INTO prj_accounts_organization (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Payment, Code_Price_list, Code_Plant, Code_St_Bill, &#xA;                         Code_St_Trans, Code_St_Del, Code_Currency, Sales_Office, Incoterms, Transfered, Code_Provider, Code_Segment, Logistic, Code_Account_Provider, Number_Bank, Price_Schema, IBAN, Code_Com_Agent, &#xA;                         Code_ClassificationE, Discount_Allowed, Document_Type, Delivery_Note, IVA_Return, Observations, Notes, Code_Hierarchy4, Code_Hierarchy5, Valued, Code_Payment_method)&#xA;SELECT   Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Payment, '02072018' as Code_Price_list, Code_Plant, Code_St_Bill, &#xA;                         Code_St_Trans, Code_St_Del, Code_Currency, Sales_Office, Incoterms, Transfered, Code_Provider, Code_Segment, Logistic, Code_Account_Provider, Number_Bank, '1' as Price_Schema, IBAN, Code_Com_Agent, &#xA;                         Code_ClassificationE, Discount_Allowed, Document_Type, Delivery_Note, IVA_Return, Observations, Notes, Code_Hierarchy4, Code_Hierarchy5, Valued, Code_Payment_method&#xA;FROM            prj_accounts_organization&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select code_account, Code_Unit_Org, Code_Sales_Org from prj_accounts_organization as ao where ao.code_account = prj_accounts_organization.code_account and ao.Code_Unit_Org = prj_accounts_organization.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;GO&#xA;&#xA;-- accounts_function&#xA;INSERT INTO accounts_function (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Function, Code_Type_Function, By_Default, ValidFrom, ValidTo, &#xA;                         Transfered)&#xA;SELECT        Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Function, Code_Type_Function, By_Default, ValidFrom, ValidTo, &#xA;                         Transfered&#xA;FROM            accounts_function&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select code_account, Code_Unit_Org, Code_Sales_Org from accounts_function as ao where ao.code_account = accounts_function.code_account and ao.Code_Unit_Org = accounts_function.Code_Unit_Org and ao.Code_Sales_Org = '6000' and accounts_function.Code_Function = ao.Code_Function and accounts_function.Code_Type_Function = ao.Code_Type_Function)&#xA;GO&#xA;&#xA;-- products_organization&#xA;INSERT INTO products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, &#xA;                         Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, &#xA;                         Code_Hierarchy5)&#xA;SELECT       Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Product, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, &#xA;                         Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, &#xA;                         Code_Hierarchy5&#xA;FROM            products_organization&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select Code_Product, Code_Unit_Org, Code_Sales_Org from products_organization as ao where ao.Code_Product = products_organization.Code_Product and ao.Code_Unit_Org = products_organization.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;GO&#xA;&#xA;insert into prj_products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Frecuency, Min_Quantity_Order, Unit_Order, Min_Quantity_Del, &#xA;                         Unit_Del, Code_Hierarchy6, Weight_Variable, Origin_Society, Has_Weight_Management, Trazability)&#xA;SELECT      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Product, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Frecuency, Min_Quantity_Order, Unit_Order, Min_Quantity_Del, &#xA;                         Unit_Del, Code_Hierarchy6, Weight_Variable, Origin_Society, Has_Weight_Management, Trazability&#xA;FROM            prj_products_organization&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select Code_Product, Code_Unit_Org, Code_Sales_Org from prj_products_organization as ao where ao.Code_Product = prj_products_organization.Code_Product and ao.Code_Unit_Org = prj_products_organization.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea Actualizar estadísticas"
      DTS:CreationName="Microsoft.SqlServer.Management.DatabaseMaintenance.DbMaintenanceUpdateStatisticsTask, Microsoft.SqlServer.MaintenancePlanTasks, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Actualizar estadísticas"
      DTS:DTSID="{84529B16-222D-4C54-A5C6-5E8D01050B95}"
      DTS:ExecutableType="Microsoft.SqlServer.Management.DatabaseMaintenance.DbMaintenanceUpdateStatisticsTask, Microsoft.SqlServer.MaintenancePlanTasks, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea Actualizar estadísticas"
      DTS:TaskContact="Update Statistics Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{BA0F9076-3EB8-417A-A08F-6858EA1D747E}"
          SQLTask:DatabaseSelectionType="4"
          SQLTask:ServerVersion="9"
          SQLTask:ExtendedLogging="True"
          SQLTask:LocalConnectionForLogging=""
          SQLTask:TaskName=""
          SQLTask:IgnoreDatabasesInNotOnlineState="False"
          SQLTask:UpdateStatisticsType="2"
          SQLTask:UpdateScanType="3"
          SQLTask:UpdateSampleValue="50" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:SelectedDatabases
            SQLTask:DatabaseName="Telynet" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea Volver a generar índice"
      DTS:CreationName="Microsoft.SqlServer.Management.DatabaseMaintenance.DbMaintenanceReindexTask, Microsoft.SqlServer.MaintenancePlanTasks, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Volver a generar índice"
      DTS:DTSID="{B621D11C-BACE-40E6-9D05-AB8D8CDDB377}"
      DTS:ExecutableType="Microsoft.SqlServer.Management.DatabaseMaintenance.DbMaintenanceReindexTask, Microsoft.SqlServer.MaintenancePlanTasks, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea Volver a generar índice"
      DTS:TaskContact="Rebuild Index Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{BA0F9076-3EB8-417A-A08F-6858EA1D747E}"
          SQLTask:DatabaseSelectionType="4"
          SQLTask:ServerVersion="14"
          SQLTask:ExtendedLogging="True"
          SQLTask:LocalConnectionForLogging=""
          SQLTask:TaskName=""
          SQLTask:IgnoreDatabasesInNotOnlineState="False"
          SQLTask:UseOriginalAmount="True"
          SQLTask:Percentage="-1"
          SQLTask:Sort="False"
          SQLTask:KeepOnline="True"
          SQLTask:SkipUnsupported="False" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:SelectedDatabases
            SQLTask:DatabaseName="Telynet" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\trucks"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="trucks"
      DTS:DTSID="{5bcdb565-d529-4a85-8812-3f894d938c9e}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="trucks"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO trucks (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Registration, Code_Warehouse, Capacity, &#xA;                      Code_Type, Code_Seller)&#xA;SELECT distinct &#xA;View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date, &#xA; View_System_Fields_ERP.Platform,   &#xA;ERP_IMPLT_trucks.Code, &#xA;ERP_IMPLT_trucks.Description, Registration, warehouses.Code as Code_Warehouse, &#xA;ERP_IMPLT_trucks.Capacity, ERP_IMPLT_trucks.Code_Type, sellers.Code AS Code_Seller&#xA;FROM        ERP_IMPLT_trucks left join warehouses on ERP_IMPLT_trucks.Code_Warehouse = warehouses.Code_ofClient &#xA;left join sellers on ERP_IMPLT_trucks.Code_Seller = sellers.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from trucks where Code = ERP_IMPLT_trucks.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE trucks SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;  Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;  Description = MOD.Description, Registration = MOD.Registration, &#xA;  Code_Warehouse = MOD.Code_Warehouse, &#xA;  Capacity = MOD.Capacity, Code_Type = MOD.Code_Type, Code_Seller = MOD.Code_Seller&#xA;FROM&#xA;(SELECT  ERP_IMPLT_trucks.Code, ERP_IMPLT_trucks.Description, &#xA;Registration, warehouses.Code as Code_Warehouse, &#xA;ERP_IMPLT_trucks.Capacity, ERP_IMPLT_trucks.Code_Type, sellers.code as Code_Seller&#xA;FROM       ERP_IMPLT_trucks left join warehouses on ERP_IMPLT_trucks.Code_Warehouse = warehouses.Code_ofClient &#xA;left join sellers on ERP_IMPLT_trucks.Code_Seller = sellers.Code_ofClient&#xA;WHERE ERP_IMPLT_trucks.Code_Warehouse IS NOT NULL&#xA;EXCEPT&#xA;SELECT  Code, Description, Registration, &#xA;Code_Warehouse, &#xA;Capacity, Code_Type, &#xA;Code_Seller&#xA;FROM         trucks) as MOD INNER JOIN trucks ON MOD.Code = trucks.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE trucks SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  trucks CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_trucks where Code = trucks.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE trucks SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  trucks CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_trucks where Code = trucks.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\trucks CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="trucks CI"
      DTS:DTSID="{530e3b83-c0a1-494b-b91b-2abf75a4cc02}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="trucks CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="42">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE trucks SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  trucks CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_trucks where Code = trucks.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\type_unit"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="type_unit"
      DTS:DTSID="{1b971343-c9e0-4bdd-a502-d60f82e9b8c1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="type_unit"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_type_unit (Code, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT Code, Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP FROM&#xA;(SELECT     Code_Unit as Code, Code_Unit as Description&#xA;FROM         ERP_IMPLT_unit_control&#xA;UNION&#xA;SELECT     Unit_Measure AS Code, Unit_Measure AS Description&#xA;FROM         ERP_IMPLT_products_measure&#xA;UNION&#xA;SELECT     Unit_Type_Measure AS Code, Unit_Type_Measure AS Description&#xA;FROM         ERP_IMPLT_products_measure AS ERP_IMPLT_products_measure_2&#xA;UNION&#xA;SELECT     Unit_Measure_Weight AS Code, Unit_Measure_Weight AS Description&#xA;FROM         ERP_IMPLT_products_measure AS ERP_IMPLT_products_measure_1&#xA;UNION&#xA;SELECT     Unit_Type_Sales AS Code, Unit_Type_Sales AS Description&#xA;FROM         ERP_IMPLT_products_organization&#xA;UNION&#xA;SELECT     Unit_Type_Inv AS Code, Unit_Type_Inv AS Description&#xA;FROM         ERP_IMPLT_products_organization AS ERP_IMPLT_products_organization_1&#xA;UNION&#xA;SELECT     Unit_Type_Sales AS Code, Unit_Type_Sales AS Description&#xA;FROM         ERP_IMPLT_products&#xA;UNION&#xA;SELECT     Unit_Type_Inv AS Code, Unit_Type_Inv AS Description&#xA;FROM         ERP_IMPLT_products AS ERP_IMPLT_products_1) as TU&#xA;WHERE Code not in (SELECT Code from type_unit where Code = TU.Code) and Code not in (SELECT Code from ERP_IMPLT_type_unit where Code = TU.Code) and Code is not NULL&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO type_unit (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_type_unit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM type_unit where Code = ERP_IMPLT_type_unit.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE type_unit SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Description&#xA;FROM         ERP_IMPLT_type_unit&#xA;EXCEPT&#xA;SELECT     Code, Description&#xA;FROM         type_unit) as MOD INNER JOIN type_unit ON MOD.Code = type_unit.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE type_unit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  type_unit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_type_unit where Code = type_unit.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE type_unit SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  type_unit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_type_unit where Code = type_unit.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\type_unit CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="type_unit CI"
      DTS:DTSID="{08c47b17-27a0-45d8-8f2f-d8fcf8e926ab}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="type_unit CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="43">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE type_unit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  type_unit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_type_unit where Code = type_unit.Code)  &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\type_unit_control"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="type_unit_control"
      DTS:DTSID="{5f764f4c-3ebf-4b6d-ab05-89cf0ebaf049}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="type_unit_control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO type_unit_control (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_product, Control1, Control2, Control3, Control4, &#xA;                      Control5, Control6, Control7, Control8, Control9, Control10, Control11)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Code_Unit as Code, products.Code as Code_Product, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11&#xA;FROM        ERP_IMPLT_unit_control inner join products on ERP_IMPLT_unit_control.Code_product = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code, Code_Product from type_unit_control where Code_product = products.Code and Code = ERP_IMPLT_unit_control.Code_Unit)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE type_unit_control SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Control1 = MOD.Control1, Control2 = MOD.Control2, Control3 = MOD.Control3, Control4 = MOD.Control4, Control5 = MOD.Control5, Control6 = MOD.Control6, &#xA;&#x9;&#x9;Control7 = MOD.Control7, Control8 = MOD.Control8, Control9 = MOD.Control9, Control10 = MOD.Control10, Control11 = MOD.Control11&#xA;FROM&#xA;(SELECT Code_Unit as Code, products.Code as Code_Product, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11&#xA;FROM   ERP_IMPLT_unit_control inner join products on ERP_IMPLT_unit_control.Code_product = products.Code_ofClient &#xA;     EXCEPT&#xA;     SELECT  Code, Code_Product, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11&#xA;FROM         type_unit_control) as MOD INNER JOIN type_unit_control ON MOD.Code_product = type_unit_control.Code_Product and MOD.Code = type_unit_control.Code&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE type_unit_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  type_unit_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_unit_control.Code_Unit, ERP_IMPLT_unit_control.Code_product FROM ERP_IMPLT_unit_control inner join products on ERP_IMPLT_unit_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = type_unit_control.Code_Product and ERP_IMPLT_unit_control.Code_Unit = type_unit_control.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE type_unit_control SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  type_unit_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_unit_control.Code_Unit, ERP_IMPLT_unit_control.Code_product FROM ERP_IMPLT_unit_control inner join products on ERP_IMPLT_unit_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = type_unit_control.Code_Product and ERP_IMPLT_unit_control.Code_Unit = type_unit_control.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\type_unit_control CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="type_unit_control CI"
      DTS:DTSID="{112017c9-f069-415c-8457-05d0c27d1f74}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="type_unit_control CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="44">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE type_unit_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  type_unit_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_unit_control.Code_Unit, ERP_IMPLT_unit_control.Code_product FROM ERP_IMPLT_unit_control inner join products on ERP_IMPLT_unit_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = type_unit_control.Code_Product and ERP_IMPLT_unit_control.Code_Unit = type_unit_control.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\unit_sales_organ_seller"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="unit_sales_organ_seller"
      DTS:DTSID="{4f870f8c-d497-4a48-98a3-09fdce65af2f}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="unit_sales_organ_seller"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO unit_sales_organ_seller (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Manager)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code_Unit_Org, Code_Sales_Org, sellers.Code as Code_Seller, sellers_1.Code as Code_Manager&#xA;FROM      ERP_IMPLT_unit_sales_organ_seller inner join  sellers on ERP_IMPLT_unit_sales_organ_seller.Code_Seller = sellers.Code_ofClient &#xA;left join sellers as sellers_1 on ERP_IMPLT_unit_sales_organ_seller.Code_Manager = sellers_1.Code_ofClient  CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Unit_Org, Code_Sales_Org, Code_Seller FROM unit_sales_organ_seller WHERE Code_Unit_Org = ERP_IMPLT_unit_sales_organ_seller.Code_Unit_Org &#xA;and Code_Sales_Org = ERP_IMPLT_unit_sales_organ_seller.Code_Sales_Org and Code_Seller = Sellers.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE unit_sales_organ_seller SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Manager = MOD.Code_Manager &#xA;FROM&#xA;(SELECT  Code_Unit_Org, Code_Sales_Org, sellers.code as Code_Seller, sellers_1.code as Code_Manager&#xA;FROM        ERP_IMPLT_unit_sales_organ_seller inner join  sellers on ERP_IMPLT_unit_sales_organ_seller.Code_Seller = sellers.Code_ofClient &#xA;left join sellers as sellers_1 on ERP_IMPLT_unit_sales_organ_seller.Code_Manager = sellers_1.Code_ofClient &#xA;EXCEPT&#xA;SELECT     Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Manager&#xA;FROM         unit_sales_organ_seller) as MOD INNER JOIN unit_sales_organ_seller ON MOD.Code_Seller = unit_sales_organ_seller.Code_Seller and &#xA;MOD.Code_Unit_Org = unit_sales_organ_seller.Code_Unit_Org and MOD.Code_Sales_Org = unit_sales_organ_seller.Code_Sales_Org CROSS JOIN View_System_Fields_ERP&#xA;GO&#xA;&#xA;-- Baja&#xA;UPDATE unit_sales_organ_seller SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  unit_sales_organ_seller CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT sellers.Code FROM ERP_IMPLT_unit_sales_organ_seller inner join sellers on ERP_IMPLT_unit_sales_organ_seller.Code_Seller = sellers.Code_ofClient &#xA;where sellers.Code = unit_sales_organ_seller.Code_Seller and ERP_IMPLT_unit_sales_organ_seller.Code_Unit_Org = unit_sales_organ_seller.Code_Unit_Org &#xA;and ERP_IMPLT_unit_sales_organ_seller.Code_Sales_Org = unit_sales_organ_seller.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE unit_sales_organ_seller SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  unit_sales_organ_seller CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  delete_date is null and exists (SELECT sellers.Code FROM ERP_IMPLT_unit_sales_organ_seller inner join sellers on ERP_IMPLT_unit_sales_organ_seller.Code_Seller = sellers.Code_ofClient &#xA;where sellers.Code = unit_sales_organ_seller.Code_Seller and ERP_IMPLT_unit_sales_organ_seller.Code_Unit_Org = unit_sales_organ_seller.Code_Unit_Org &#xA;and ERP_IMPLT_unit_sales_organ_seller.Code_Sales_Org = unit_sales_organ_seller.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Creamos el vendedor Virtual 9999 para todas las organizaciones&#xA;INSERT INTO unit_sales_organ_seller (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Manager)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code_Unit_Org, Code_Sales_Org, 9999 as Code_Seller, NULL as Code_Manager&#xA;FROM      unit_sales_organization CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Unit_Org, Code_Sales_Org, Code_Seller FROM unit_sales_organ_seller WHERE Code_Unit_Org = unit_sales_organization.Code_Unit_Org &#xA;and Code_Sales_Org = unit_sales_organization.Code_Sales_Org and Code_Seller = 9999)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\unit_sales_organ_seller CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="unit_sales_organ_seller CI"
      DTS:DTSID="{0b373d03-64ca-4266-b7c6-782553e4bd40}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="unit_sales_organ_seller CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="41">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;-- Controlamos por si hemos creado manualmente el usuario genérico 9999&#xA;UPDATE unit_sales_organ_seller SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  unit_sales_organ_seller CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT sellers.Code, ERP_IMPLT_unit_sales_organ_seller.Code_Unit_Org, ERP_IMPLT_unit_sales_organ_seller.Code_Sales_Org &#xA;FROM ERP_IMPLT_unit_sales_organ_seller inner join sellers on ERP_IMPLT_unit_sales_organ_seller.Code_Seller = sellers.Code_ofClient where &#xA;Sellers.Code = unit_sales_organ_seller.Code_Seller and ERP_IMPLT_unit_sales_organ_seller.Code_Unit_Org = unit_sales_organ_seller.Code_Unit_Org &#xA;and ERP_IMPLT_unit_sales_organ_seller.Code_Sales_Org = unit_sales_organ_seller.Code_Sales_Org) and Code_Seller &lt;&gt; '9999'&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update accounts_organization"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3011646B-7091-444E-98D4-7E080AF32021}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update accounts_organization"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="UPDATE prj_accounts_organization SET price_schema = '1' WHERE price_schema IS NULL OR price_schema = '0'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update_Products_Measure"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{79584175-CE33-4B38-B466-4485966243F8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update_Products_Measure"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="INSERT INTO products_measure (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Product, Unit_Measure, Factor_Conversion)&#xA;SELECT        Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code as Code_Product, 'UN' as Unit_Measure, 1.000 as Factor_Conversion&#xA;                               FROM            products&#xA;                               WHERE        (Code NOT IN&#xA;                                                             (SELECT        Code_Product&#xA;                                                               FROM            products_measure))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\users_counter"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="users_counter"
      DTS:DTSID="{774abba4-d422-45f7-92e3-e545a1865c70}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="users_counter"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Solamente tratamos las altas y usamos el vendedor asociado al usuario&#xA;INSERT INTO users_counter (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_User, Type, Series, N_Counter)&#xA;SELECT Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, &#xA;Platform, Code_User, Type, Series, N_Counter FROM&#xA;(SELECT     sellers.Create_User, &#xA;sellers.Create_Date, &#xA;sellers.Modify_User, &#xA;sellers.Modify_Date, &#xA;sellers.Delete_User, &#xA;sellers.Delete_Date, &#xA;sellers.Platform, &#xA;                      ERP_IMPLT_users.Code AS Code_User, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  'I' AS Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; -- '9' + CAST(sellers.Code AS varchar(10)) AS Series, --No se porque esta asi&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;-- '9' + CAST(RIGHT(sellers.Code,4) AS varchar(5))AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'9' + CAST(ROW_NUMBER() OVER (ORDER BY sellers.Code)AS varchar(5)) AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  0 AS N_Counter&#xA;FROM         ERP_IMPLT_users INNER JOIN&#xA;                      sellers ON ERP_IMPLT_users.Code = sellers.Code_ofClient&#xA;UNION&#xA;SELECT     sellers.Create_User, sellers.Create_Date, sellers.Modify_User, &#xA;sellers.Modify_Date, sellers.Delete_User, &#xA;sellers.Delete_Date, sellers.Platform, &#xA;                      ERP_IMPLT_users.Code AS Code_User, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  'O' AS Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--  '8' + CAST(sellers.Code AS varchar(10)) AS Series, --No se porque esta asi&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--'8' + CAST (RIGHT(sellers.Code,4) AS varchar(5))AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'8' + CAST(ROW_NUMBER() OVER (ORDER BY sellers.Code)AS varchar(5)) AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  0 AS N_Counter&#xA;FROM         ERP_IMPLT_users INNER JOIN&#xA;                      sellers ON ERP_IMPLT_users.Code = sellers.Code_ofClient&#xA;UNION&#xA;SELECT     sellers.Create_User, sellers.Create_Date, sellers.Modify_User, sellers.Modify_Date, &#xA;sellers.Delete_User, sellers.Delete_Date, sellers.Platform, &#xA;                      ERP_IMPLT_users.Code AS Code_User, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  'R' AS Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--  '7' + CAST(sellers.Code AS varchar(10)) AS Series, --No se porque esta asi ES UN CAMPO DE 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; --'7' + CAST (RIGHT(sellers.Code,4) AS varchar(5))AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; '7' + CAST(ROW_NUMBER() OVER (ORDER BY sellers.Code)AS varchar(5)) AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  0 AS N_Counter&#xA;FROM         ERP_IMPLT_users INNER JOIN&#xA;                      sellers ON ERP_IMPLT_users.Code = sellers.Code_ofClient) as Counter&#xA;where Code_User not in (select Code_User from users_counter)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\users_organizations"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="users_organizations"
      DTS:DTSID="{c70a51e0-94ed-4777-9e55-24b5bc166296}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="users_organizations"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO users_organizations (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_User, Code_Unit_Org, Code_Sales_Org)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code_User, Code_Unit_Org, Code_Sales_Org&#xA;FROM        ERP_IMPLT_users_organizations CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org from users_organizations where Code_User = ERP_IMPLT_users_organizations.Code_User and &#xA;Code_Unit_Org = ERP_IMPLT_users_organizations.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_users_organizations.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación (no existe modificación ya que solamente hay campos que forman parte de la PK)&#xA;&#xA;-- Baja&#xA;UPDATE users_organizations SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  users_organizations CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org from ERP_IMPLT_users_organizations where Code_User = users_organizations.Code_User and &#xA;Code_Unit_Org = users_organizations.Code_Unit_Org and Code_Sales_Org = users_organizations.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE users_organizations SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  users_organizations CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org from ERP_IMPLT_users_organizations where Code_User = users_organizations.Code_User and &#xA;Code_Unit_Org = users_organizations.Code_Unit_Org and Code_Sales_Org = users_organizations.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\users_organizations CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="users_organizations CI"
      DTS:DTSID="{e82e2f6f-46a5-4dde-863e-3ec0d35f9200}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="users_organizations CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="46">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE users_organizations SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  users_organizations CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org from ERP_IMPLT_users_organizations where Code_User = ERP_IMPLT_users_organizations.Code_User and &#xA;Code_Unit_Org = ERP_IMPLT_users_organizations.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_users_organizations.Code_Sales_Org ) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\users_organizations_sellers"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="users_organizations_sellers"
      DTS:DTSID="{2f2c4296-a936-4b5c-8f52-89ea0db6fe4b}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="users_organizations_sellers"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO users_organizations_sellers(Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_User, Code_Unit_Org, Code_Sales_Org, Code_Seller)&#xA;&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;View_System_Fields_ERP.Platform,   &#xA;Code_User, &#xA;Code_Unit_Org, &#xA;Code_Sales_Org, &#xA;sellers.Code as Code_Seller&#xA;FROM        ERP_IMPLT_users_organizations_sellers &#xA;inner join sellers &#xA;on ERP_IMPLT_users_organizations_sellers.Code_Seller = sellers.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists &#xA;(SELECT Code_User, Code_Unit_Org, Code_Sales_Org, Code_Seller &#xA;from users_organizations_sellers &#xA;where Code_User = ERP_IMPLT_users_organizations_sellers.Code_User and &#xA;Code_Unit_Org = ERP_IMPLT_users_organizations_sellers.Code_Unit_Org &#xA;and Code_Sales_Org = ERP_IMPLT_users_organizations_sellers.Code_Sales_Org &#xA;and Code_Seller = sellers.Code)&#xA;GO&#xA;&#xA;-- Modificación (no existe modificación ya que solamente hay campos que forman parte de la PK)&#xA;&#xA;-- Baja&#xA;UPDATE users_organizations_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  users_organizations_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org, sellers.Code from ERP_IMPLT_users_organizations_sellers inner join sellers on ERP_IMPLT_users_organizations_sellers.Code_Seller = sellers.Code_ofClient &#xA;where Code_User = users_organizations_sellers.Code_User and Code_Unit_Org = users_organizations_sellers.Code_Unit_Org and Code_Sales_Org = users_organizations_sellers.Code_Sales_Org and sellers.Code = users_organizations_sellers.Code_Seller and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE users_organizations_sellers SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  users_organizations_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org, sellers.Code from ERP_IMPLT_users_organizations_sellers inner join sellers on ERP_IMPLT_users_organizations_sellers.Code_Seller = sellers.Code_ofClient &#xA;where Code_User = users_organizations_sellers.Code_User and Code_Unit_Org = users_organizations_sellers.Code_Unit_Org and Code_Sales_Org = users_organizations_sellers.Code_Sales_Org and sellers.Code = users_organizations_sellers.Code_Seller and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\users_organizations_sellers CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="users_organizations_sellers CI"
      DTS:DTSID="{b71eb966-6fc6-4916-be85-983052f62a58}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="users_organizations_sellers CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="45">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE users_organizations_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  users_organizations_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org, sellers.Code from ERP_IMPLT_users_organizations_sellers inner join sellers on ERP_IMPLT_users_organizations_sellers.Code_Seller = sellers.Code_ofClient &#xA;where Code_User = users_organizations_sellers.Code_User and Code_Unit_Org = users_organizations_sellers.Code_Unit_Org and Code_Sales_Org = users_organizations_sellers.Code_Sales_Org and sellers.Code = users_organizations_sellers.Code_Seller) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\warehouses"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="warehouses"
      DTS:DTSID="{06a607cb-2bc4-4fbf-8afd-6dc8fc065fdf}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="warehouses"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Alta&#xA;WITH TMP_WAREHOUSE AS(&#xA;SELECT &#xA;distinct View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','') + cast(ROW_NUMBER() &#xA;OVER (order by Code_ofClient) + 100000 as varchar(8)) as Code, &#xA;Code_ofClient, &#xA;Pass, Pass_R, &#xA;Type_Central, &#xA; Description, &#xA; Code_Unit_Org, &#xA; Code_Sales_Org, &#xA; Code_Type, &#xA; Code_User, &#xA;Code_Warehouse_Dep,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Send_To_ERP_Mov, Capacity&#xA;FROM        ERP_IMPLT_warehouses CROSS JOIN View_System_Fields_ERP&#xA;WHERE ERP_IMPLT_warehouses.Code_ofClient is not null &#xA;AND not exists &#xA;(SELECT Code_ofClient from warehouses where Code_ofClient = ERP_IMPLT_warehouses.Code_ofClient)&#xA;)&#xA;&#xA;INSERT INTO warehouses (Create_User, Create_Date, Modify_User, Modify_Date,  &#xA;Platform, Code, Code_ofClient, Pass, Pass_R, Type_Central, &#xA;                    Description, Code_Unit_Org, Code_Sales_Org, Code_Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User, Code_Warehouse_Dep, Send_To_ERP_Mov, Capacity)&#xA;SELECT&#xA;Create_User, &#xA;Create_Date, &#xA;Modify_User, &#xA;Modify_Date,  &#xA;Platform,   &#xA; Code, &#xA;Code_ofClient, &#xA;Pass, Pass_R, &#xA;Type_Central, &#xA; Description, &#xA; Code_Unit_Org, &#xA; Code_Sales_Org, &#xA; Code_Type, &#xA; Code_User, &#xA;CASE WHEN Code_Warehouse_Dep IS NULL THEN NULL ELSE &#xA;(SELECT warehouses.code  FROM ERP_IMPLT_warehouses, warehouses &#xA;where ERP_IMPLT_warehouses.Code_ofClient = warehouses.Code_ofClient  &#xA;and warehouses.Code_ofClient = TMP_WAREHOUSE.Code_Warehouse_Dep AND ERP_IMPLT_warehouses.Code_ofClient is not null) &#xA;END AS Code_Warehouse_Dep,&#xA; Send_To_ERP_Mov, Capacity&#xA; FROM TMP_WAREHOUSE&#xA;GO&#xA;&#xA;&#xA;-- Modificación&#xA;/*&#xA;UPDATE warehouses SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;  Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, &#xA;  Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;  Pass = MOD.Pass, Pass_R = MOD.Pass_R, Type_Central = MOD.Type_Central, &#xA;  Description = MOD.Description, &#xA;  Code_Unit_Org = MOD.Code_Unit_Org, &#xA;  Code_Sales_Org = MOD.Code_Sales_Org, &#xA;  Code_Type = MOD.Code_Type, &#xA;  Code_User = MOD.Code_User, &#xA;  Send_To_ERP_Mov = MOD.Send_To_ERP_Mov, Capacity = MOD.Capacity&#xA;FROM&#xA;(SELECT  Code_ofClient, Pass, Pass_R, Type_Central, Description, Code_Unit_Org, Code_Sales_Org, Code_Type, &#xA;Code_User, &#xA;Send_To_ERP_Mov, Capacity&#xA;FROM       ERP_IMPLT_warehouses &#xA;EXCEPT&#xA;SELECT  Code_ofClient, Pass, Pass_R, Type_Central, Description, Code_Unit_Org, Code_Sales_Org, Code_Type, &#xA;Code_User, &#xA;Send_To_ERP_Mov, Capacity&#xA;FROM         warehouses) as MOD INNER JOIN warehouses ON MOD.Code_ofClient = warehouses.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP &#xA;GO &#xA;*/&#xA;-- Modificación&#xA;UPDATE warehouses SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;  Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, &#xA;  Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA; -- Pass = MOD.Pass, &#xA; -- Pass_R = MOD.Pass_R, &#xA; -- Type_Central = MOD.Type_Central, &#xA;  Description = MOD.Description, &#xA; -- Code_Unit_Org = MOD.Code_Unit_Org, &#xA;  Code_Sales_Org = MOD.Code_Sales_Org, &#xA; -- Code_Type = MOD.Code_Type, &#xA;  Code_User = MOD.Code_User, &#xA;  Code_Warehouse_Dep = MOD.Code_Warehouse_Dep,&#xA; -- Send_To_ERP_Mov = MOD.Send_To_ERP_Mov, &#xA;  Capacity = MOD.Capacity&#xA;FROM&#xA;(SELECT --Warehouses.Code,&#xA;&#x9;   Warehouse1.Code_ofClient,&#xA;&#x9;   Warehouse1. Description,&#xA;&#x9;   Warehouse1.Code_Sales_Org,&#xA;&#x9;--   Warehouse1.Central,&#xA;&#x9;--   Warehouse1.Camion,&#xA;&#x9;  Warehouses.Code AS Code_Warehouse_Dep,&#xA;&#x9;  warehouse1.Code_User,&#xA;&#x9;  warehouse1.Capacity&#xA;&#x9; -- warehouse1.Pass, &#xA;&#x9; -- warehouse1.Pass_R, &#xA;&#x9;--  warehouse1.Type_Central, &#xA;&#x9;--  warehouse1.Code_Unit_Org, &#xA;&#x9;--  warehouse1.Code_Type,&#xA;&#x9; -- warehouse1.Send_To_ERP_Mov&#xA;--&#x9; CASE WHEN Warehouse1.Camion IS NULL&#xA;&#x9;--  THEN Warehouse1.Code_ofClient&#xA;&#x9; -- ELSE Warehouses.Code_ofClient END AS Plant2&#xA;&#x9;   FROM &#xA;(SELECT Code,&#xA;&#x9;   Code_ofClient,&#xA;&#x9;   Description,&#xA;&#x9;   Code_Sales_Org,&#xA;&#x9;   (CASE WHEN Code_Warehouse_Dep IS NULL THEN Code_ofClient END) Central,&#xA;       (CASE WHEN Code_Warehouse_Dep IS NOT NULL THEN Code_Warehouse_Dep END) Camion,&#xA;&#x9;   Code_User, Capacity--, Pass, Pass_R, Type_Central, Send_To_ERP_Mov&#xA;FROM ERP_IMPLT_warehouses)  Warehouse1&#xA;LEFT JOIN warehouses&#xA;ON  Warehouse1.Camion = warehouses.Code_ofClient&#xA;EXCEPT&#xA;SELECT  Code_ofClient, Description, Code_Sales_Org, &#xA;Code_Warehouse_Dep, Code_User, &#xA;Capacity &#xA;FROM         warehouses) as MOD INNER JOIN warehouses ON MOD.Code_ofClient = warehouses.Code_ofClient &#xA;AND warehouses.Code_Warehouse_Dep IS NOT NULL&#xA;CROSS JOIN View_System_Fields_ERP &#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE warehouses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  warehouses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_warehouses where Code_ofClient = warehouses.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE warehouses SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  warehouses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_warehouses where Code_ofClient = warehouses.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\warehouses CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="warehouses CI"
      DTS:DTSID="{491b6f01-9df7-48a4-bf1b-6f2b0c723d8e}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="warehouses CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{c558dd77-0121-4472-a896-c787afc5e86b}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE warehouses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  warehouses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_warehouses where Code_ofClient = warehouses.Code_ofClient) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{1303BB74-8366-42A1-9494-2AE6BD679143}"
      DTS:From="Package\prj_orders_type_user"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\prj_users_fiscal" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{2B004DEE-1FAE-4910-BEC5-3A28BFEB7335}"
      DTS:From="Package\prj_users_fiscal"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\warehouses" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{4937ACBC-6FA9-48A6-B172-69C30B99B7D6}"
      DTS:From="Package\type_unit_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\prj_pricing_tables Mantenimiento" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{75C94D90-E3D2-47A6-B889-6D932930B482}"
      DTS:From="Package\products_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\products_hierarchy2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{E1BD2798-CAA0-45A6-BCA4-4B700688EB83}"
      DTS:From="Package\Split_Imp_Final"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\Precios Usuario" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{EDABFBC6-BDD6-4C9E-A54B-7D238049252F}"
      DTS:From="Package\prj_hist_orders_sec"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\prj_payment_accounts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{A4684015-31C0-4740-8699-E3A5164CFD96}"
      DTS:From="Package\prj_payment_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\collections_pending" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 15]"
      DTS:CreationName=""
      DTS:DTSID="{724F8862-49AF-4DA0-9F1C-3111A37464AB}"
      DTS:From="Package\accounts_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 15"
      DTS:To="Package\Update accounts_organization" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 16]"
      DTS:CreationName=""
      DTS:DTSID="{EF9AD13C-AF54-4C10-BF5F-3EA46A422DCD}"
      DTS:From="Package\Update accounts_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 16"
      DTS:To="Package\accounts_function" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 17]"
      DTS:CreationName=""
      DTS:DTSID="{450FFB8D-C76D-442F-A290-4EFE0048B8B9}"
      DTS:From="Package\prj_orders_lines_lots"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 17"
      DTS:To="Package\loads_head" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 18]"
      DTS:CreationName=""
      DTS:DTSID="{048FF6F7-97AF-497B-8EB5-DDFA5CE07FBF}"
      DTS:From="Package\Update_Products_Measure"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 18"
      DTS:To="Package\Split_Imp_Final" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 19]"
      DTS:CreationName=""
      DTS:DTSID="{84252D84-4575-4D70-AD78-4B8B7DA1244A}"
      DTS:From="Package\collecting_type"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 19"
      DTS:To="Package\prj_products_assor_det" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{B50254E3-1356-4F13-BD1F-0C3842FD428F}"
      DTS:From="Package\prj_pricing_tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\prj_promotions_head" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 20]"
      DTS:CreationName=""
      DTS:DTSID="{509546F3-8C03-412E-B342-8807F5DF47E6}"
      DTS:From="Package\Promotions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 20"
      DTS:To="Package\Update_Products_Measure" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{9DEF1D12-114C-4A1C-AE4C-E12D8705AE87}"
      DTS:From="Package\prj_promotions_head"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\prj_hist_orders_header" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{A433F957-7DF8-4700-9FED-84DDD732D064}"
      DTS:From="Package\loads_orders"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\prj_products_assor" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{4445D1B6-86F1-4E19-8D2A-482DA23E2C59}"
      DTS:From="Package\prj_products_assor"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\collecting_type" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{CAA187FB-D3F5-4701-A293-9E39396131F3}"
      DTS:From="Package\prj_products_assor_det"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\prj_products_assor_sel" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{94618C0A-9DC3-4865-9ED5-057CC98FBB29}"
      DTS:From="Package\prj_products_assor_sel"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\prj_promtions_hierarchy" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{DFD51492-0BCE-4240-BDA0-9BEEA3305793}"
      DTS:From="Package\prj_promtions_hierarchy"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\prj_promotions_hier_gift" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{8CF01E7F-5542-4BA6-AF57-CF8F9E427ED6}"
      DTS:From="Package\prj_promotions_hier_gift"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Promotions" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción]"
      DTS:CreationName=""
      DTS:DTSID="{60F62706-999F-43DB-A319-20AB75CE5BC7}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_agrupation1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción"
      DTS:To="Package\accounts_agrupation1 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 1]"
      DTS:CreationName=""
      DTS:DTSID="{185B8F06-4211-4238-8DAA-557AA9B2A4B1}"
      DTS:From="Package\accounts_agrupation1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 1"
      DTS:To="Package\accounts_agrupation2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 10]"
      DTS:CreationName=""
      DTS:DTSID="{68A23BE5-F973-46BE-8D6C-537582B0C52D}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_payment_terms"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 10"
      DTS:To="Package\prj_payment_terms CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 100]"
      DTS:CreationName=""
      DTS:DTSID="{2C30155F-61BC-47A7-A1B2-8B61AF3E4613}"
      DTS:From="Package\prj_pricing_tables Mantenimiento"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 100"
      DTS:To="Package\prj_pricing_tables" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 101]"
      DTS:CreationName=""
      DTS:DTSID="{0874B49F-8A03-49BC-9E2D-78A3C5710FF0}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_pricing_tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 101"
      DTS:To="Package\prj_pricing_tables CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 103]"
      DTS:CreationName=""
      DTS:DTSID="{47A2D23C-8548-4DF3-89C7-8CC34C2829E4}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_hist_orders_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 103"
      DTS:To="Package\prj_hist_orders_header CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 104]"
      DTS:CreationName=""
      DTS:DTSID="{9F2290B1-A063-4198-A42C-67BB1C4C6D1A}"
      DTS:From="Package\prj_hist_orders_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 104"
      DTS:To="Package\prj_hist_orders_lines" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 105]"
      DTS:CreationName=""
      DTS:DTSID="{39E173FF-8D06-4863-A250-0E962E586333}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_hist_orders_lines"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 105"
      DTS:To="Package\prj_hist_orders_lines CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 106]"
      DTS:CreationName=""
      DTS:DTSID="{DCC5871C-03E5-4F63-A114-0F91513A929D}"
      DTS:From="Package\prj_hist_orders_lines"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 106"
      DTS:To="Package\prj_hist_orders_sec" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 107]"
      DTS:CreationName=""
      DTS:DTSID="{0A11420F-7684-44FE-B811-09939073B3E2}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_hist_orders_sec"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 107"
      DTS:To="Package\prj_hist_orders_sec CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 108]"
      DTS:CreationName=""
      DTS:DTSID="{CC33F258-32CE-45B5-9AE8-3644AE5B3737}"
      DTS:EvalOp="3"
      DTS:Expression="@CargaDeuda == &quot;I&quot;"
      DTS:From="Package\collections_pending"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 108"
      DTS:To="Package\collections_pending CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 11]"
      DTS:CreationName=""
      DTS:DTSID="{213EA072-0434-43C6-8183-1896548AAB86}"
      DTS:From="Package\prj_payment_terms"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 11"
      DTS:To="Package\prj_price_list" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 110]"
      DTS:CreationName=""
      DTS:DTSID="{D4F9691C-9A32-4C3D-A27E-ECCC6BA391A5}"
      DTS:From="Package\collections_pending"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 110"
      DTS:To="Package\equipment_account" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 111]"
      DTS:CreationName=""
      DTS:DTSID="{B2CC6C6E-C69F-4720-8DC3-7FF2D7BC6300}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\equipment_account"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 111"
      DTS:To="Package\equipment_account CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 112]"
      DTS:CreationName=""
      DTS:DTSID="{B1A8DB5C-F20A-40F9-AC6E-D001C23A8541}"
      DTS:From="Package\equipment_account"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 112"
      DTS:To="Package\prj_orders_header" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 113]"
      DTS:CreationName=""
      DTS:DTSID="{2FC94FB2-E442-4314-9B08-1F79F1F0E29D}"
      DTS:EvalOp="3"
      DTS:Expression="@Reindexar == &quot;Y&quot;"
      DTS:From="Package\Modificación cliente"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 113"
      DTS:To="Package\Tarea Volver a generar índice" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 115]"
      DTS:CreationName=""
      DTS:DTSID="{00130292-B0D9-492B-A4B1-96C341DFB20E}"
      DTS:From="Package\prj_orders_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 115"
      DTS:To="Package\prj_orders_lines" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 116]"
      DTS:CreationName=""
      DTS:DTSID="{3CD7C369-4531-4C58-B1B4-BA441249FA17}"
      DTS:From="Package\prj_orders_lines"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 116"
      DTS:To="Package\prj_orders_secuences" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 118]"
      DTS:CreationName=""
      DTS:DTSID="{B127CF15-202D-4082-BCA3-31AA564F5F05}"
      DTS:From="Package\prj_orders_secuences"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 118"
      DTS:To="Package\prj_orders_lines_lots" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 12]"
      DTS:CreationName=""
      DTS:DTSID="{71E17CFA-3784-47A4-AFFD-E141BBDC473F}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_price_list"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 12"
      DTS:To="Package\prj_price_list CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 121]"
      DTS:CreationName=""
      DTS:DTSID="{0988C3BB-5ED9-4E7B-8D99-01156E116694}"
      DTS:From="Package\loads_head"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 121"
      DTS:To="Package\loads_detail" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 122]"
      DTS:CreationName=""
      DTS:DTSID="{6C74994C-CF24-49BE-8816-B6871D3244FE}"
      DTS:From="Package\loads_detail"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 122"
      DTS:To="Package\loads_orders" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 124]"
      DTS:CreationName=""
      DTS:DTSID="{6EDBB077-13C7-4E37-BFC7-70908F4A7EBD}"
      DTS:From="Package\Precios Usuario"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 124"
      DTS:To="Package\Modificación cliente" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 13]"
      DTS:CreationName=""
      DTS:DTSID="{665FFDE1-E7D2-405A-BBD8-712B6CA9A3CA}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\provinces"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 13"
      DTS:To="Package\provinces CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 14]"
      DTS:CreationName=""
      DTS:DTSID="{5B3FAE5B-D08C-436A-9B30-365C5885663A}"
      DTS:From="Package\prj_price_list"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 14"
      DTS:To="Package\provinces" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 15]"
      DTS:CreationName=""
      DTS:DTSID="{787371BC-F7E1-42A7-9B23-454A21E48D7E}"
      DTS:From="Package\provinces"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 15"
      DTS:To="Package\products_array" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 16]"
      DTS:CreationName=""
      DTS:DTSID="{B3B031F5-743F-4160-88E1-81CED6DBDA9C}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 16"
      DTS:To="Package\products_array CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 18]"
      DTS:CreationName=""
      DTS:DTSID="{94C1A256-77DA-41F2-B875-E351A166BA22}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_hierarchy2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 18"
      DTS:To="Package\products_hierarchy2 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 19]"
      DTS:CreationName=""
      DTS:DTSID="{058CE67C-5353-4F5F-B14E-F9209BE5362A}"
      DTS:From="Package\products_hierarchy2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 19"
      DTS:To="Package\products_hierarchy3" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 2]"
      DTS:CreationName=""
      DTS:DTSID="{FE76ECA4-981C-4D94-BC09-EF63A7DACCCD}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_agrupation2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 2"
      DTS:To="Package\accounts_agrupation2 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 20]"
      DTS:CreationName=""
      DTS:DTSID="{DDDF9C70-BB91-4082-B82F-AB7ED2D413B1}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_hierarchy3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 20"
      DTS:To="Package\products_hierarchy3 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 21]"
      DTS:CreationName=""
      DTS:DTSID="{8F92B8EE-8562-4A97-A8B7-A66ED07AEA89}"
      DTS:From="Package\products_hierarchy3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 21"
      DTS:To="Package\products_hierarchy4" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 22]"
      DTS:CreationName=""
      DTS:DTSID="{5E4BECC2-4B45-45E5-960A-183C5AD6601E}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_hierarchy4"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 22"
      DTS:To="Package\products_hierarchy4 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 23]"
      DTS:CreationName=""
      DTS:DTSID="{2F7E4688-7673-4A4E-BAE2-235E280941E2}"
      DTS:From="Package\products_hierarchy4"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 23"
      DTS:To="Package\type_unit" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 24]"
      DTS:CreationName=""
      DTS:DTSID="{2B331BE0-D945-4E2D-8499-1AE28857C115}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\type_unit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 24"
      DTS:To="Package\type_unit CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 25]"
      DTS:CreationName=""
      DTS:DTSID="{32C7CCEA-F27D-4467-86B5-6716998200CB}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_currency"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 25"
      DTS:To="Package\prj_currency CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 26]"
      DTS:CreationName=""
      DTS:DTSID="{75951EAD-2F6B-4ADD-BD01-A494C50D4950}"
      DTS:From="Package\type_unit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 26"
      DTS:To="Package\prj_currency" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 27]"
      DTS:CreationName=""
      DTS:DTSID="{CA745A4F-1FF6-41FF-BE4B-C40311E305AE}"
      DTS:From="Package\equipment_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 27"
      DTS:To="Package\equipment_array CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 28]"
      DTS:CreationName=""
      DTS:DTSID="{C58EAF32-034A-41C7-B905-253F90E413C4}"
      DTS:From="Package\prj_currency"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 28"
      DTS:To="Package\equipment_array" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 29]"
      DTS:CreationName=""
      DTS:DTSID="{5D1317C5-91F7-4090-884C-5CA1FEBCE7BA}"
      DTS:From="Package\equipment_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 29"
      DTS:To="Package\prj_configuration" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 3]"
      DTS:CreationName=""
      DTS:DTSID="{BB530476-0227-4831-924C-C394E3B53FD4}"
      DTS:From="Package\accounts_agrupation2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 3"
      DTS:To="Package\accounts_agrupation3" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 30]"
      DTS:CreationName=""
      DTS:DTSID="{FBD85493-9EA9-4D09-9198-352430434620}"
      DTS:From="Package\prj_configuration"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 30"
      DTS:To="Package\sellers" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 31]"
      DTS:CreationName=""
      DTS:DTSID="{82602005-7828-46E7-B56A-B77CB22AB99D}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 31"
      DTS:To="Package\sellers CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 32]"
      DTS:CreationName=""
      DTS:DTSID="{F097B30B-601B-4E33-9BAB-4CFF6C22B191}"
      DTS:From="Package\sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 32"
      DTS:To="Package\unit_sales_organ_seller" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 33]"
      DTS:CreationName=""
      DTS:DTSID="{643A594B-3577-4980-9124-260B86CC1DEE}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\unit_sales_organ_seller"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 33"
      DTS:To="Package\unit_sales_organ_seller CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 34]"
      DTS:CreationName=""
      DTS:DTSID="{39390812-87D6-4A4C-8983-78BE779CD1E6}"
      DTS:From="Package\route_sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 34"
      DTS:To="Package\route_accounts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 35]"
      DTS:CreationName=""
      DTS:DTSID="{196B27FB-8B96-46C4-A681-FCA8F79E0B5F}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\route_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 35"
      DTS:To="Package\route_header CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 36]"
      DTS:CreationName=""
      DTS:DTSID="{0035BE80-6230-4642-B8DB-C77F59DD6A65}"
      DTS:From="Package\route_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 36"
      DTS:To="Package\route_sellers" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 37]"
      DTS:CreationName=""
      DTS:DTSID="{2330DBB7-FFFE-49F7-836E-900505B5C00B}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\route_sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 37"
      DTS:To="Package\route_sellers CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 38]"
      DTS:CreationName=""
      DTS:DTSID="{509DACB9-999C-48C4-B5B3-7142BE23C0D9}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\route_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 38"
      DTS:To="Package\route_accounts CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 39]"
      DTS:CreationName=""
      DTS:DTSID="{7056E1E3-0CA1-42CE-8322-CEECB622FFEE}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\core_users"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 39"
      DTS:To="Package\core_users CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 4]"
      DTS:CreationName=""
      DTS:DTSID="{9E0CA919-48A5-478F-8A00-4A6E3E2E4FCF}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_agrupation3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 4"
      DTS:To="Package\accounts_agrupation3 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 40]"
      DTS:CreationName=""
      DTS:DTSID="{D14FCAAA-C73D-4D28-B45B-BB01C6EF357C}"
      DTS:From="Package\unit_sales_organ_seller"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 40"
      DTS:To="Package\core_users" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 41]"
      DTS:CreationName=""
      DTS:DTSID="{946099A4-CDD6-4218-8DB9-0764EE592DF2}"
      DTS:From="Package\core_users"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 41"
      DTS:To="Package\users_organizations" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 42]"
      DTS:CreationName=""
      DTS:DTSID="{A59C2A34-0A6B-4E32-A65C-B973A4CDE688}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\users_organizations"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 42"
      DTS:To="Package\users_organizations CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 43]"
      DTS:CreationName=""
      DTS:DTSID="{71FB5775-32DF-4EE1-B8B2-D9EA7BAF53F6}"
      DTS:From="Package\users_organizations"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 43"
      DTS:To="Package\users_organizations_sellers" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 44]"
      DTS:CreationName=""
      DTS:DTSID="{C978FF39-B7FA-4AC4-8269-0CA2AE75FC6D}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\users_organizations_sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 44"
      DTS:To="Package\users_organizations_sellers CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 45]"
      DTS:CreationName=""
      DTS:DTSID="{E82E1AC4-96C1-4347-856E-742E48F31F44}"
      DTS:From="Package\users_organizations_sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 45"
      DTS:To="Package\prj_users_control" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 46]"
      DTS:CreationName=""
      DTS:DTSID="{621057BD-110C-4A85-B008-F48A3132490F}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_users_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 46"
      DTS:To="Package\prj_users_control CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 47]"
      DTS:CreationName=""
      DTS:DTSID="{037B634D-5B27-4B77-9338-53C1277858F2}"
      DTS:From="Package\prj_users_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 47"
      DTS:To="Package\users_counter" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 48]"
      DTS:CreationName=""
      DTS:DTSID="{A4C0EC12-4A43-47C9-B8EC-440BA6E35BB0}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_users_type_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 48"
      DTS:To="Package\prj_users_type_control CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 49]"
      DTS:CreationName=""
      DTS:DTSID="{C855B7D2-DFCA-4C0E-9C77-293627405578}"
      DTS:From="Package\users_counter"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 49"
      DTS:To="Package\prj_users_type_control" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 5]"
      DTS:CreationName=""
      DTS:DTSID="{F475874E-B512-4D89-85D4-5B85CD4DFA17}"
      DTS:From="Package\accounts_agrupation3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 5"
      DTS:To="Package\accounts_array" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 50]"
      DTS:CreationName=""
      DTS:DTSID="{8ED6ED7A-654E-40FB-9819-466BFB3EB81D}"
      DTS:From="Package\prj_users_type_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 50"
      DTS:To="Package\prj_orders_type_user" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 51]"
      DTS:CreationName=""
      DTS:DTSID="{C35CE3C3-2574-4894-9FE3-57A3F95AEA60}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 51"
      DTS:To="Package\accounts CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 52]"
      DTS:CreationName=""
      DTS:DTSID="{3FFF2BF9-3B94-4ADE-BDFC-738F703C4F94}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\warehouses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 52"
      DTS:To="Package\warehouses CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 54]"
      DTS:CreationName=""
      DTS:DTSID="{D2EC4753-29B0-42F6-B6CE-B761EFC53B3B}"
      DTS:From="Package\warehouses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 54"
      DTS:To="Package\trucks" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 55]"
      DTS:CreationName=""
      DTS:DTSID="{2B2C3B4A-7FAC-41B0-9EE7-6ACD533A053F}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\trucks"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 55"
      DTS:To="Package\trucks CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 56]"
      DTS:CreationName=""
      DTS:DTSID="{613C6B1E-44D0-443E-80AC-45017B56AA07}"
      DTS:From="Package\accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 56"
      DTS:To="Package\accounts_org" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 57]"
      DTS:CreationName=""
      DTS:DTSID="{DB983AF3-C481-4F9A-BD79-0E770B98E635}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_org"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 57"
      DTS:To="Package\accounts_org CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 58]"
      DTS:CreationName=""
      DTS:DTSID="{EBC8A3A9-2B5E-4D56-9150-3543649914B3}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 58"
      DTS:To="Package\accounts_organization CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 59]"
      DTS:CreationName=""
      DTS:DTSID="{60A84F1F-D3D8-47B0-8CB5-E5BC56468CFD}"
      DTS:From="Package\accounts_org"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 59"
      DTS:To="Package\accounts_organization" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 6]"
      DTS:CreationName=""
      DTS:DTSID="{862EFE2A-E0D4-4588-BA27-DF18C57A7BF7}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 6"
      DTS:To="Package\accounts_array CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 60]"
      DTS:CreationName=""
      DTS:DTSID="{8C1F87F1-44B2-48EA-A6CD-B9653CAB6865}"
      DTS:From="Package\trucks"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 60"
      DTS:To="Package\accounts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 62]"
      DTS:CreationName=""
      DTS:DTSID="{52C0F209-4A4A-4BB6-9A01-7B0F7E0F0FC4}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_function"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 62"
      DTS:To="Package\accounts_function CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 63]"
      DTS:CreationName=""
      DTS:DTSID="{90F88DF5-BB64-433E-B735-B9DEABF19C8F}"
      DTS:From="Package\accounts_function"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 63"
      DTS:To="Package\prj_accounts_credit" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 64]"
      DTS:CreationName=""
      DTS:DTSID="{58E3ACCC-82B7-429C-A878-D6667A198A7F}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_accounts_credit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 64"
      DTS:To="Package\accounts_function CI 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 65]"
      DTS:CreationName=""
      DTS:DTSID="{3A431E2A-3EA9-4F83-83B8-689E6403B32A}"
      DTS:From="Package\prj_accounts_credit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 65"
      DTS:To="Package\prj_accounts_organ_credit" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 66]"
      DTS:CreationName=""
      DTS:DTSID="{88E0211A-45A5-4218-86A0-F6FC3DF45CDA}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_accounts_organ_credit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 66"
      DTS:To="Package\prj_accounts_organ_credit CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 67]"
      DTS:CreationName=""
      DTS:DTSID="{0E3E4FC1-B600-44F2-9DE6-94FFB5489119}"
      DTS:From="Package\prj_accounts_organ_credit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 67"
      DTS:To="Package\prj_accounts_tax" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 68]"
      DTS:CreationName=""
      DTS:DTSID="{06501570-8CBB-4410-A983-29C27A77E37B}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_accounts_tax"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 68"
      DTS:To="Package\prj_accounts_tax CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 69]"
      DTS:CreationName=""
      DTS:DTSID="{CB3ABB35-A0A1-4F68-B56D-69C62D370C84}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_account_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 69"
      DTS:To="Package\prj_account_control CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 7]"
      DTS:CreationName=""
      DTS:DTSID="{09294BD2-C5F5-4C3D-9297-DB150C1C4570}"
      DTS:From="Package\accounts_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 7"
      DTS:To="Package\countries" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 70]"
      DTS:CreationName=""
      DTS:DTSID="{651F2DED-A2A2-413A-9251-2C35E94B9CA0}"
      DTS:From="Package\prj_accounts_tax"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 70"
      DTS:To="Package\prj_account_control" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 71]"
      DTS:CreationName=""
      DTS:DTSID="{1CF735E2-B7A5-4D77-8781-5A77D03AE228}"
      DTS:From="Package\prj_account_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 71"
      DTS:To="Package\addresses" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 72]"
      DTS:CreationName=""
      DTS:DTSID="{C78CF08C-8561-4A99-AA56-50D139CECBDD}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\addresses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 72"
      DTS:To="Package\addresses CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 73]"
      DTS:CreationName=""
      DTS:DTSID="{2EE8521B-FE43-449F-A7D6-71E05F617790}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\addresses_org"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 73"
      DTS:To="Package\addresses_org CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 74]"
      DTS:CreationName=""
      DTS:DTSID="{4BC5325D-5A07-4C19-B7DA-ED9B4735EA75}"
      DTS:From="Package\addresses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 74"
      DTS:To="Package\addresses_org" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 75]"
      DTS:CreationName=""
      DTS:DTSID="{545329A4-1ACD-416C-915D-99C55CD1E099}"
      DTS:From="Package\addresses_org"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 75"
      DTS:To="Package\addresses_organization" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 76]"
      DTS:CreationName=""
      DTS:DTSID="{2FECD7E2-3320-42A1-8F46-E3398E1114D4}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\addresses_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 76"
      DTS:To="Package\addresses_organization CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 77]"
      DTS:CreationName=""
      DTS:DTSID="{F8233D89-9928-4AF9-B65C-1E265DCC3E8C}"
      DTS:From="Package\addresses_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 77"
      DTS:To="Package\accounts_addresses" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 78]"
      DTS:CreationName=""
      DTS:DTSID="{8159E94F-1643-4456-BDEE-0813DEDA2CA7}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_addresses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 78"
      DTS:To="Package\accounts_addresses CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 79]"
      DTS:CreationName=""
      DTS:DTSID="{D6F66D94-D6FB-44A7-9DA9-D549282D2327}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\contacts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 79"
      DTS:To="Package\contacts CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 8]"
      DTS:CreationName=""
      DTS:DTSID="{5F24498B-A1DE-4C63-BF0C-5DE77FFBF9A5}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\countries"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 8"
      DTS:To="Package\countries CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 80]"
      DTS:CreationName=""
      DTS:DTSID="{67F6E4B7-E87F-448B-85A5-71D1AFC67C22}"
      DTS:From="Package\accounts_addresses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 80"
      DTS:To="Package\contacts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 81]"
      DTS:CreationName=""
      DTS:DTSID="{D56D3A94-A31D-4236-AAA2-E1201E160091}"
      DTS:From="Package\contacts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 81"
      DTS:To="Package\contacts_organization" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 82]"
      DTS:CreationName=""
      DTS:DTSID="{460FB13E-7F4A-4808-B970-541BB42D4FAA}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\contacts_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 82"
      DTS:To="Package\contacts_organization CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 83]"
      DTS:CreationName=""
      DTS:DTSID="{1794B8FD-9374-4480-BD6A-25753A960CD4}"
      DTS:From="Package\contacts_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 83"
      DTS:To="Package\contacts_accounts" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 84]"
      DTS:CreationName=""
      DTS:DTSID="{BBEEE010-4B8C-49CD-92C2-2D2F5CEF0E5C}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\contacts_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 84"
      DTS:To="Package\contacts_accounts CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 85]"
      DTS:CreationName=""
      DTS:DTSID="{93DB5ADB-AFFB-44EE-BA93-18BC4650157D}"
      DTS:From="Package\contacts_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 85"
      DTS:To="Package\route_header" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 86]"
      DTS:CreationName=""
      DTS:DTSID="{60277A82-E88F-4A54-AC06-DF206665AEF5}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 86"
      DTS:To="Package\products CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 87]"
      DTS:CreationName=""
      DTS:DTSID="{7929D3FA-4741-453F-8DBC-D89CCC6FC097}"
      DTS:From="Package\route_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 87"
      DTS:To="Package\products" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 88]"
      DTS:CreationName=""
      DTS:DTSID="{05C561CE-D680-4472-9DA6-12E8208B75A8}"
      DTS:From="Package\products"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 88"
      DTS:To="Package\products_organization" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 89]"
      DTS:CreationName=""
      DTS:DTSID="{5BFB3EEA-FAEA-4567-902A-E7E749160AAA}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 89"
      DTS:To="Package\products_organization CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 9]"
      DTS:CreationName=""
      DTS:DTSID="{87A8306E-E98A-4446-8F6D-96A7F1776387}"
      DTS:From="Package\countries"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 9"
      DTS:To="Package\prj_payment_terms" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 90]"
      DTS:CreationName=""
      DTS:DTSID="{44ED25B9-3F74-4915-B149-9250F8F45D8F}"
      DTS:From="Package\products_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 90"
      DTS:To="Package\prj_products_tax" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 91]"
      DTS:CreationName=""
      DTS:DTSID="{DB235C50-7A75-4471-96F0-7A9CAD854B06}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_products_tax"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 91"
      DTS:To="Package\prj_products_tax CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 92]"
      DTS:CreationName=""
      DTS:DTSID="{077602E7-CACF-49C6-B69C-ABC48D6BC3B7}"
      DTS:From="Package\prj_products_tax"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 92"
      DTS:To="Package\products_measure" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 93]"
      DTS:CreationName=""
      DTS:DTSID="{5FE1D353-35D3-40B8-B73E-C96FC8D28E9B}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_measure"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 93"
      DTS:To="Package\products_measure CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 94]"
      DTS:CreationName=""
      DTS:DTSID="{EFC178B3-44EF-4DF0-B2D6-0E8969BD77F1}"
      DTS:From="Package\products_measure"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 94"
      DTS:To="Package\prj_products_control" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 95]"
      DTS:CreationName=""
      DTS:DTSID="{351B3236-7A99-4E70-89CA-AF6C121847FC}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_products_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 95"
      DTS:To="Package\prj_products_control CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 96]"
      DTS:CreationName=""
      DTS:DTSID="{5D97946A-D865-4F50-9847-A56F6AD5D1F5}"
      DTS:From="Package\prj_products_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 96"
      DTS:To="Package\type_unit_control" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 97]"
      DTS:CreationName=""
      DTS:DTSID="{DB1C3A3D-BA21-48D7-8140-BF8FA62D9D58}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\type_unit_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 97"
      DTS:To="Package\type_unit_control CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 99]"
      DTS:CreationName=""
      DTS:DTSID="{192D18FC-C8E2-4BFD-A460-9DF42BEF8AD0}"
      DTS:From="Package\Tarea Volver a generar índice"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 99"
      DTS:To="Package\Tarea Actualizar estadísticas" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{CEECFB23-0DA8-4B0B-99D0-FED9FDFD2110}"
      DTS:EventID="326246432"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="La propiedad de propagación del evento"
          DTS:DTSID="{6322B2C2-C2E9-46D0-9555-83D27634DA57}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Enviar correo error"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.SendMailTask.SendMailTask, Microsoft.SqlServer.SendMailTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Enviar correo error"
          DTS:Disabled="True"
          DTS:DTSID="{3a0e208d-b578-4cf9-9303-ad65e3dfa9e6}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.SendMailTask.SendMailTask, Microsoft.SqlServer.SendMailTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Enviar correo error"
          DTS:TaskContact="Send Mail Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="MessageSource">(DT_WSTR, 12) @[System::ErrorCode] + ": " +  @[System::ErrorDescription]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{4834a7c2-9155-4c3d-8125-e377de6347ce}"
              SendMailTask:From="nombre_proyecto@telynet.com"
              SendMailTask:To="soporte_proyecto@telynet.com;jefe_proyecto@telynet.com"
              SendMailTask:Subject="Error procesando STDB"
              SendMailTask:MessageSource="0: " xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="512" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="136,44"
          Id="Package\accounts"
          TopLeft="172.016846361186,1269.31132075472" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts CI"
          TopLeft="172.016846361186,1344.3679245283" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_addresses"
          TopLeft="1034.65835579515,1448.02830188679" />
        <NodeLayout
          Size="115,44"
          Id="Package\accounts_addresses CI"
          TopLeft="1055.63948787062,1525.87735849057" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation1"
          TopLeft="161.035714285714,190.103773584906" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation1 CI"
          TopLeft="161.035714285714,262.896226415094" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation2"
          TopLeft="333.903638814016,189.915094339623" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation2 CI"
          TopLeft="333.903638814016,264.783018867925" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation3"
          TopLeft="510.809299191374,190.783018867925" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation3 CI"
          TopLeft="510.771563342318,264.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_array"
          TopLeft="686.356469002695,190.783018867925" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_array CI"
          TopLeft="686.356469002695,265.650943396226" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_function"
          TopLeft="687.18665768194,1269.95283018868" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_function CI"
          TopLeft="687.224393530997,1346.82075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_function CI 1"
          TopLeft="856.922506738544,1346.82075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_org"
          TopLeft="345.983827493261,1268.06132075472" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_org CI"
          TopLeft="345.946091644205,1342.96698113208" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_organization"
          TopLeft="517.589697514226,1268.09905660377" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_organization CI"
          TopLeft="518.738544474393,1342.96698113208" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses"
          TopLeft="518.469676549865,1447.99056603774" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses CI"
          TopLeft="518.431940700808,1523.87735849057" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses_org"
          TopLeft="690.205525606469,1448.02830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses_org CI"
          TopLeft="690.167789757412,1524.93396226415" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses_organization"
          TopLeft="861.941374663072,1447.99056603774" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses_organization CI"
          TopLeft="861.979110512129,1524.89622641509" />
        <NodeLayout
          Size="149,42"
          Id="Package\collecting_type"
          TopLeft="856,2429" />
        <NodeLayout
          Size="136,44"
          Id="Package\collections_pending"
          TopLeft="175.979110512129,2213.1179245283" />
        <NodeLayout
          Size="136,44"
          Id="Package\collections_pending CI"
          TopLeft="175.903638814016,2287.91037735849" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts"
          TopLeft="176.016846361186,1644.82075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts CI"
          TopLeft="175.979110512129,1715.80188679245" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts_accounts"
          TopLeft="520.469676549865,1644.85849056604" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts_accounts CI"
          TopLeft="520.469676549865,1715.7641509434" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts_organization"
          TopLeft="349.790431266846,1644.85849056604" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts_organization CI"
          TopLeft="349.790431266846,1716.70754716981" />
        <NodeLayout
          Size="136,44"
          Id="Package\core_users"
          TopLeft="172.016846361186,902.632075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\core_users CI"
          TopLeft="172.054582210243,975.575471698113" />
        <NodeLayout
          Size="136,44"
          Id="Package\countries"
          TopLeft="862.997978436657,190.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\countries CI"
          TopLeft="862.997978436657,267.537735849057" />
        <NodeLayout
          Size="171,42"
          Id="Package\equipment_account"
          TopLeft="688.205525606469,2214.14150943396" />
        <NodeLayout
          Size="115,44"
          Id="Package\equipment_account CI"
          TopLeft="709.073450134771,2289.12264150943" />
        <NodeLayout
          Size="136,44"
          Id="Package\equipment_array"
          TopLeft="167.148921832884,530.745283018868" />
        <NodeLayout
          Size="136,44"
          Id="Package\equipment_array CI"
          TopLeft="167.148921832884,605.61320754717" />
        <NodeLayout
          Size="136,44"
          Id="Package\loads_detail"
          TopLeft="346.771563342318,2505.46226415094" />
        <NodeLayout
          Size="136,44"
          Id="Package\loads_head"
          TopLeft="178.054582210243,2505.53773584906" />
        <NodeLayout
          Size="136,44"
          Id="Package\loads_orders"
          TopLeft="518.469676549865,2505.46226415094" />
        <NodeLayout
          Size="136,44"
          Id="Package\Modificación cliente"
          TopLeft="161.542452830189,2607.97439353099" />
        <NodeLayout
          Size="136,44"
          Id="Package\Precios Usuario"
          TopLeft="443.575471698113,2611.44272237197" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_account_control"
          TopLeft="176.723045822102,1448.59433962264" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_account_control CI"
          TopLeft="176.798517520216,1524.51886792453" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_accounts_credit"
          TopLeft="856.922506738544,1269.99056603774" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_accounts_organ_credit"
          TopLeft="1029.63948787062,1270.02830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_accounts_organ_credit CI"
          TopLeft="1029.63948787062,1348.82075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_accounts_tax"
          TopLeft="1199.41307277628,1269.95283018868" />
        <NodeLayout
          Size="114,44"
          Id="Package\prj_accounts_tax CI"
          TopLeft="1220.54514824797,1350.82075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_configuration"
          TopLeft="512.469676549865,530.632075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_currency"
          TopLeft="164.997978436658,364.066037735849" />
        <NodeLayout
          Size="117,44"
          Id="Package\prj_currency CI"
          TopLeft="187.828167115903,432.971698113208" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_hist_orders_header"
          TopLeft="846.224393530997,2018.06603773585" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_hist_orders_header CI"
          TopLeft="846.148921832884,2091.95283018868" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_hist_orders_lines"
          TopLeft="1021.92250673854,2018.06603773585" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_hist_orders_lines CI"
          TopLeft="1021.9602425876,2091.95283018868" />
        <NodeLayout
          Size="171,42"
          Id="Package\prj_hist_orders_sec"
          TopLeft="1197.65835579514,2018.06603773585" />
        <NodeLayout
          Size="119,44"
          Id="Package\prj_hist_orders_sec CI"
          TopLeft="1254.5640161725,2091.89622641509" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_orders_header"
          TopLeft="175.941374663073,2392.66509433962" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_orders_lines"
          TopLeft="346.809299191374,2393.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_orders_lines_lots"
          TopLeft="689.29986522911,2393.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_orders_secuences"
          TopLeft="520.545148247978,2393.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_orders_type_user"
          TopLeft="1205.37533692722,902.632075471698" />
        <NodeLayout
          Size="186,42"
          Id="Package\prj_payment_accounts"
          TopLeft="577.777777777778,2127.77777777778" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_payment_terms"
          TopLeft="1033.67722371968,190.594339622642" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_payment_terms CI"
          TopLeft="1033.63948787062,267.424528301887" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_price_list"
          TopLeft="1205.29986522911,190.556603773585" />
        <NodeLayout
          Size="116,44"
          Id="Package\prj_price_list CI"
          TopLeft="1205.41307277628,267.424528301887" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_pricing_tables"
          TopLeft="347.733827493261,2017.17924528302" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_pricing_tables CI"
          TopLeft="346.696091644205,2092.02830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_pricing_tables Mantenimiento"
          TopLeft="177.016846361186,2017.25471698113" />
        <NodeLayout
          Size="169,42"
          Id="Package\prj_products_assor"
          TopLeft="703.535714285714,2508" />
        <NodeLayout
          Size="190,42"
          Id="Package\prj_products_assor_det"
          TopLeft="927.535714285714,2511" />
        <NodeLayout
          Size="187,42"
          Id="Package\prj_products_assor_sel"
          TopLeft="1163.53571428571,2552" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_products_control"
          TopLeft="862.922506738544,1827.12264150943" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_products_control CI"
          TopLeft="862.922506738544,1898.02830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_products_tax"
          TopLeft="520.507412398922,1827.12264150943" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_products_tax CI"
          TopLeft="520.507412398922,1898.02830188679" />
        <NodeLayout
          Size="179,42"
          Id="Package\prj_promotions_head"
          TopLeft="540.535714285714,2013" />
        <NodeLayout
          Size="195,42"
          Id="Package\prj_promotions_hier_gift"
          TopLeft="1026.28571428571,2642.75" />
        <NodeLayout
          Size="194,42"
          Id="Package\prj_promtions_hierarchy"
          TopLeft="1156.03571428571,2740.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_users_control"
          TopLeft="691.18665768194,902.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_users_control CI"
          TopLeft="691.262129380054,978.481132075472" />
        <NodeLayout
          Size="152,42"
          Id="Package\prj_users_fiscal"
          TopLeft="1112.53571428571,1074" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_users_type_control"
          TopLeft="1038.02942497754,900.447589098533" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_users_type_control CI"
          TopLeft="1038.02942497754,978.25890985325" />
        <NodeLayout
          Size="136,44"
          Id="Package\products"
          TopLeft="172.016846361186,1826.44339622642" />
        <NodeLayout
          Size="136,44"
          Id="Package\products CI"
          TopLeft="171.979110512129,1896.21698113208" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_array"
          TopLeft="1069.38948787062,365.353773584906" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_array CI"
          TopLeft="1069.46495956873,439.202830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy2"
          TopLeft="865.941374663072,364.028301886793" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy2 CI"
          TopLeft="865.941374663072,437.915094339623" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy3"
          TopLeft="687.224393530997,364.028301886793" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy3 CI"
          TopLeft="687.148921832884,435.952830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy4"
          TopLeft="513.41307277628,364.066037735849" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy4 CI"
          TopLeft="513.41307277628,435.009433962264" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_measure"
          TopLeft="690.167789757412,1827.16037735849" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_measure CI"
          TopLeft="690.205525606469,1898.02830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_organization"
          TopLeft="345.828167115903,1827.19811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_organization CI"
          TopLeft="345.865902964959,1898.14150943396" />
        <NodeLayout
          Size="132,42"
          Id="Package\Promotions"
          TopLeft="910,2577" />
        <NodeLayout
          Size="136,44"
          Id="Package\provinces"
          TopLeft="1238.14420485175,365.542452830189" />
        <NodeLayout
          Size="136,44"
          Id="Package\provinces CI"
          TopLeft="1235.60646900269,440.066037735849" />
        <NodeLayout
          Size="136,44"
          Id="Package\route_accounts"
          TopLeft="1202.54514824797,1644.89622641509" />
        <NodeLayout
          Size="113,44"
          Id="Package\route_accounts CI"
          TopLeft="1225.41307277628,1715.83962264151" />
        <NodeLayout
          Size="136,44"
          Id="Package\route_header"
          TopLeft="862.884770889488,1644.89622641509" />
        <NodeLayout
          Size="136,44"
          Id="Package\route_header CI"
          TopLeft="862.771563342318,1715.80188679245" />
        <NodeLayout
          Size="139,42"
          Id="Package\route_sellers"
          TopLeft="1035.63948787062,1644.89622641509" />
        <NodeLayout
          Size="136,44"
          Id="Package\route_sellers CI"
          TopLeft="1035.63948787062,1715.83962264151" />
        <NodeLayout
          Size="136,44"
          Id="Package\sellers"
          TopLeft="168.092318059299,715.160377358491" />
        <NodeLayout
          Size="136,44"
          Id="Package\sellers CI"
          TopLeft="168.092318059299,788.971698113208" />
        <NodeLayout
          Size="152,42"
          Id="Package\Split_Imp_Final"
          TopLeft="686.25,2606.25" />
        <NodeLayout
          Size="136,44"
          Id="Package\Tarea Actualizar estadísticas"
          TopLeft="348.922506738544,2724.44339622642" />
        <NodeLayout
          Size="136,44"
          Id="Package\Tarea Volver a generar índice"
          TopLeft="178.243261455526,2721.90566037736" />
        <NodeLayout
          Size="136,44"
          Id="Package\trucks"
          TopLeft="344.771563342318,1088.29245283019" />
        <NodeLayout
          Size="123,44"
          Id="Package\trucks CI"
          TopLeft="344.696091644205,1160.51257861635" />
        <NodeLayout
          Size="136,44"
          Id="Package\type_unit"
          TopLeft="334.733827493261,364.066037735849" />
        <NodeLayout
          Size="136,44"
          Id="Package\type_unit CI"
          TopLeft="334.658355795148,433.952830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\type_unit_control"
          TopLeft="1038.65835579515,1827.16037735849" />
        <NodeLayout
          Size="137,44"
          Id="Package\type_unit_control CI"
          TopLeft="1073.56401617251,1901.04716981132" />
        <NodeLayout
          Size="136,44"
          Id="Package\unit_sales_organ_seller"
          TopLeft="340.771563342318,715.047169811321" />
        <NodeLayout
          Size="116,44"
          Id="Package\unit_sales_organ_seller CI"
          TopLeft="346.658355795148,788.858490566038" />
        <NodeLayout
          Size="221,42"
          Id="Package\Update accounts_organization"
          TopLeft="585.555555555556,1162.22222222222" />
        <NodeLayout
          Size="204,42"
          Id="Package\Update_Products_Measure"
          TopLeft="821,2691" />
        <NodeLayout
          Size="136,44"
          Id="Package\users_counter"
          TopLeft="862.997978436657,902.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\users_organizations"
          TopLeft="342.733827493261,902.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\users_organizations CI"
          TopLeft="342.733827493261,976.481132075472" />
        <NodeLayout
          Size="136,44"
          Id="Package\users_organizations_sellers"
          TopLeft="519.488544474393,902.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\users_organizations_sellers CI"
          TopLeft="519.488544474393,976.518867924528" />
        <NodeLayout
          Size="136,44"
          Id="Package\warehouses"
          TopLeft="166.747978436658,1048.05974842767" />
        <NodeLayout
          Size="136,44"
          Id="Package\warehouses CI"
          TopLeft="169.785714285714,1158.88993710692" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="1273.37533692722,946.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-84.83962264151,127.367924528302"
              Start="0,0"
              End="-84.83962264151,119.867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.683962264151" />
                  <mssgle:CubicBezierSegment
                    Point1="0,59.683962264151"
                    Point2="0,63.683962264151"
                    Point3="-4,63.683962264151" />
                  <mssgle:LineSegment
                    End="-80.83962264151,63.683962264151" />
                  <mssgle:CubicBezierSegment
                    Point1="-80.83962264151,63.683962264151"
                    Point2="-84.83962264151,63.683962264151"
                    Point3="-84.83962264151,67.683962264151" />
                  <mssgle:LineSegment
                    End="-84.83962264151,119.867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="1112.53571428571,1095">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-809.787735849052,-30.9402515723266"
              Start="0,0"
              End="-802.287735849052,-30.9402515723266">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-464.824478649451,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-464.824478649451,0"
                    Point2="-468.824478649451,0"
                    Point3="-468.824478649451,-4" />
                  <mssgle:LineSegment
                    End="-468.824478649451,-26.9402515723266" />
                  <mssgle:CubicBezierSegment
                    Point1="-468.824478649451,-26.9402515723266"
                    Point2="-468.824478649451,-30.9402515723266"
                    Point3="-472.824478649451,-30.9402515723266" />
                  <mssgle:LineSegment
                    End="-802.287735849052,-30.9402515723266" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="1085.32502246182,1871.16037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-840.308176100631,146.09433962264"
              Start="0,0"
              End="-840.308176100631,138.59433962264">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.4569986836326" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.4569986836326"
                    Point2="0,59.4569986836326"
                    Point3="-4,59.4569986836326" />
                  <mssgle:LineSegment
                    End="-836.308176100631,59.4569986836326" />
                  <mssgle:CubicBezierSegment
                    Point1="-836.308176100631,59.4569986836326"
                    Point2="-840.308176100631,59.4569986836326"
                    Point3="-840.308176100631,63.4569986836326" />
                  <mssgle:LineSegment
                    End="-840.308176100631,138.59433962264" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="1069.38948787062,386.691037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-67.4481132075484,0"
              Start="0,0"
              End="-59.9481132075484,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-59.9481132075484,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="686.25,2630.34636118599">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-106.674528301887,0"
              Start="0,0"
              End="-99.174528301887,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-99.174528301887,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="1255.99168912847,2060.06603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-585.213911350696,67.7117400419279"
              Start="0,0"
              End="-585.213911350696,60.2117400419279">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4613082441191" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.4613082441191"
                    Point2="0,27.4613082441191"
                    Point3="-4,27.4613082441191" />
                  <mssgle:LineSegment
                    End="-581.213911350696,27.4613082441191" />
                  <mssgle:CubicBezierSegment
                    Point1="-581.213911350696,27.4613082441191"
                    Point2="-585.213911350696,27.4613082441191"
                    Point3="-585.213911350696,31.4613082441191" />
                  <mssgle:LineSegment
                    End="-585.213911350696,60.2117400419279" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="670.777777777778,2169.77777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-426.798667265649,43.34014675052"
              Start="0,0"
              End="-426.798667265649,35.84014675052">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.67007337526" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.67007337526"
                    Point2="0,21.67007337526"
                    Point3="-4,21.67007337526" />
                  <mssgle:LineSegment
                    End="-422.798667265649,21.67007337526" />
                  <mssgle:CubicBezierSegment
                    Point1="-422.798667265649,21.67007337526"
                    Point2="-426.798667265649,21.67007337526"
                    Point3="-426.798667265649,25.67007337526" />
                  <mssgle:LineSegment
                    End="-426.798667265649,35.84014675052" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 15]"
          TopLeft="585.589697514226,1268.09905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="74.9658580413297,-63.8768343815477"
              Start="0,0"
              End="74.9658580413297,-56.3768343815477">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-34.050621019736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-34.050621019736"
                    Point2="0,-38.050621019736"
                    Point3="4,-38.050621019736" />
                  <mssgle:LineSegment
                    End="70.9658580413297,-38.050621019736" />
                  <mssgle:CubicBezierSegment
                    Point1="70.9658580413297,-38.050621019736"
                    Point2="74.9658580413297,-38.050621019736"
                    Point3="74.9658580413297,-42.050621019736" />
                  <mssgle:LineSegment
                    End="74.9658580413297,-56.3768343815477" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 16]"
          TopLeft="731.555555555556,1204.22222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="23.6311021263843,65.7306079664579"
              Start="0,0"
              End="23.6311021263843,58.2306079664579">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5757175066541" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5757175066541"
                    Point2="0,26.5757175066541"
                    Point3="4,26.5757175066541" />
                  <mssgle:LineSegment
                    End="19.6311021263843,26.5757175066541" />
                  <mssgle:CubicBezierSegment
                    Point1="19.6311021263843,26.5757175066541"
                    Point2="23.6311021263843,26.5757175066541"
                    Point3="23.6311021263843,30.5757175066541" />
                  <mssgle:LineSegment
                    End="23.6311021263843,58.2306079664579" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 17]"
          TopLeft="757.29986522911,2437.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-511.245283018867,68.03773584906"
              Start="0,0"
              End="-511.245283018867,60.53773584906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.01886792453" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.01886792453"
                    Point2="0,34.01886792453"
                    Point3="-4,34.01886792453" />
                  <mssgle:LineSegment
                    End="-507.245283018867,34.01886792453" />
                  <mssgle:CubicBezierSegment
                    Point1="-507.245283018867,34.01886792453"
                    Point2="-511.245283018867,34.01886792453"
                    Point3="-511.245283018867,38.01886792453" />
                  <mssgle:LineSegment
                    End="-511.245283018867,60.53773584906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 18]"
          TopLeft="890.333333333333,2691">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-128.083333333333,-42.75"
              Start="0,0"
              End="-128.083333333333,-35.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-13.2996108949416" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-13.2996108949416"
                    Point2="0,-17.2996108949416"
                    Point3="-4,-17.2996108949416" />
                  <mssgle:LineSegment
                    End="-124.083333333333,-17.2996108949416" />
                  <mssgle:CubicBezierSegment
                    Point1="-124.083333333333,-17.2996108949416"
                    Point2="-128.083333333333,-17.2996108949416"
                    Point3="-128.083333333333,-21.2996108949416" />
                  <mssgle:LineSegment
                    End="-128.083333333333,-35.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 19]"
          TopLeft="954,2471">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="68.535714285714,40"
              Start="0,0"
              End="68.535714285714,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.2549800796813" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.2549800796813"
                    Point2="0,16.2549800796813"
                    Point3="4,16.2549800796813" />
                  <mssgle:LineSegment
                    End="64.535714285714,16.2549800796813" />
                  <mssgle:CubicBezierSegment
                    Point1="64.535714285714,16.2549800796813"
                    Point2="68.535714285714,16.2549800796813"
                    Point3="68.535714285714,20.2549800796813" />
                  <mssgle:LineSegment
                    End="68.535714285714,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="483.733827493261,2036.58962264151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="56.801886792453,0"
              Start="0,0"
              End="49.301886792453,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.301886792453,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 20]"
          TopLeft="955.5,2619">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,72"
              Start="0,0"
              End="0,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="719.535714285714,2037.03301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="126.688679245283,0"
              Start="0,0"
              End="119.188679245283,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="119.188679245283,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="654.469676549865,2528.23113207547">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="49.066037735849,0"
              Start="0,0"
              End="41.566037735849,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.566037735849,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="788.035714285714,2508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="118.964285714286,-37"
              Start="0,0"
              End="118.964285714286,-29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-17.9641434262948" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-17.9641434262948"
                    Point2="0,-21.9641434262948"
                    Point3="4,-21.9641434262948" />
                  <mssgle:LineSegment
                    End="114.964285714286,-21.9641434262948" />
                  <mssgle:CubicBezierSegment
                    Point1="114.964285714286,-21.9641434262948"
                    Point2="118.964285714286,-21.9641434262948"
                    Point3="118.964285714286,-25.9641434262948" />
                  <mssgle:LineSegment
                    End="118.964285714286,-29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="1117.53571428571,2532">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="45.9999999999959,41"
              Start="0,0"
              End="38.4999999999959,41">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.999999999998,0" />
                  <mssgle:CubicBezierSegment
                    Point1="18.999999999998,0"
                    Point2="22.999999999998,0"
                    Point3="22.999999999998,4" />
                  <mssgle:LineSegment
                    End="22.999999999998,37" />
                  <mssgle:CubicBezierSegment
                    Point1="22.999999999998,37"
                    Point2="22.999999999998,41"
                    Point3="26.999999999998,41" />
                  <mssgle:LineSegment
                    End="38.4999999999959,41" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="1257.03571428571,2594">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="27,146.5"
              Start="0,0"
              End="27,139">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,83.180981595092" />
                  <mssgle:CubicBezierSegment
                    Point1="0,83.180981595092"
                    Point2="0,87.180981595092"
                    Point3="4,87.180981595092" />
                  <mssgle:LineSegment
                    End="23,87.180981595092" />
                  <mssgle:CubicBezierSegment
                    Point1="23,87.180981595092"
                    Point2="27,87.180981595092"
                    Point3="27,91.180981595092" />
                  <mssgle:LineSegment
                    End="27,139" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="1222.03571428571,2740.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-98.2499999999959,-55.75"
              Start="0,0"
              End="-98.2499999999959,-48.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-18.5736196319018" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-18.5736196319018"
                    Point2="0,-22.5736196319018"
                    Point3="-4,-22.5736196319018" />
                  <mssgle:LineSegment
                    End="-94.2499999999959,-22.5736196319018" />
                  <mssgle:CubicBezierSegment
                    Point1="-94.2499999999959,-22.5736196319018"
                    Point2="-98.2499999999959,-22.5736196319018"
                    Point3="-98.2499999999959,-26.5736196319018" />
                  <mssgle:LineSegment
                    End="-98.2499999999959,-48.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="1123.78571428571,2642.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-127.119047619043,-23.75"
              Start="0,0"
              End="-127.119047619043,-16.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-10.0793413173653" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-10.0793413173653"
                    Point2="0,-14.0793413173653"
                    Point3="-4,-14.0793413173653" />
                  <mssgle:LineSegment
                    End="-123.119047619043,-14.0793413173653" />
                  <mssgle:CubicBezierSegment
                    Point1="-123.119047619043,-14.0793413173653"
                    Point2="-127.119047619043,-14.0793413173653"
                    Point3="-127.119047619043,-18.0793413173653" />
                  <mssgle:LineSegment
                    End="-127.119047619043,-16.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción]"
          TopLeft="228.922506738544,234.028301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,28.867924528302"
              Start="0,0"
              End="0,21.367924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.367924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,2.683962264151,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 1]"
          TopLeft="296.809299191374,212.066037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="37.0943396226415,-0.188679245282856"
              Start="0,0"
              End="29.5943396226415,-0.188679245282856">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5283018867924,0" />
                  <mssgle:LineSegment
                    End="18.5283018867924,-0.188679245282856" />
                  <mssgle:LineSegment
                    End="29.5943396226415,-0.188679245282856" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 10]"
          TopLeft="1101.56401617251,234.518867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566166,32.9056603773585"
              Start="0,0"
              End="-0.0377358490566166,25.4056603773585">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4528301886792" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,16.4528301886792" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,25.4056603773585" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.01886792452831,21.4528301886792,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 100]"
          TopLeft="312.790431266846,2039.17924528302">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.9433962264151,0"
              Start="0,0"
              End="27.4433962264151,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.4433962264151,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 101]"
          TopLeft="415.214959568733,2061.17924528302">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.8490566037699"
              Start="0,0"
              End="0,23.3490566037699">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3490566037699" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.67452830188495,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 103]"
          TopLeft="914.073450134771,2061.99056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.9622641509436"
              Start="0,0"
              End="0,22.4622641509436">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4622641509436" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.2311320754718,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 104]"
          TopLeft="981.997978436657,2040.02830188679">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.9245283018868,0"
              Start="0,0"
              End="32.4245283018868,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.4245283018868,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 105]"
          TopLeft="1089.8281671159,2061.99056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.9622641509436"
              Start="0,0"
              End="0,22.4622641509436">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4622641509436" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.2311320754718,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 106]"
          TopLeft="1157.92250673854,2039.56603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.7358490565996,0"
              Start="0,0"
              End="32.2358490565996,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.2358490565996,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 107]"
          TopLeft="1312.19451931716,2060.06603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,31.8301886792401"
              Start="0,0"
              End="0,24.3301886792401">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.3301886792401" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.16509433962005,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 108]"
          TopLeft="243.828167115903,2257.04245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.867924528302"
              Start="0,0"
              End="0,23.367924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.367924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.683962264151,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 11]"
          TopLeft="1169.45080862533,212.556603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.8490566037735,-0.0377358490566166"
              Start="0,0"
              End="28.3490566037735,-0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.9245283018868,0" />
                  <mssgle:LineSegment
                    End="17.9245283018868,-0.0377358490566166" />
                  <mssgle:LineSegment
                    End="28.3490566037735,-0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 110]"
          TopLeft="311.979110512129,2235.12971698113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="376.22641509434,0"
              Start="0,0"
              End="368.72641509434,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="368.72641509434,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 111]"
          TopLeft="800.872192273136,2256.14150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-34.2987421383647,32.9811320754702"
              Start="0,0"
              End="-34.2987421383647,25.4811320754702">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.37589365749082" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.37589365749082"
                    Point2="0,13.3758936574908"
                    Point3="-4,13.3758936574908" />
                  <mssgle:LineSegment
                    End="-30.2987421383647,13.3758936574908" />
                  <mssgle:CubicBezierSegment
                    Point1="-30.2987421383647,13.3758936574908"
                    Point2="-34.2987421383647,13.3758936574908"
                    Point3="-34.2987421383647,17.3758936574908" />
                  <mssgle:LineSegment
                    End="-34.2987421383647,25.4811320754702" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.1493710691824,18.3758936574908,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 112]"
          TopLeft="746.538858939802,2256.14150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-502.597484276729,136.52358490566"
              Start="0,0"
              End="-502.597484276729,129.02358490566">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.3687771923302" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.3687771923302"
                    Point2="0,55.3687771923302"
                    Point3="-4,55.3687771923302" />
                  <mssgle:LineSegment
                    End="-498.597484276729,55.3687771923302" />
                  <mssgle:CubicBezierSegment
                    Point1="-498.597484276729,55.3687771923302"
                    Point2="-502.597484276729,55.3687771923302"
                    Point3="-502.597484276729,59.3687771923302" />
                  <mssgle:LineSegment
                    End="-502.597484276729,129.02358490566" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 113]"
          TopLeft="229.542452830189,2651.97439353099">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="16.700808625337,69.9312668463704"
              Start="0,0"
              End="16.700808625337,62.4312668463704">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.9656334231852" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.9656334231852"
                    Point2="0,34.9656334231852"
                    Point3="4,34.9656334231852" />
                  <mssgle:LineSegment
                    End="12.700808625337,34.9656334231852" />
                  <mssgle:CubicBezierSegment
                    Point1="12.700808625337,34.9656334231852"
                    Point2="16.700808625337,34.9656334231852"
                    Point3="16.700808625337,38.9656334231852" />
                  <mssgle:LineSegment
                    End="16.700808625337,62.4312668463704" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0.3504043126685,39.9656334231852,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 115]"
          TopLeft="311.941374663073,2415.08254716981">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.867924528301,0"
              Start="0,0"
              End="27.367924528301,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.367924528301,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 116]"
          TopLeft="482.582884097035,2415.46226415094">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="37.9622641509434,0"
              Start="0,0"
              End="30.4622641509434,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.4622641509434,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 118]"
          TopLeft="656.318733153639,2415.46226415094">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="32.9811320754717,0"
              Start="0,0"
              End="25.4811320754717,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.4811320754717,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 12]"
          TopLeft="1252.4319407008,234.481132075472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="10.867924528302,32.9433962264151"
              Start="0,0"
              End="10.867924528302,25.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.7169811320754" />
                  <mssgle:LineSegment
                    End="10.867924528302,24.7169811320754" />
                  <mssgle:LineSegment
                    End="10.867924528302,25.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-2.566037735849,29.7169811320754,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 121]"
          TopLeft="313.828167115903,2527.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="32.9433962264151,-0.0754716981132333"
              Start="0,0"
              End="25.4433962264151,-0.0754716981132333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.4528301886793,0" />
                  <mssgle:LineSegment
                    End="16.4528301886793,-0.0754716981132333" />
                  <mssgle:LineSegment
                    End="25.4433962264151,-0.0754716981132333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 122]"
          TopLeft="482.545148247978,2527.42452830189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.9245283018868,0"
              Start="0,0"
              End="28.4245283018868,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.4245283018868,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 124]"
          TopLeft="443.575471698113,2631.70855795148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-146.033018867924,0"
              Start="0,0"
              End="-138.533018867924,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-138.533018867924,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 13]"
          TopLeft="1304.87533692722,409.542452830189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.52358490566"
              Start="0,0"
              End="0,23.02358490566">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.02358490566" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.51179245283,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 14]"
          TopLeft="1294.63319856245,234.556603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="11.5110062893073,130.985849056604"
              Start="0,0"
              End="11.5110062893073,123.485849056604">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.3081943835017" />
                  <mssgle:CubicBezierSegment
                    Point1="0,49.3081943835017"
                    Point2="0,53.3081943835017"
                    Point3="4,53.3081943835017" />
                  <mssgle:LineSegment
                    End="7.51100628930726,53.3081943835017" />
                  <mssgle:CubicBezierSegment
                    Point1="7.51100628930726,53.3081943835017"
                    Point2="11.5110062893073,53.3081943835017"
                    Point3="11.5110062893073,57.3081943835017" />
                  <mssgle:LineSegment
                    End="11.5110062893073,123.485849056604" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 15]"
          TopLeft="1238.14420485175,387.410377358491">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-32.9811320754718,0"
              Start="0,0"
              End="-25.4811320754718,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-25.4811320754718,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 16]"
          TopLeft="1137.31401617251,409.278301886793">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.9245283018868"
              Start="0,0"
              End="0,22.4245283018868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4245283018868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.2122641509434,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 18]"
          TopLeft="933.828167115903,407.952830188679">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.9622641509434"
              Start="0,0"
              End="0,22.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.2311320754717,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 19]"
          TopLeft="865.941374663072,385.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-42.9433962264151,0"
              Start="0,0"
              End="-35.4433962264151,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-35.4433962264151,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 2]"
          TopLeft="401.790431266846,233.83962264151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.9433962264151"
              Start="0,0"
              End="0,23.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.72169811320755,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 20]"
          TopLeft="755.111185983827,407.952830188679">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0754716981132333,28"
              Start="0,0"
              End="-0.0754716981132333,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14" />
                  <mssgle:LineSegment
                    End="-0.0754716981132333,14" />
                  <mssgle:LineSegment
                    End="-0.0754716981132333,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.03773584905662,19,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 21]"
          TopLeft="687.224393530997,385.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-38.0377358490566,0.0377358490566166"
              Start="0,0"
              End="-30.5377358490566,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-19.0188679245283,0" />
                  <mssgle:LineSegment
                    End="-19.0188679245283,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="-30.5377358490566,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 22]"
          TopLeft="581.29986522911,407.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,27.0188679245283"
              Start="0,0"
              End="0,19.5188679245283">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5188679245283" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.75943396226415,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 23]"
          TopLeft="513.41307277628,386.028301886793">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-42.9056603773585,0"
              Start="0,0"
              End="-35.4056603773585,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-35.4056603773585,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 24]"
          TopLeft="402.620619946091,407.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0754716981132049,25.9622641509434"
              Start="0,0"
              End="-0.0754716981132049,18.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.9811320754717" />
                  <mssgle:LineSegment
                    End="-0.0754716981132049,12.9811320754717" />
                  <mssgle:LineSegment
                    End="-0.0754716981132049,18.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.0377358490566,17.9811320754717,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 25]"
          TopLeft="253.63948787062,407.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-7.39622641509434,24.9811320754717"
              Start="0,0"
              End="-7.39622641509434,17.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.7547169811321" />
                  <mssgle:LineSegment
                    End="-7.39622641509434,18.7547169811321" />
                  <mssgle:LineSegment
                    End="-7.39622641509434,17.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-11.6981132075472,23.7547169811321,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 26]"
          TopLeft="334.733827493261,386.028301886793">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-33.9622641509434,0"
              Start="0,0"
              End="-26.4622641509434,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-26.4622641509434,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 27]"
          TopLeft="235.035714285714,574.669811320755">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.9433962264151"
              Start="0,0"
              End="0,23.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 28]"
          TopLeft="170.620619946092,407.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="64.4150943396226,122.754716981132"
              Start="0,0"
              End="64.4150943396226,115.254716981132">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,92.0754716981132" />
                  <mssgle:LineSegment
                    End="64.4150943396226,92.0754716981132" />
                  <mssgle:LineSegment
                    End="64.4150943396226,115.254716981132" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 29]"
          TopLeft="302.922506738544,552.707547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="209.547169811321,-0.11320754716985"
              Start="0,0"
              End="202.047169811321,-0.11320754716985">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="104.754716981132,0" />
                  <mssgle:LineSegment
                    End="104.754716981132,-0.11320754716985" />
                  <mssgle:LineSegment
                    End="202.047169811321,-0.11320754716985" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 3]"
          TopLeft="469.677223719676,211.877358490566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="41.1320754716981,0.867924528301728"
              Start="0,0"
              End="33.6320754716981,0.867924528301728">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.5660377358491,0" />
                  <mssgle:LineSegment
                    End="20.5660377358491,0.867924528301728" />
                  <mssgle:LineSegment
                    End="33.6320754716981,0.867924528301728" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 30]"
          TopLeft="580.356469002695,574.556603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-344.377358490566,140.603773584906"
              Start="0,0"
              End="-344.377358490566,133.103773584906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,91.0566037735849" />
                  <mssgle:LineSegment
                    End="-344.377358490566,91.0566037735849" />
                  <mssgle:LineSegment
                    End="-344.377358490566,133.103773584906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 31]"
          TopLeft="235.979110512129,759.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.8867924528302"
              Start="0,0"
              End="0,22.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.1933962264151,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 32]"
          TopLeft="303.865902964959,737.122641509434">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.9056603773585,-0.11320754716985"
              Start="0,0"
              End="29.4056603773585,-0.11320754716985">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.4528301886793,0" />
                  <mssgle:LineSegment
                    End="18.4528301886793,-0.11320754716985" />
                  <mssgle:LineSegment
                    End="29.4056603773585,-0.11320754716985" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 33]"
          TopLeft="408.658355795148,758.971698113208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-4.11320754716979,29.8867924528302"
              Start="0,0"
              End="-4.11320754716979,22.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4150943396227" />
                  <mssgle:LineSegment
                    End="-4.11320754716979,22.4150943396227" />
                  <mssgle:LineSegment
                    End="-4.11320754716979,22.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.0566037735849,27.4150943396227,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 34]"
          TopLeft="1174.63948787062,1666.39622641509">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="27.9056603773499,0"
              Start="0,0"
              End="20.4056603773499,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.4056603773499,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 35]"
          TopLeft="930.771563342318,1688.82075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.11320754716985,26.9811320754717"
              Start="0,0"
              End="-0.11320754716985,19.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.4716981132075" />
                  <mssgle:LineSegment
                    End="-0.11320754716985,13.4716981132075" />
                  <mssgle:LineSegment
                    End="-0.11320754716985,19.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.05660377358493,18.4716981132075,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 36]"
          TopLeft="998.884770889488,1666.39622641509">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.7547169811321,0"
              Start="0,0"
              End="29.2547169811321,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.2547169811321,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 37]"
          TopLeft="1104.38948787062,1686.89622641509">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,28.94339622642"
              Start="0,0"
              End="0,21.44339622642">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.44339622642" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,2.72169811321,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 38]"
          TopLeft="1291.18665768194,1688.82075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-9.35849056603774,27.0188679245283"
              Start="0,0"
              End="-9.35849056603774,19.5188679245283">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2641509433962" />
                  <mssgle:LineSegment
                    End="-9.35849056603774,20.2641509433962" />
                  <mssgle:LineSegment
                    End="-9.35849056603774,19.5188679245283" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-12.6792452830189,25.2641509433962,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 39]"
          TopLeft="239.903638814016,946.556603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.0377358490566024,29.0188679245283"
              Start="0,0"
              End="0.0377358490566024,21.5188679245283">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.5283018867924" />
                  <mssgle:LineSegment
                    End="0.0377358490566024,14.5283018867924" />
                  <mssgle:LineSegment
                    End="0.0377358490566024,21.5188679245283" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.9811320754717,19.5283018867924,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 4]"
          TopLeft="578.696091644205,234.707547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566166,29.9622641509435"
              Start="0,0"
              End="-0.0377358490566166,22.4622641509435">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.9811320754718" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,14.9811320754718" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,22.4622641509435" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.01886792452831,19.9811320754718,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 40]"
          TopLeft="470.922506738544,758.971698113208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-231.018867924528,143.660377358491"
              Start="0,0"
              End="-231.018867924528,136.160377358491">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,94.3018867924528" />
                  <mssgle:LineSegment
                    End="-231.018867924528,94.3018867924528" />
                  <mssgle:LineSegment
                    End="-231.018867924528,136.160377358491" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 41]"
          TopLeft="307.790431266846,924.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.9433962264151,0.0377358490566166"
              Start="0,0"
              End="27.4433962264151,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.4716981132076,0" />
                  <mssgle:LineSegment
                    End="17.4716981132076,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="27.4433962264151,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 42]"
          TopLeft="410.620619946091,946.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.8867924528302"
              Start="0,0"
              End="0,22.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.1933962264151,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 43]"
          TopLeft="478.507412398922,924.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="40.9811320754717,0"
              Start="0,0"
              End="33.4811320754717,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.4811320754717,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 44]"
          TopLeft="587.375336927223,946.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.9245283018868"
              Start="0,0"
              End="0,22.4245283018868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4245283018868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.2122641509434,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 45]"
          TopLeft="655.262129380054,924.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.9245283018868,0"
              Start="0,0"
              End="28.4245283018868,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.4245283018868,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 46]"
          TopLeft="759.073450134771,946.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.0754716981132333,31.8867924528302"
              Start="0,0"
              End="0.0754716981132333,24.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.9622641509434" />
                  <mssgle:LineSegment
                    End="0.0754716981132333,15.9622641509434" />
                  <mssgle:LineSegment
                    End="0.0754716981132333,24.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.96226415094338,20.9622641509434,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 47]"
          TopLeft="826.960242587601,924.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.0377358490566,0"
              Start="0,0"
              End="28.5377358490566,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.5377358490566,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 48]"
          TopLeft="1105.91621743037,944.37211740042">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,33.8867924528302"
              Start="0,0"
              End="0,26.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,5.1933962264151,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 49]"
          TopLeft="998.997978436657,923.558700209644">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.0314465408861,0"
              Start="0,0"
              End="31.5314465408861,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.5314465408861,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 5]"
          TopLeft="646.582884097035,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.7735849056604,0"
              Start="0,0"
              End="32.2735849056604,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.2735849056604,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 50]"
          TopLeft="1174.02942497754,923.539832285115">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="31.3459119496767,0"
              Start="0,0"
              End="23.8459119496767,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.8459119496767,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 51]"
          TopLeft="239.903638814016,1313.2358490566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,31.1320754716981"
              Start="0,0"
              End="0,23.6320754716981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.6320754716981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.81603773584905,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 52]"
          TopLeft="236.266846361186,1092.05974842767">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,66.8301886792453"
              Start="0,0"
              End="0,59.3301886792453">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.3301886792453" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,21.6650943396227,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 54]"
          TopLeft="302.747978436658,1076.05974842767">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="42.02358490566,34.2327044025167"
              Start="0,0"
              End="34.52358490566,34.2327044025167">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="13.6941410129095,0" />
                  <mssgle:CubicBezierSegment
                    Point1="13.6941410129095,0"
                    Point2="17.6941410129095,0"
                    Point3="17.6941410129095,4" />
                  <mssgle:LineSegment
                    End="17.6941410129095,30.2327044025167" />
                  <mssgle:CubicBezierSegment
                    Point1="17.6941410129095,30.2327044025167"
                    Point2="17.6941410129095,34.2327044025167"
                    Point3="21.6941410129095,34.2327044025167" />
                  <mssgle:LineSegment
                    End="34.52358490566,34.2327044025167" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 55]"
          TopLeft="434.104896675651,1132.29245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-27.9088050314463,28.2201257861634"
              Start="0,0"
              End="-27.9088050314463,20.7201257861634">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.48493491297348" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.48493491297348"
                    Point2="0,11.4849349129735"
                    Point3="-4,11.4849349129735" />
                  <mssgle:LineSegment
                    End="-23.9088050314463,11.4849349129735" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.9088050314463,11.4849349129735"
                    Point2="-27.9088050314463,11.4849349129735"
                    Point3="-27.9088050314463,15.4849349129735" />
                  <mssgle:LineSegment
                    End="-27.9088050314463,20.7201257861634" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-21.9544025157231,16.4849349129735,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 56]"
          TopLeft="308.016846361186,1290.68632075472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="37.9669811320755,0"
              Start="0,0"
              End="30.4669811320755,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.4669811320755,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 57]"
          TopLeft="413.851752021563,1311.9858490566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.9811320754718"
              Start="0,0"
              End="0,23.4811320754718">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4811320754718" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.7405660377359,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 58]"
          TopLeft="586.16412099431,1312.09905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.8679245283101"
              Start="0,0"
              End="0,23.3679245283101">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3679245283101" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.68396226415505,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 59]"
          TopLeft="481.983827493261,1290.08018867925">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.6058700209649,0"
              Start="0,0"
              End="28.1058700209649,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.1058700209649,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 6]"
          TopLeft="754.243261455525,234.707547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.9433962264152"
              Start="0,0"
              End="0,23.4433962264152">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4433962264152" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.7216981132076,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 60]"
          TopLeft="474.922506738544,1132.21698113208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-235.018867924528,137.094339622642"
              Start="0,0"
              End="-235.018867924528,129.594339622642">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,86.3773584905661" />
                  <mssgle:LineSegment
                    End="-235.018867924528,86.3773584905661" />
                  <mssgle:LineSegment
                    End="-235.018867924528,129.594339622642" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 62]"
          TopLeft="755.073450134771,1313.87735849057">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.0377358490566166,32.9433962264151"
              Start="0,0"
              End="0.0377358490566166,25.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4528301886792" />
                  <mssgle:LineSegment
                    End="0.0377358490566166,16.4528301886792" />
                  <mssgle:LineSegment
                    End="0.0377358490566166,25.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.98113207547169,21.4528301886792,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 63]"
          TopLeft="822.960242587601,1291.91509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="33.9622641509434,0.0377358490566024"
              Start="0,0"
              End="26.4622641509434,0.0377358490566024">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.9811320754717,0" />
                  <mssgle:LineSegment
                    End="16.9811320754717,0.0377358490566024" />
                  <mssgle:LineSegment
                    End="26.4622641509434,0.0377358490566024" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 64]"
          TopLeft="924.809299191374,1313.91509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,32.9056603773585"
              Start="0,0"
              End="0,25.4056603773585">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.4056603773585" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.70283018867925,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 65]"
          TopLeft="992.696091644205,1291.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.9433962264151,0.0377358490566024"
              Start="0,0"
              End="29.4433962264151,0.0377358490566024">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.4528301886793,0" />
                  <mssgle:LineSegment
                    End="18.4528301886793,0.0377358490566024" />
                  <mssgle:LineSegment
                    End="29.4433962264151,0.0377358490566024" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 66]"
          TopLeft="1097.52628032345,1313.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,34.8679245283019"
              Start="0,0"
              End="0,27.3679245283019">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.3679245283019" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,5.68396226415095,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 67]"
          TopLeft="1165.41307277628,1291.99056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34,-0.0754716981132049"
              Start="0,0"
              End="26.5,-0.0754716981132049">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.9811320754717,0" />
                  <mssgle:LineSegment
                    End="16.9811320754717,-0.0754716981132049" />
                  <mssgle:LineSegment
                    End="26.5,-0.0754716981132049" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 68]"
          TopLeft="1288.05458221024,1313.87735849057">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-10.6415094339623,36.9433962264151"
              Start="0,0"
              End="-10.6415094339623,29.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6981132075472" />
                  <mssgle:LineSegment
                    End="-10.6415094339623,27.6981132075472" />
                  <mssgle:LineSegment
                    End="-10.6415094339623,29.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.3207547169811,32.6981132075472,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 69]"
          TopLeft="244.647574123989,1492.51886792453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 7]"
          TopLeft="822.130053908356,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="40.8679245283018,-0.113207547169623"
              Start="0,0"
              End="33.3679245283018,-0.113207547169623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.4150943396226,0" />
                  <mssgle:LineSegment
                    End="20.4150943396226,-0.113207547169623" />
                  <mssgle:LineSegment
                    End="33.3679245283018,-0.113207547169623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 70]"
          TopLeft="1246.07973944295,1313.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-1001.35669362085,134.64150943396"
              Start="0,0"
              End="-1001.35669362085,127.14150943396">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.795963141728" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.795963141728"
                    Point2="0,54.795963141728"
                    Point3="-4,54.795963141728" />
                  <mssgle:LineSegment
                    End="-997.356693620849,54.795963141728" />
                  <mssgle:CubicBezierSegment
                    Point1="-997.356693620849,54.795963141728"
                    Point2="-1001.35669362085,54.795963141728"
                    Point3="-1001.35669362085,58.795963141728" />
                  <mssgle:LineSegment
                    End="-1001.35669362085,127.14150943396" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 71]"
          TopLeft="312.723045822102,1470.29245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="205.746630727763,0"
              Start="0,0"
              End="198.246630727763,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="198.246630727763,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 72]"
          TopLeft="586.356469002695,1491.91509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566166,31.9622641509434"
              Start="0,0"
              End="-0.0377358490566166,24.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.9622641509434" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,15.9622641509434" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,24.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.01886792452831,20.9622641509434,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 73]"
          TopLeft="758.092318059299,1491.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566166,32.9811320754717"
              Start="0,0"
              End="-0.0377358490566166,25.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4905660377358" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,16.4905660377358" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,25.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.01886792452831,21.4905660377358,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 74]"
          TopLeft="654.243261455525,1469.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.9622641509434,0.0377358490566166"
              Start="0,0"
              End="28.4622641509434,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.9622641509434,0" />
                  <mssgle:LineSegment
                    End="17.9622641509434,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="28.4622641509434,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 75]"
          TopLeft="825.979110512129,1469.99056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.9622641509434,-0.0377358490566166"
              Start="0,0"
              End="28.4622641509434,-0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.9622641509434,0" />
                  <mssgle:LineSegment
                    End="17.9622641509434,-0.0377358490566166" />
                  <mssgle:LineSegment
                    End="28.4622641509434,-0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 76]"
          TopLeft="929.828167115903,1491.91509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.037735849056503,32.9811320754717"
              Start="0,0"
              End="0.037735849056503,25.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4905660377358" />
                  <mssgle:LineSegment
                    End="0.037735849056503,16.4905660377358" />
                  <mssgle:LineSegment
                    End="0.037735849056503,25.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.98113207547175,21.4905660377358,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 77]"
          TopLeft="997.714959568733,1469.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.9433962264151,0.0377358490566166"
              Start="0,0"
              End="29.4433962264151,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.4528301886793,0" />
                  <mssgle:LineSegment
                    End="18.4528301886793,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="29.4433962264151,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 78]"
          TopLeft="1123.29986522911,1491.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-10.2641509433962,33.9245283018868"
              Start="0,0"
              End="-10.2641509433962,26.4245283018868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.4339622641509" />
                  <mssgle:LineSegment
                    End="-10.2641509433962,25.4339622641509" />
                  <mssgle:LineSegment
                    End="-10.2641509433962,26.4245283018868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.1320754716981,30.4339622641509,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 79]"
          TopLeft="243.903638814016,1688.74528301887">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566024,27.0566037735849"
              Start="0,0"
              End="-0.0377358490566024,19.5566037735849">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5094339622642" />
                  <mssgle:LineSegment
                    End="-0.0377358490566024,13.5094339622642" />
                  <mssgle:LineSegment
                    End="-0.0377358490566024,19.5566037735849" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.0188679245283,18.5094339622642,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 8]"
          TopLeft="930.884770889488,234.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,32.943396226415"
              Start="0,0"
              End="0,25.443396226415">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.443396226415" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.7216981132075,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 80]"
          TopLeft="1040.28099730458,1491.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-796.377358490566,152.867924528302"
              Start="0,0"
              End="-796.377358490566,145.367924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,103.320754716981" />
                  <mssgle:LineSegment
                    End="-796.377358490566,103.320754716981" />
                  <mssgle:LineSegment
                    End="-796.377358490566,145.367924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 81]"
          TopLeft="311.790431266846,1666.78301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="38,0.0377358490566166"
              Start="0,0"
              End="30.5,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.9811320754717,0" />
                  <mssgle:LineSegment
                    End="18.9811320754717,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="30.5,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 82]"
          TopLeft="417.677223719676,1688.78301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,27.9245283018868"
              Start="0,0"
              End="0,20.4245283018868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4245283018868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,2.2122641509434,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 83]"
          TopLeft="485.564016172506,1666.82075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.9056603773585,0"
              Start="0,0"
              End="27.4056603773585,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.4056603773585,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 84]"
          TopLeft="588.356469002695,1688.78301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,26.9811320754717"
              Start="0,0"
              End="0,19.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.74056603773585,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 85]"
          TopLeft="656.243261455525,1666.82075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="206.641509433962,0.0377358490566166"
              Start="0,0"
              End="199.141509433962,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="103.320754716981,0" />
                  <mssgle:LineSegment
                    End="103.320754716981,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="199.141509433962,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 86]"
          TopLeft="239.903638814016,1870.3679245283">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566024,25.8490566037735"
              Start="0,0"
              End="-0.0377358490566024,18.3490566037735">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.9056603773585" />
                  <mssgle:LineSegment
                    End="-0.0377358490566024,12.9056603773585" />
                  <mssgle:LineSegment
                    End="-0.0377358490566024,18.3490566037735" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.0188679245283,17.9056603773585,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 87]"
          TopLeft="1208.16778975741,1688.82075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-968.264150943396,137.622641509434"
              Start="0,0"
              End="-968.264150943396,130.122641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,90.1132075471698" />
                  <mssgle:LineSegment
                    End="-968.264150943396,90.1132075471698" />
                  <mssgle:LineSegment
                    End="-968.264150943396,130.122641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 88]"
          TopLeft="307.790431266846,1848.40566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="38.0377358490566,0.754716981131992"
              Start="0,0"
              End="30.5377358490566,0.754716981131992">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.0188679245283,0" />
                  <mssgle:LineSegment
                    End="19.0188679245283,0.754716981131992" />
                  <mssgle:LineSegment
                    End="30.5377358490566,0.754716981131992" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 89]"
          TopLeft="413.714959568733,1871.12264150943">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.0377358490565882,27.0188679245283"
              Start="0,0"
              End="0.0377358490565882,19.5188679245283">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5094339622641" />
                  <mssgle:LineSegment
                    End="0.0377358490565882,13.5094339622641" />
                  <mssgle:LineSegment
                    End="0.0377358490565882,19.5188679245283" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.98113207547171,18.5094339622641,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 9]"
          TopLeft="998.771563342318,212.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.9056603773585,-0.0754716981132333"
              Start="0,0"
              End="27.4056603773585,-0.0754716981132333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.4339622641509,0" />
                  <mssgle:LineSegment
                    End="17.4339622641509,-0.0754716981132333" />
                  <mssgle:LineSegment
                    End="27.4056603773585,-0.0754716981132333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 90]"
          TopLeft="481.601752021563,1849.16037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="38.9056603773585,-0.0754716981131196"
              Start="0,0"
              End="31.4056603773585,-0.0754716981131196">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.433962264151,0" />
                  <mssgle:LineSegment
                    End="19.433962264151,-0.0754716981131196" />
                  <mssgle:LineSegment
                    End="31.4056603773585,-0.0754716981131196" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 91]"
          TopLeft="588.394204851752,1871.04716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,26.9811320754717"
              Start="0,0"
              End="0,19.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.74056603773585,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 92]"
          TopLeft="656.280997304582,1849.08490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="33.8867924528302,0.0377358490566166"
              Start="0,0"
              End="26.3867924528302,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.9433962264151,0" />
                  <mssgle:LineSegment
                    End="16.9433962264151,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="26.3867924528302,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 93]"
          TopLeft="758.054582210242,1871.08490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.0377358490566166,26.9433962264151"
              Start="0,0"
              End="0.0377358490566166,19.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.4716981132075" />
                  <mssgle:LineSegment
                    End="0.0377358490566166,13.4716981132075" />
                  <mssgle:LineSegment
                    End="0.0377358490566166,19.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.98113207547169,18.4716981132075,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 94]"
          TopLeft="825.941374663072,1849.12264150943">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.9811320754717,-0.0377358490566166"
              Start="0,0"
              End="29.4811320754717,-0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.4905660377359,0" />
                  <mssgle:LineSegment
                    End="18.4905660377359,-0.0377358490566166" />
                  <mssgle:LineSegment
                    End="29.4811320754717,-0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 95]"
          TopLeft="930.809299191374,1871.04716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,26.9811320754717"
              Start="0,0"
              End="0,19.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.74056603773585,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 96]"
          TopLeft="998.696091644205,1849.08490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.9622641509434,0.0377358490566166"
              Start="0,0"
              End="32.4622641509434,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.9622641509434,0" />
                  <mssgle:LineSegment
                    End="19.9622641509434,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="32.4622641509434,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 97]"
          TopLeft="1148.05458221024,1871.08490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-6.11320754716985,29.9622641509434"
              Start="0,0"
              End="-6.11320754716985,22.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4528301886792" />
                  <mssgle:LineSegment
                    End="-6.11320754716985,22.4528301886792" />
                  <mssgle:LineSegment
                    End="-6.11320754716985,22.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-11.0566037735849,27.4528301886792,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 99]"
          TopLeft="314.243261455526,2745.17452830189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.679245283018,0"
              Start="0,0"
              End="27.179245283018,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.179245283018,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Pricing (7)"
          ParentId="Package"
          Size="97,38"
          Id="241f395e-e75d-4b3e-9adc-d48a842a6f09"
          TopLeft="256.620619946091,1986.70754716981">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Productos (6)"
          ParentId="Package"
          Size="92,51"
          Id="c625e857-1b26-48be-accb-1942fcef6d00"
          TopLeft="259.375336927223,1798.93396226415">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Contactos (6)"
          ParentId="Package"
          Size="110,38"
          Id="66fc35d3-a6ea-4592-a3a6-43199196d3b1"
          TopLeft="263.41307277628,1611.31132075472">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Pedidos de reparto (9)"
          ParentId="Package"
          Size="226,38"
          Id="0c4350e1-533c-44d1-bfc9-551212e0e626"
          TopLeft="259.073450134771,2365.53301886792">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Cargas de Reparto y Autoventa (10)"
          ParentId="Package"
          Size="178,51"
          Id="808ade22-157c-4d2f-a0ce-7f5d52e6249a"
          TopLeft="256.809299191374,2469.53773584906">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Post-procesos (11)"
          ParentId="Package"
          Size="100,51"
          Id="bf8175de-8cc3-450a-becc-39b5fedc198c"
          TopLeft="324.663746630728,2574.37870619946">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Reindexación y Estadísticas"
          ParentId="Package"
          Size="155,51"
          Id="fb4f9dc6-cc06-4776-a1df-c228aaa777b3"
          TopLeft="260.092318059299,2683.42452830189">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Existe la variable @Reindexar con valores Y (reindexamos y regeneramos estadísticas) y N (no)&#xA;La reindexación y regeneración de estadísticas se recomiendo hacerlo al menos una vez a la semana&#xA;Se puede hacer todas las noches, pero no constantemente ya que afecta al rendimiento de la BD"
          ParentId="Package"
          Size="499,105"
          Id="b91284cb-5fca-4f23-a040-1ff6d6705ef0"
          TopLeft="559.63948787062,2723.2358490566">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Equipos de frío (9)"
          ParentId="Package"
          Size="110,51"
          Id="1937d239-f6b1-46b7-81a9-05f57ca70734"
          TopLeft="687.41307277628,2181.04716981132">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Historico de Pedidos (8)"
          ParentId="Package"
          Size="136,51"
          Id="43f9b13e-597a-45c9-ab37-13bf57e3eae9"
          TopLeft="846.073450134771,1994.66981132075">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Cobros Pendientes (9)"
          ParentId="Package"
          Size="138,51"
          Id="3edf53f0-1105-423d-9d15-193c3a409d0b"
          TopLeft="254.054582210243,2176.82075471698">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="- Es bastante normal que la Deuda pendiente se envíe &#xA;siempre como carga inicial&#xA;- Existe una variable, @CargaDeuda, que indica si la Deuda &#xA;se envía como Carga Inicial (I) o de Mantenimiento (M)&#xA;- El Paso de CI se ejecuta si la Deuda es Carga Inicial "
          ParentId="Package"
          Size="294,102"
          Id="181252f2-e805-4111-b224-3406e263bda3"
          TopLeft="324.997978436657,2252.78301886792">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Carga de Tablas Maestras de Hydra"
          ParentId="Package"
          Size="488,52"
          Id="c4b104d7-4054-40cf-8601-83c1bc6e96fe"
          TopLeft="763.903638814016,7.9528301886794">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="23.25"
              Color="#FF080000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection>
                  <av:TextDecoration
                    Location="Underline" />
                </av:TextDecorationCollection>
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Rutas (6)"
          ParentId="Package"
          Size="105,38"
          Id="c536c42f-3044-40f9-b896-7bb18fa0ab93"
          TopLeft="883.488544474393,1610.51886792453">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Vendedores (2)"
          ParentId="Package"
          Size="113,38"
          Id="77616b83-9958-4de8-ac90-0e3a2c90d623"
          TopLeft="255.564016172506,684.632075471698">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Configuración Organización (1)"
          ParentId="Package"
          Size="226,38"
          Id="193517ab-fea7-4333-a80f-a9e6775a8bc5"
          TopLeft="514.167789757412,502.933962264151">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Existe una variable global, @TipoCarga, que indica si es carga inicial (I) o de mantenimiento (M)"
          ParentId="Package"
          Size="483,37"
          Id="1dd10b75-2fae-4e1f-8ccc-87b1c29b1fd6"
          TopLeft="765.790431266846,56.3301886792453">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Tablas descriptoras (1)"
          ParentId="Package"
          Size="226,38"
          Id="b4ec35e0-c291-43b3-bbe7-415bb304a16b"
          TopLeft="178.696091644205,160.179245283019">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Los pasos básicos en cada proceso son&#xA;&#xA;- INSERT de datos nuevo&#xA;- UPDATE de datos modificados&#xA;- DELETE de datos de baja&#xA;- Quitar DELETE (datos que estaban de baja y los recibimos de nuevo)&#xA;- DELETE Carga Inicial (se borran los datos que no se han recibido)"
          ParentId="Package"
          Size="343,127"
          Id="f57cc703-856a-4445-9120-e50347644406"
          TopLeft="175.714959568733,35.4622641509434">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Las tablas tienen que cargarse en el orden indicado para no tener problemas con la integridad referencial"
          ParentId="Package"
          Size="517,37"
          Id="3ffafabe-c4a4-4bcf-b970-db148b10a464"
          TopLeft="177.714959568733,5.5">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Los paso con NOMBRE_TABLA CI solamente se ejecutan si es una carga inicial"
          ParentId="Package"
          Size="458,37"
          Id="7d0fcc33-e94b-460f-9786-f26f9cf398c9"
          TopLeft="763.790431266846,73.3113207547171">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Direcciones (6)"
          ParentId="Package"
          Size="81,51"
          Id="c06fe20b-d576-4bf5-a4d0-2902b2555a3c"
          TopLeft="530.496630727763,1421.2358490566">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Usuarios (3)"
          ParentId="Package"
          Size="85,51"
          Id="babf7784-2c2c-4f5d-a262-8cde59a68967"
          TopLeft="282.870619946091,858.056603773585">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Almacenes y Camiones (4)"
          ParentId="Package"
          Size="156,51"
          Id="f12d12e3-ac66-4485-961d-d686e69c2073"
          TopLeft="351.337601078167,1034.33018867925">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Cuentas (5)"
          ParentId="Package"
          Size="95,38"
          Id="52025ece-d910-4765-8f7c-fe8254dd4ac1"
          TopLeft="283.229110512129,1226.58018867925">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Existen 3 variables @TipoCarga, @CargaDeuta y @Reindexar que se cargan con las variables&#xA; @TipoCargaT , @CargaDeutaT y @ReindexarT de la DTS ImportLite"
          ParentId="Package"
          Size="477,50"
          Id="1db426cf-f362-48ed-9a2a-7dbd71af00c1"
          TopLeft="765.29986522911,100.556603773585">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="135.773584905661,43.9245283018868"
          Id="Package.EventHandlers[OnError]\Enviar correo error"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>