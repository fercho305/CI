<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/2/2020 10:56:09 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SERGIOW10"
  DTS:CreatorName="TELYNET\Sergio Iñigo"
  DTS:DTSID="{7038F669-AD13-40B5-B70F-3747FDE44D02}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="3082"
  DTS:ObjectName="Portal_Dist"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="199"
  DTS:VersionGUID="{1BC48D74-4C76-47A0-ACA9-4A12DF0843D6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[STDB_Iglesias]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
      DTS:ObjectName="STDB_Iglesias">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=Express-gc01.miami;User ID=RContreras;Initial Catalog=STDB_Iglesias;Provider=SQLNCLI11.1;Auto Translate=False;Application Name=SSIS-Package1-{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}SERGIOW10\SERGIOW10_2016.STDB_Corripio_Prod;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="NthvWAGHpw=="
            IV="2mO2GxvmAt8=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>2mO2GxvmAt92k9IGatzBMwHMWWbxwaaZ+UmNfdnTnej0rAFH3PoZzosWG1Evuq3J+Gp7Fs+WIt/HOtagmQ8K3sFN0hE6ju6vBiD/bk2SCdmkMQHXMhtjrqm50AvAVdtTqARjP+oSAgQJ0TWIf/XhSbnZm+rPMM18VcVEeqFYVj4=</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Cargas"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{571886B6-4A0A-4F1A-BDA3-1FE8F389E84F}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Cargas"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [IMPLT_loads_detail]&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_loads_detail]&#xA;           ([Code]&#xA;           ,[Num_Line] &#xA;           ,[Lot_Group]&#xA;           ,[Code_Product] &#xA;           ,[Date_Load]&#xA;           ,[Quantity]&#xA;           ,[Unit_Type]&#xA;           ,[Code_Warehouse_Sou]&#xA;           ,[Code_Route] , Code_Unit_Org, Code_Sales_Org&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;SELECT DISTINCT RUTA AS Code, &#xA;DetalleHistFacturas.NUM_LINEA AS Num_Line, &#xA;Entrega AS Lot_Group, &#xA;REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') AS Code_Product,&#xA;CONVERT(varchar,GETDATE(),112) AS Date_Load, &#xA;CANT_FACTURADA AS Quantity, &#xA;&#xA;UNIDAD_DE_MEDIDA AS Unit_Type, &#xA;ALMACEN AS Code_Warehouse_Sou, RUTA AS Code_Route,&#xA;'01' AS Code_Unit_Org, &#xA;CASE WHEN left(ruta,1) = 'D' THEN '01'&#xA;END AS Code_Sales_Org,&#xA;'0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;   FROM [CabeceraHistFacturas]&#xA;   INNER JOIN DetalleHistFacturas ON [CabeceraHistFacturas].NUMERO_FACT = DetalleHistFacturas.NUMERO_FACT&#xA;      WHERE FLAG_ENTREGA = 'X'&#xA;&#x9;  GROUP BY [CabeceraHistFacturas].RUTA, CabeceraHistFacturas.ENTREGA, DetalleHistFacturas.NUM_LINEA,&#xA;&#x9;  DetalleHistFacturas.CODIGO_MATERIAL, CabeceraHistFacturas.FECHA_FACTURA, DetalleHistFacturas.CANT_FACTURADA,&#xA;DetalleHistFacturas.UNIDAD_DE_MEDIDA, CabeceraHistFacturas.ALMACEN" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Clientes"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Clientes"
      DTS:DTSID="{FBEAF879-7CAD-4AC5-9B86-5313A017DA19}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clientes"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="-----------------------------------------------------------------------------------------------------------------&#xA;--Primero agregamos los registros de las rutas H, A, M y P&#xA;--Los registros de la ruta D se tratan en un query posterior &#xA;-----------------------------------------------------------------------------------------------------------------&#xA;-- IMPLT_accounts&#xA;&#xA;TRUNCATE TABLE IMPLT_accounts&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_accounts (Code_ofClient, Name1, Name2, NIF, Code_Country, ZIP, Address1, Address2, Code_Province, &#xA;Province, Population, Phone1, Phone2, Fax, E_mail, Code_Type, Code_Potential, Code_Status, Code_Agrupation1, &#xA;                         Code_Agrupation2, Code_Agrupation3, Code_ClassificationA, Code_ClassificationB, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Code_ClassificationC, Code_ClassificationD, Code_Price_List, Latitude, Length, Code_Currency, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Prospect, Code_Warehouse, &#xA;                         Code_Payment_Term, Gen_Account, Tax_type, Tax_type2, Contact_name, Owner, Code_Seller, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT &#xA;                         Codigo_Cliente AS Code_ofClient, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; max(left(Nombre,75)) AS Name1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Name2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(RNC_Cedula,30) AS NIF, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'RD' AS Code_Country, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS ZIP, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; LEFT(Direccion, 75) AS Address1, &#xA;                         CASE WHEN len(Direccion) &gt; 75 AND len(Direccion) &lt; 150 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    THEN RIGHT(Direccion, len(Direccion) - 75) ELSE NULL END AS Address2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Province, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Province, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; LEFT(Poblacion, 50) AS Population, &#xA;                         left(Numero_Telefono,30) AS Phone1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(Numero_Telefono, 30) AS Phone2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Fax, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS E_mail, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '02' AS Code_Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Potential, '1' AS Code_Status, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Zona AS Code_Agrupation1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Agrupation2, NULL AS Code_Agrupation3, Grupo_Cliente AS Code_ClassificationA, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Territorio AS Code_ClassificationB, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Ramo AS Code_ClassificationC, NULL AS Code_ClassificationD, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Price_List, NULL AS Latitude, NULL AS Length, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'PE' AS Code_Currency, '0' AS Prospect, NULL AS Code_Warehouse, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Cond_Pago AS Code_Payment_Term, '0' AS Gen_Account, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '1' AS Tax_type, NULL AS Tax_type2, LEFT(Contacto, 75) AS Contact_name, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Owner, NULL as Code_Seller, '0' AS Source_Create, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes&#xA;WHERE        (Codigo_Cliente IS NOT NULL) --AND CODIGO_CLIENTE = '0005674423'&#xA;AND left(Ruta,1) = 'M' &#xA;GROUP BY Codigo_Cliente, Clientes.RNC_CEDULA, Clientes.DIRECCION, Clientes.POBLACION, Clientes.NUMERO_TELEFONO,&#xA;Clientes.GRUPO_CLIENTE, Clientes.RAMO, Clientes.CONTACTO, Clientes.CODIGO_ZONA, Clientes.TERRITORIO, Clientes.CODIGO_COND_PAGO&#xA;&#xA;UNION&#xA;&#xA;SELECT DISTINCT &#xA;                         Codigo_Cliente AS Code_ofClient, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(Nombre,75) AS Name1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Name2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(RNC_Cedula,30) AS NIF, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'RD' AS Code_Country, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS ZIP, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; LEFT(Direccion, 75) AS Address1, &#xA;                         CASE WHEN len(Direccion) &gt; 75 AND len(Direccion) &lt; 150 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    THEN RIGHT(Direccion, len(Direccion) - 75) ELSE NULL END AS Address2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Province, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Province, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; LEFT(Poblacion, 50) AS Population, &#xA;                         left(Numero_Telefono,30) AS Phone1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(Numero_Telefono, 30) AS Phone2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Fax, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS E_mail, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '02' AS Code_Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Potential, '1' AS Code_Status, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Zona AS Code_Agrupation1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Agrupation2, NULL AS Code_Agrupation3, Grupo_Cliente AS Code_ClassificationA, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Territorio AS Code_ClassificationB, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Ramo AS Code_ClassificationC, NULL AS Code_ClassificationD, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Price_List, NULL AS Latitude, NULL AS Length, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'PE' AS Code_Currency, '0' AS Prospect, NULL AS Code_Warehouse, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Cond_Pago AS Code_Payment_Term, '0' AS Gen_Account, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '1' AS Tax_type, NULL AS Tax_type2, LEFT(Contacto, 75) AS Contact_name, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Owner, NULL as Code_Seller, '0' AS Source_Create, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes&#xA;WHERE        (Codigo_Cliente IS NOT NULL) AND left(Ruta,1) = 'H'&#xA;&#xA;UNION&#xA;&#xA;SELECT DISTINCT &#xA;                         Codigo_Cliente AS Code_ofClient, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(Nombre,75) AS Name1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Name2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(RNC_Cedula,30) AS NIF, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'RD' AS Code_Country, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS ZIP, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; LEFT(Direccion, 75) AS Address1, &#xA;                         CASE WHEN len(Direccion) &gt; 75 AND len(Direccion) &lt; 150 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    THEN RIGHT(Direccion, len(Direccion) - 75) ELSE NULL END AS Address2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Province, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Province, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; LEFT(Poblacion, 50) AS Population, &#xA;                         left(Numero_Telefono,30) AS Phone1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(Numero_Telefono, 30) AS Phone2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Fax, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS E_mail, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '02' AS Code_Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Potential, '1' AS Code_Status, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Zona AS Code_Agrupation1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Agrupation2, NULL AS Code_Agrupation3, Grupo_Cliente AS Code_ClassificationA, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Territorio AS Code_ClassificationB, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Ramo AS Code_ClassificationC, NULL AS Code_ClassificationD, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Price_List, NULL AS Latitude, NULL AS Length, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'PE' AS Code_Currency, '0' AS Prospect, NULL AS Code_Warehouse, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Cond_Pago AS Code_Payment_Term, '0' AS Gen_Account, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '1' AS Tax_type, NULL AS Tax_type2, LEFT(Contacto, 75) AS Contact_name, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Owner, NULL as Code_Seller, '0' AS Source_Create, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes&#xA;WHERE        (Codigo_Cliente IS NOT NULL) AND left(Ruta,1) = 'A'&#xA;&#xA;UNION&#xA;&#xA;SELECT DISTINCT &#xA;                         Codigo_Cliente AS Code_ofClient, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(Nombre,75) AS Name1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Name2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(RNC_Cedula,30) AS NIF, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'RD' AS Code_Country, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS ZIP, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; LEFT(Direccion, 75) AS Address1, &#xA;                         CASE WHEN len(Direccion) &gt; 75 AND len(Direccion) &lt; 150 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    THEN RIGHT(Direccion, len(Direccion) - 75) ELSE NULL END AS Address2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Province, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Province, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; LEFT(Poblacion, 50) AS Population, &#xA;                         left(Numero_Telefono,30) AS Phone1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(Numero_Telefono, 30) AS Phone2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Fax, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS E_mail, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '02' AS Code_Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Potential, '1' AS Code_Status, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Zona AS Code_Agrupation1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Agrupation2, NULL AS Code_Agrupation3, Grupo_Cliente AS Code_ClassificationA, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Territorio AS Code_ClassificationB, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Ramo AS Code_ClassificationC, NULL AS Code_ClassificationD, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Price_List, NULL AS Latitude, NULL AS Length, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'PE' AS Code_Currency, '0' AS Prospect, NULL AS Code_Warehouse, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Cond_Pago AS Code_Payment_Term, '0' AS Gen_Account, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '1' AS Tax_type, NULL AS Tax_type2, LEFT(Contacto, 75) AS Contact_name, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Owner, NULL as Code_Seller, '0' AS Source_Create, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes&#xA;WHERE        (Codigo_Cliente IS NOT NULL) AND left(Ruta,1) = 'P'&#xA;&#xA;-------------------------------------------------------------------------------------------------------------------&#xA;--Agregamos registros problemáticos ruta D&#xA;-------------------------------------------------------------------------------------------------------------------&#xA;INSERT INTO IMPLT_accounts (Code_ofClient, Name1, Name2, NIF, Code_Country, ZIP, Address1, Address2, Code_Province, &#xA;Province, Population, Phone1, Phone2, Fax, E_mail, Code_Type, Code_Potential, Code_Status, Code_Agrupation1, &#xA;                         Code_Agrupation2, Code_Agrupation3, Code_ClassificationA, Code_ClassificationB, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Code_ClassificationC, Code_ClassificationD, Code_Price_List, Latitude, Length, Code_Currency, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Prospect, Code_Warehouse, &#xA;                         Code_Payment_Term, Gen_Account, Tax_type, Tax_type2, Contact_name, Owner, Code_Seller, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Source_Create, Transfer_status, Status_SAP)&#xA;&#xA;SELECT DISTINCT &#xA;                         Codigo_Cliente AS Code_ofClient, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(Nombre,75) AS Name1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Name2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(RNC_Cedula,30) AS NIF, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'RD' AS Code_Country, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS ZIP, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; LEFT(Direccion, 75) AS Address1, &#xA;                         CASE WHEN len(Direccion) &gt; 75 AND len(Direccion) &lt; 150 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    THEN RIGHT(Direccion, len(Direccion) - 75) ELSE NULL END AS Address2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Province, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Province, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; LEFT(Poblacion, 50) AS Population, &#xA;                         left(Numero_Telefono,30) AS Phone1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; left(Numero_Telefono, 30) AS Phone2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Fax, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS E_mail, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '02' AS Code_Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Potential, '1' AS Code_Status, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Zona AS Code_Agrupation1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Agrupation2, NULL AS Code_Agrupation3, Grupo_Cliente AS Code_ClassificationA, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Territorio AS Code_ClassificationB, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Ramo AS Code_ClassificationC, NULL AS Code_ClassificationD, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Code_Price_List, NULL AS Latitude, NULL AS Length, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'PE' AS Code_Currency, '0' AS Prospect, NULL AS Code_Warehouse, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Cond_Pago AS Code_Payment_Term, '0' AS Gen_Account, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '1' AS Tax_type, NULL AS Tax_type2, LEFT(Contacto, 75) AS Contact_name, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Owner, NULL as Code_Seller, '0' AS Source_Create, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes&#xA;WHERE        (Codigo_Cliente IS NOT NULL) AND left(Ruta,1) = 'D'&#xA;AND NOT EXISTS ( SELECT Code_ofClient FROM IMPLT_accounts WHERE &#xA;IMPLT_accounts.Code_ofClient = Clientes.CODIGO_CLIENTE)&#xA;------------------------------------------------------------------------------------------------------------------&#xA;-- IMPLT_accounts_array&#xA;&#xA;TRUNCATE TABLE IMPLT_accounts_array&#xA;GO&#xA;&#xA;&#xA;INSERT INTO IMPLT_accounts_array (Code, Type, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT '01' as Code, 2 as Type, 'Aplica promoción' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT '02' as Code, 2 as Type, 'No Aplica promoción' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT '1' as Code, 19 as Type, 'Por defecto' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT 'CF' as Code, 32 as Type, 'Consumidor Final' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT 'RD' as Code, 50 as Type, 'REPÚBLICA DOMINICANA' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT '1' as Code, 53 as Type, 'Lista precios 1' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT '2' as Code, 53 as Type, 'Lista precios 2' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT '3' as Code, 53 as Type, 'Lista precios 3' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT '4' as Code, 53 as Type, 'Lista precios 4' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT '5' as Code, 53 as Type, 'Lista precios 5' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT '6' as Code, 53 as Type, 'Lista precios 6' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT 'RD' as Code, 54 as Type, 'Peso Dominicano' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT 'DL' as Code, 54 as Type, 'Dólar Americano' as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;UNION&#xA;SELECT GRUPO_CLIENTE as Code, 1 as Type, Descripcion as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM GrupoCliente&#xA;UNION&#xA;SELECT TERRITORIO as Code, 2 as Type, Descripcion as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM Territorios&#xA;UNION&#xA;SELECT Ramo as Code, 3 as Type, Descripcion as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM Ramos&#xA;UNION&#xA;SELECT CLASE_DOCUMENTO as Code, 60 as Type, Descripcion as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM Clases_Documentos&#xA;UNION&#xA;SELECT MOTIVO as Code, 60 as Type, Descripcion as Description, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM Motivos_Devolucion&#xA;GO&#xA;----------------------------------------------------------------------------------------------------------------------&#xA;--Igualmente las rutas D, se tratan distinto&#xA;----------------------------------------------------------------------------------------------------------------------&#xA;-- IMPLT_accounts_org&#xA;&#xA;TRUNCATE TABLE IMPLT_accounts_org&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_accounts_org (Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Status, Code_Payment, &#xA;Code_Price_list, Code_Plant, Code_Currency, Price_Schema, Code_Segment, Code_Payment_method, &#xA;Source_Create, &#xA;                         Transfer_status, Status_SAP)&#xA;SELECT DISTINCT      &#xA;Codigo_Cliente as   Code_Account, &#xA;'01' as Code_Unit_Org, &#xA;Grupo_Cliente as Code_Sales_Org, &#xA;'1' as Code_Status, &#xA;Codigo_Cond_Pago as  Code_Payment, &#xA;--IMPLT_W_Collecting_type.code AS Code_Payment,&#xA;NULL as Code_Price_list, &#xA;NULL as Code_Plant, &#xA;'PE' as Code_Currency, &#xA;'1' as Price_Schema,  '1' as Code_Segment, &#xA;NULL as Code_Payment_method, --Tipo_Precio_Us as Code_Price_list2, &#xA;'0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes --CROSS JOIN IMPLT_W_Collecting_type&#xA;WHERE        (Codigo_Cliente IS NOT NULL) AND left(Ruta,1) IN ('A','H','M','P')&#xA;&#xA;INSERT INTO IMPLT_accounts_org (Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Status, Code_Payment, &#xA;Code_Price_list, Code_Plant, Code_Currency, Price_Schema, Code_Segment, Code_Payment_method, &#xA;Source_Create, &#xA;                         Transfer_status, Status_SAP)&#xA;&#xA;SELECT DISTINCT      &#xA;Codigo_Cliente as   Code_Account, &#xA;'01' as Code_Unit_Org, &#xA;Grupo_Cliente as Code_Sales_Org, &#xA;'1' as Code_Status, &#xA;Codigo_Cond_Pago as  Code_Payment, &#xA;--IMPLT_W_Collecting_type.code AS Code_Payment,&#xA;NULL as Code_Price_list, &#xA;NULL as Code_Plant, &#xA;'PE' as Code_Currency, &#xA;'1' as Price_Schema,  '1' as Code_Segment, &#xA;NULL as Code_Payment_method, --Tipo_Precio_Us as Code_Price_list2, &#xA;'0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes --CROSS JOIN IMPLT_W_Collecting_type&#xA;WHERE        (Codigo_Cliente IS NOT NULL) AND left(Ruta,1) = 'D'&#xA;AND NOT EXISTS ( SELECT Code_account FROM IMPLT_accounts_org WHERE &#xA;IMPLT_accounts_org.Code_account = Clientes.CODIGO_CLIENTE)&#xA;&#xA;----------------------------------------------------------------------------------------------------------------------&#xA;----------------------------------------------------------------------------------------------------------------------&#xA;&#xA;-- IMPLT_accounts_organ_credit&#xA;&#xA;TRUNCATE TABLE IMPLT_accounts_organ_credit&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_accounts_organ_credit (Code_Account, Code_Unit_Org, Code_Sales_Org, Credit_Limit, &#xA;Credit_Consum, Lock_Credit, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     DISTINCT   Codigo_Cliente AS Code_Account, &#xA;'01' AS Code_Unit_Org, &#xA;Grupo_Cliente AS Code_Sales_Org, &#xA;isnull(Limite_Credito,0.00) AS Credit_Limit, &#xA;isnull(max(Limite_Credito - Saldo_Credito),0.00) AS Credit_Consum, &#xA;'0' AS Lock_Credit, &#xA;'0' AS Source_Create, 1 AS Transfer_status, &#xA;NULL AS Status_SAP&#xA;FROM            Clientes&#xA;WHERE        (Codigo_Cliente IS NOT NULL) AND left(Ruta,1) IN ('A','H','M','P')&#xA;GROUP BY Codigo_Cliente, Grupo_Cliente, Limite_Credito&#xA;&#xA;INSERT INTO IMPLT_accounts_organ_credit (Code_Account, Code_Unit_Org, Code_Sales_Org, Credit_Limit, &#xA;Credit_Consum, Lock_Credit, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     DISTINCT   Codigo_Cliente AS Code_Account, &#xA;'01' AS Code_Unit_Org, &#xA;Grupo_Cliente AS Code_Sales_Org, &#xA;isnull(Limite_Credito,0.00) AS Credit_Limit, &#xA;isnull(max(Limite_Credito - Saldo_Credito),0.00) AS Credit_Consum, &#xA;'0' AS Lock_Credit, '0' AS Source_Create, 1 AS Transfer_status, NULL &#xA;                         AS Status_SAP&#xA;FROM            Clientes&#xA;WHERE  (Codigo_Cliente IS NOT NULL) AND left(Ruta,1) = ('D')&#xA;AND NOT EXISTS ( SELECT Code_account FROM IMPLT_accounts_organ_credit WHERE &#xA;IMPLT_accounts_organ_credit.Code_account = Clientes.CODIGO_CLIENTE)&#xA;GROUP BY Clientes.CODIGO_CLIENTE, Clientes.GRUPO_CLIENTE, Clientes.LIMITE_CREDITO&#xA;&#xA;-- IMPLT_accounts_organization&#xA;&#xA;TRUNCATE TABLE IMPLT_accounts_organization&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_accounts_organization (Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;Code_Seller, Code_Status, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT      Codigo_Cliente as   Code_Account, '01' as Code_Unit_Org, &#xA;Grupo_Cliente as Code_Sales_Org, '9999' as Code_Seller, '1' as Code_Status, &#xA;'0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes&#xA;WHERE        (Codigo_Cliente IS NOT NULL) &#xA;GO&#xA;&#xA;-- IMPLT_addresses&#xA;&#xA;TRUNCATE TABLE IMPLT_addresses&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_addresses (Code_ofClient, Code_account, Code_Country, Address1, Address2, Population, &#xA; Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT &#xA;                         Codigo_Cliente AS Code_ofClient, Codigo_Cliente AS Code_account,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 'RD' AS Code_Country, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  LEFT(Direccion, 75) AS Address1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; CASE WHEN len(Direccion) &gt; 75 AND len(Direccion) &#xA;                         &lt; 150 THEN RIGHT(Direccion, len(Direccion) - 75) END AS Address2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Population, &#xA;                         '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes&#xA;where Codigo_Cliente in (select Codigo_Cliente from Clientes where (Codigo_Cliente IS NOT NULL))&#xA;AND left(Clientes.Ruta,1) = 'D'&#xA;GO&#xA;&#xA;-- IMPLT_addresses_accounts&#xA;&#xA;TRUNCATE TABLE IMPLT_addresses_accounts&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_addresses_accounts(Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Account, By_Default, &#xA;Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT &#xA;Codigo_Cliente  AS Code_Address, &#xA;'01' AS Code_Unit_Org, &#xA;Grupo_Cliente AS Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Codigo_Cliente AS Code_Account, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '1' AS By_Default, '0' AS Source_Create, &#xA;                         1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes &#xA;WHERE        (Clientes.Codigo_Cliente IS NOT NULL) &#xA;GO&#xA;&#xA;&#xA;-- IMPLT_addresses_org&#xA;&#xA;TRUNCATE TABLE IMPLT_addresses_org&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_addresses_org  (Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Status, Source_Create, &#xA;Transfer_status, Status_SAP)&#xA;SELECT DISTINCT &#xA;Codigo_Cliente  AS Code_Address, &#xA;'01' AS Code_Unit_Org, &#xA;Grupo_Cliente AS Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '1' AS Code_Status, '0' AS Source_Create, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes &#xA;WHERE        (Clientes.Codigo_Cliente IS NOT NULL) &#xA;GO&#xA;&#xA;&#xA;-- IMPLT_addresses_organization&#xA;&#xA;TRUNCATE TABLE IMPLT_addresses_organization&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_addresses_organization (Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Status, &#xA;Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT &#xA;Codigo_Cliente   AS Code_Address, &#xA;'01' AS Code_Unit_Org, &#xA; Grupo_Cliente AS Code_Sales_Org, '9999' as Code_Seller, &#xA; '1' AS Code_Status, '0' AS Source_Create, 1 AS Transfer_status, NULL AS Status_SAP&#xA;FROM            Clientes &#xA;WHERE        (Clientes.Codigo_Cliente IS NOT NULL) &#xA;GO&#xA;&#xA;&#xA;-- IMPLT_payment_org_terms&#xA;&#xA;TRUNCATE TABLE IMPLT_payment_terms&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_payment_terms(Code, Code_Unit_Org, Description, &#xA;Days, Credit, Days_EP, Discount, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT  DISTINCT   &#xA;Condicion as Code, &#xA;'01' as Code_Unit_Org, &#xA;left(Descripcion,50) as Description,  &#xA;case when Condicion = 'N120' then 120 else right(Condicion,2) end  as Days, &#xA;--case when left(Condicion,2) = 'NT' then '0' else '1' end as Credit, &#xA;case when Condicion = 'NT00' then '0' else '1' end as Credit, &#xA;'0' as Days_EP, &#xA;'0' as Discount,  &#xA; '0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;FROM            CondicionesDePago&#xA;&#xA;GO&#xA;&#xA;------------CLIENTES SEGUNDO BLOQUE&#xA;--IMPLT_accounts_function&#xA;TRUNCATE TABLE [dbo].[IMPLT_accounts_function]&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_accounts_function]&#xA;           ([Code_Account]&#xA;           ,[Code_Unit_Org]&#xA;           ,[Code_Sales_Org]&#xA;           ,[Code_Function]&#xA;           ,[Code_Type_Function]&#xA;           ,[By_Default]&#xA;           ,[Notes]&#xA;           ,[Specialties]&#xA;           ,[Sub_Specialties]&#xA;           ,[Additional]&#xA;           ,[Is_Plus]&#xA;           ,[Phone1]&#xA;           ,[Phone2]&#xA;           ,[E_mail]&#xA;           ,[Code_Frecuency]&#xA;           ,[Code_Week1]&#xA;           ,[Visit_Mon1]&#xA;           ,[Visit_Tue1]&#xA;           ,[Visit_Wen1]&#xA;           ,[Visit_Thu1]&#xA;           ,[Visit_Fri1]&#xA;           ,[Visit_Sat1]&#xA;           ,[Visit_Sun1]&#xA;           ,[Code_Week2]&#xA;           ,[Visit_Mon2]&#xA;           ,[Visit_Tue2]&#xA;           ,[Visit_Wen2]&#xA;           ,[Visit_Thu2]&#xA;           ,[Visit_Fri2]&#xA;           ,[Visit_Sat2]&#xA;           ,[Visit_Sun2]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;SELECT Codigo_Cliente AS [Code_Account]&#xA;      ,'01' AS [Code_Unit_Org]&#xA;      ,Grupo_Cliente AS [Code_Sales_Org]&#xA;      ,Codigo_Cliente AS [Code_Function]&#xA;      ,'RG' AS [Code_Type_Function]&#xA;      ,'1' AS [By_Default]&#xA;      ,NULL AS [Notes]&#xA;      ,NULL AS [Specialties]&#xA;      ,NULL AS [Sub_Specialties]&#xA;      ,NULL AS [Additional]&#xA;      ,NULL AS [Is_Plus]&#xA;      ,NULL AS [Phone1]&#xA;      ,NULL AS [Phone2]&#xA;      ,NULL AS [E_mail]&#xA;      ,NULL AS [Code_Frecuency]&#xA;      ,NULL AS [Code_Week1]&#xA;      ,NULL AS [Visit_Mon1]&#xA;      ,NULL AS [Visit_Tue1]&#xA;      ,NULL AS [Visit_Wen1]&#xA;      ,NULL AS [Visit_Thu1]&#xA;      ,NULL AS [Visit_Fri1]&#xA;      ,NULL AS [Visit_Sat1]&#xA;      ,NULL AS [Visit_Sun1]&#xA;      ,NULL AS [Code_Week2]&#xA;      ,NULL AS [Visit_Mon2]&#xA;      ,NULL AS [Visit_Tue2]&#xA;      ,NULL AS [Visit_Wen2]&#xA;      ,NULL AS [Visit_Thu2]&#xA;      ,NULL AS [Visit_Fri2]&#xA;      ,NULL AS [Visit_Sat2]&#xA;      ,NULL AS [Visit_Sun2]&#xA;      ,'0' AS Source_Create, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 1 AS Transfer_status, NULL AS Status_SAP&#xA;  FROM Clientes&#xA;&#xA;&#xA;&#xA;---------------------------------------&#xA;--IMPLT_accounts_agrupation1&#xA;TRUNCATE TABLE IMPLT_accounts_agrupation1&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_accounts_agrupation1]&#xA;           ([Code]&#xA;           ,[Description]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;SELECT Zona AS [Code]&#xA;           ,Descripcion AS [Description]&#xA;           ,'0' AS Source_Create, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; 1 AS Transfer_status, NULL AS Status_SAP&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; FROM Zonas&#xA;--&#xA;--&#xA;--IMPLT_payment_accounts&#xA;&#xA;TRUNCATE TABLE [IMPLT_payment_accounts]&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_payment_accounts]&#xA;           ([Code_Account]&#xA;           ,[Code_Unit_Org]&#xA;           ,[Code_Sales_Org]&#xA;           ,[Code_Payment]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;    SELECT DISTINCT&#xA;&#x9;Clientes.Codigo_Cliente AS Code_Account,&#xA;&#x9;'01' AS Code_Unit_Org,&#xA;&#x9;Grupo_Cliente AS Code_Sales_Org,&#xA;&#x9;Codigo_Cond_Pago AS Code_Payment,&#xA;&#x9; '0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;&#x9; FROM Clientes&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Cobros"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Cobros"
      DTS:DTSID="{23C172BD-DD84-47DC-8EC6-8A38C63A4D9E}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Cobros"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="--  IMPLT_collections_pending&#xA;&#xA;Truncate table  IMPLT_collections_pending&#xA;GO&#xA;&#xA;INSERT INTO  IMPLT_collections_pending (Num_Invoice, NumDocum, Date_Doc, Code_Account, Code_Type, &#xA;Total_Amount, &#xA;Total_Collected, Date_End, Code_Payment, Amount_Gross,  Source_Create, &#xA;                         Transfer_status, Status_SAP)&#xA;SELECT  DISTINCT  NUMERO_DOC AS Num_Invoice, &#xA;Numero_Doc + '-' + cast(ROW_NUMBER() OVER (partition by Numero_Doc order by Numero_Doc) as varchar(8)) AS NumDocum, &#xA;CONVERT(char(8), FECHA_DOC, 112) AS Date_Doc,  &#xA;                        Codigo_Cliente AS Code_Account,  &#xA;Codigo_Tipo_Doc AS Code_Type, &#xA;MONTO_DOC AS Total_Amount, &#xA;SALDO AS Total_Collected,&#xA;                         convert(char(8),Fecha_vence, 112) AS Date_End, &#xA;CONDICION_PAGO AS Code_Payment, &#xA;cast(MONTO_DOC - (MONTO_DOC*18/100) AS DECIMAL (11,3)) AS Amount_Gross,&#xA; '0' as Source_Create, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '1' AS transfer_status, NULL as status_SAP&#xA;FROM            FacturasPorCobrar &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Fiscal"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{8547925B-ED28-4A8E-99A5-4A51ADD6D703}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Fiscal"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE IMPLT_users_fiscal&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_users_fiscal]&#xA;           ([Code_Seller]&#xA;           ,[Type]&#xA;           ,[Code_Unit_Org]&#xA;           ,[Code_Sales_Org]&#xA;           ,[Counter_Ini]&#xA;           ,[Counter_Fin]&#xA;           ,[N_Counter]&#xA;           ,[Base]&#xA;           ,[Date_Ini]&#xA;           ,[Date_End]&#xA;           ,[Internal_Request]&#xA;           ,[Sub_Number]&#xA;           ,[Code_Route])&#xA;SELECT COMPANIA + AGENTE AS Code_Seller, TIPO_DOCUMENTO_NCF AS Type,&#xA;          COMPANIA AS Code_Unit_Org,&#xA;           Compania + DIVISION AS Code_Sales_Org,&#xA;           Secuencia_Desde AS Counter_Ini,&#xA;           Secuencia_Hasta AS Counter_Fin,&#xA;           Secuencia AS N_Counter,&#xA;           Serie + TIPO_DOCUMENTO_NCF AS Base,&#xA;           convert(char(8),Fecha_desde, 112) AS Date_Ini,&#xA;           convert(char(8),Fecha_hasta, 112) AS Date_End,&#xA;           Numero_Confirmacion AS Internal_Request,&#xA;           SUB_NUMBER AS Sub_Number,&#xA;          Compania + RUTA  AS Code_Route&#xA;           FROM Secuencia_NCF_Vendedor&#xA;WHERE DIVISION IN ('026','036','037','038')&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Grupos de articulos"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Grupos de articulos"
      DTS:Disabled="True"
      DTS:DTSID="{723E96EE-07EC-4031-9832-7E8CBBB6FFF2}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Grupos de articulos"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="--IMPLT_products_assor&#xA;&#xA;TRUNCATE TABLE IMPLT_products_assor&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_products_assor (Code_Assort, Code_Unit_Org, Code_Sales_Org, Description, Date_Ini, Date_End, Active, Code_Schedule, Code_Sucursal, Code_Group, Warehouse_C, Order_Split, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT  DISTINCT  Compania + Division + Codigo_planilla + Codigo_Grupo  as Code_Assort, Compania as Code_Unit_Org, Compania + Division as Code_Sales_Org, left(Descripcion,50) as Description, '20200101' as Date_Ini, '20990101' as Date_End, '1' as Active,&#xA;Compania + Codigo_planilla as Code_Schedule, Compania + Division + Sucursal as Code_Sucursal, Compania + Division + Codigo_planilla + Codigo_Grupo as Code_Group, Compania + Almacen as Warehouse_C, case when Pedido_Separado = 'X' then '1' else '0' end Order_Split, '0' as Source_Create, '1' AS transfer_status, NULL as status_SAP&#xA;FROM     Grupo_Articulos&#xA;WHERE Division IN ('026','036','037','038')&#xA;GO&#xA;&#xA;&#xA;-- IMPLT_products_assor_account&#xA;&#xA;TRUNCATE TABLE IMPLT_products_assor_account&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_products_assor_account (Code_Assort, Code_Account, Code_Unit_Org, Code_Sales_Org, Date_Ini, Date_End, Active, Code_Schedule, Code_Sucusal, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT &#xA;                         IMPLT_products_assor.Code_Assort, IMPLT_accounts_org.Code_Account, IMPLT_products_assor.Code_Unit_Org, IMPLT_products_assor.Code_Sales_Org, IMPLT_products_assor.Date_Ini, IMPLT_products_assor.Date_End, &#xA;                         IMPLT_products_assor.Active, IMPLT_products_assor.Code_Schedule, IMPLT_products_assor.Code_Sucursal, IMPLT_products_assor.Source_Create, IMPLT_products_assor.Transfer_status, &#xA;                         IMPLT_products_assor.Status_SAP&#xA;FROM            IMPLT_accounts_org INNER JOIN&#xA;                         IMPLT_products_assor ON IMPLT_accounts_org.Code_Unit_Org = IMPLT_products_assor.Code_Unit_Org AND IMPLT_accounts_org.Code_Sales_Org = IMPLT_products_assor.Code_Sales_Org AND &#xA;                         IMPLT_accounts_org.Code_Planilla = IMPLT_products_assor.Code_Schedule&#xA;GO&#xA;&#xA;&#xA;&#xA;-- IMPLT_products_assort_det&#xA;&#xA;-- Articulo problematico que al quitar/ nos queda igual que uno que ya existe&#xA;Update Grupos_Articulos_Detail set articulo = '_' + Articulo where articulo = 'TURHN1/2X20'&#xA;go&#xA;&#xA;TRUNCATE TABLE IMPLT_products_assort_det&#xA;GO&#xA;&#xA;INSERT INTO  IMPLT_products_assort_det (Code_Assort, Code_Product, Code_Unit_Org, Code_Sales_Org, Orden, Excluded, Code_Schedule, Code_Sucursal, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT Compania + Division + Codigo_planilla + Codigo_grupo AS Code_Assort, REPLACE(Compania + Articulo, '/', '') AS Code_Product, Compania as Code_Unit_Org, Compania + Division as Code_Sales_Org,&#xA;&#x9;&#x9;&#x9;min(Secuencia) AS Orden, '0' as Excluded, Compania + Codigo_planilla as Code_Schedule, Compania + Division + Sucursal as Code_Sucursal, '0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;FROM        Grupos_Articulos_Detail &#xA;where Division IN ('026','036','037','038')&#xA;GROUP BY Compania, Division, Codigo_planilla, Codigo_grupo, Articulo, Codigo_planilla, Sucursal&#xA;GO  " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Organizacion"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Organizacion"
      DTS:DTSID="{8C0C5CD3-25AC-4634-8580-61298257DA64}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Organizacion"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="-- IMPLT_unit_organization&#xA;&#xA;TRUNCATE TABLE IMPLT_unit_organization&#xA;GO&#xA;&#xA;INSERT INTO   IMPLT_unit_organization (Code_Unit_Org, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT '01' as Code_Unit_Org, 'Cesar Iglesias' as Description, &#xA;'0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;GO  &#xA;&#xA;&#xA;&#xA;-- IMPLT_sales_organization&#xA;&#xA;TRUNCATE TABLE IMPLT_sales_organization&#xA;GO&#xA;&#xA;INSERT INTO   IMPLT_sales_organization (Code_Sales_Org, Description,  Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT '01' as Code_Sales_Org, 'Preventa' as Description, &#xA;'0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;UNION&#xA;SELECT DISTINCT '02' as Code_Sales_Org, 'Mayorista' as Description, &#xA;'0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;UNION&#xA;SELECT DISTINCT '03' as Code_Sales_Org, 'Panaderías' as Description, &#xA;'0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;UNION&#xA;SELECT DISTINCT '04' as Code_Sales_Org, 'Autoservicios-Cadena' as Description, &#xA;'0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;UNION&#xA;SELECT DISTINCT '08' as Code_Sales_Org, 'Autoservicios-SMI' as Description, &#xA;'0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;UNION&#xA;SELECT DISTINCT '09' as Code_Sales_Org, 'Mayoristas Frontera' as Description, &#xA;'0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;UNION&#xA;SELECT DISTINCT '10' as Code_Sales_Org, 'HORECA' as Description, &#xA;'0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;UNION&#xA;SELECT DISTINCT '97' as Code_Sales_Org, 'Ranchero (Preventa)' as Description, &#xA;'0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;UNION&#xA;SELECT DISTINCT '99' as Code_Sales_Org, '99' as Description, &#xA;'0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;GO  &#xA;GO  &#xA;&#xA;&#xA;&#xA;-- IMPLT_unit_sales_organization&#xA;&#xA;-- IMPLT_document_type&#xA;&#xA;TRUNCATE TABLE IMPLT_document_type&#xA;GO&#xA;&#xA;INSERT INTO   IMPLT_document_type (Code_Unit_Org, Code_Sales_Org, Code_Sucursal,  Document_ID, Type,&#xA;Warehouse_C, Order_Type, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT '01' as Code_Unit_Org, IMPLT_sales_organization.Code_Sales_Org as Code_Sales_Org, &#xA;NULL as Sucursal, Clase_Documento as Document_ID, NULL as Warehouse, &#xA;NULL as Type, &#xA;case when Clase_Documento = 'ZA' then 'ZDEV' &#xA;else 'ZOR' end as Order_Type, &#xA;'0' AS Source_Create, &#xA;'1' AS transfer_status, NULL AS status_SAP&#xA;FROM        Clases_Documentos CROSS JOIN IMPLT_sales_organization &#xA;WHERE Clase_Documento IN ('ZA','ZB','ZG','ZH','ZK','ZL') AND Clase_Documento IS NOT NULL&#xA;GO  &#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Pedidos"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C2C9F7A6-1707-476D-B2B6-3431A2DB1EEB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Pedidos"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [IMPLT_orders]&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_orders]&#xA;           ([Order_Num], [Num_Line], [Order_Num_ofClient], [Type_Rec], Code_load,&#xA;&#x9;&#x9;   [Date_Delivery],&#xA;           [Order_Date], [Code_Account], [Code_Product], [Lot_Number], [Quantity],&#xA;           [Quantity_Order], [Unit_Measure], [Price_Br], [Price], [Total_Amount],&#xA;           [Por_Discount1], [Amount_Discount1], [Por_Discount2], [Amount_Discount2],&#xA;           [Por_Discount3], [Amount_Discount3], [Por_Tax1], [Amount_Tax1], [Por_Tax2],&#xA;           [Amount_Tax2], [Code_Currency], Secuence, [Order_Num_Cli], [Code_Paymentway], [Code_Seller],&#xA;&#x9;&#x9;   [Code_Seller_Del],&#xA;           [Order_Type], [Sale_Type], [Code_ReturnCause], Code_Address, Code_Agrupation1,&#xA;&#x9;&#x9;   NCF, Code_Warehouse,&#xA;To_Delivery,&#xA;Order_Num_Linkend,&#xA;Code_Route,&#xA;Total_Amount_Inv,&#xA;Total_Discount_Inv,&#xA;Total_Tax_Inv,&#xA;&#x9;&#x9;  &#xA;           [Source_Create], [Transfer_status], [Status_SAP])&#xA;SELECT DISTINCT&#xA;CabeceraHistFacturas.NUMERO_FACT AS Order_Num, NUM_LINEA AS Num_Line, &#xA;NUMERO_PEDIDO AS  Order_Num_ofClient,&#xA;CASE WHEN CANT_FACTURADA = 0 THEN 'R' ELSE 'S' END AS Type_Rec, &#xA;Entrega AS Code_load,&#xA;replace(dateadd(day,1,(convert(date,FECHA_FACTURA, 112))),'-','') AS Date_Delivery,&#xA;convert(char(8),FECHA_FACTURA, 112) AS Order_Date, &#xA;CODIGO_CLIENTE AS Code_account, &#xA;right(CODIGO_MATERIAL,12) AS Code_Product, &#xA;'999999' AS Lot_Number, CANT_FACTURADA AS Quantity,&#xA;CANT_FACTURADA AS Quantity_Order, UNIDAD_DE_MEDIDA AS Unit_Measure, PRE_UNITARIO AS Price_Br, &#xA;PRE_UNITARIO AS Price, &#xA;MONT_LINEA AS Total_Amount, &#xA;CASE WHEN PRE_UNITARIO = 0.00 THEN 0.00 ELSE&#xA;(100 * DetalleHistFacturas.DESCUENTO / PRE_UNITARIO) &#xA; END AS Por_Discount1, --MONT LINEA &#xA;DetalleHistFacturas.DESCUENTO AS Amount_Discount1, NULL AS Por_Discount2, &#xA;NULL AS Amount_Discount2,&#xA;NULL AS Por_Discount3, NULL AS Amount_Discount3, &#xA;CASE WHEN PRE_UNITARIO = 0.00 THEN 0.00 ELSE&#xA;--(DetalleHistFacturas.ITBIS * 100 / PRE_UNITARIO) &#xA;CASE WHEN UNIDAD_DE_MEDIDA = 'UN' THEN &#xA;round(DetalleHistFacturas.ITBIS / &#xA;((PRE_UNITARIO * CANT_FACTURADA * 1.00) - DetalleHistFacturas.DESCUENTO) * 100,2)&#xA;ELSE &#xA;round(DetalleHistFacturas.ITBIS / &#xA;((PRE_UNITARIO * CANT_FACTURADA * Factor_Conversion) - DetalleHistFacturas.DESCUENTO) * 100,2)&#xA;END END AS Por_Tax1, &#xA;DetalleHistFacturas.ITBIS AS Amount_Tax1, &#xA;NULL AS Por_Tax2,&#xA;NULL AS Amount_Tax2, 'PE' AS Code_Currency, &#xA;NULL AS Secuence,&#xA;NUMERO_PEDIDO AS Order_Num_Cli, &#xA;COND_PAGO AS Code_Paymentway, &#xA;R2.CONDUCTOR AS Code_Seller,&#xA;RUTA.CONDUCTOR AS Code_Seller_Del,&#xA;'ZOR' AS Order_Type, &#xA;CASE WHEN EST_BONIFICACION = 'ZBP1' THEN 1&#xA;ELSE 0&#xA;END AS Sale_Type,&#xA; NULL AS Code_ReturnCause,  NULL AS Code_Address,&#xA;CODIGO_ZONA AS Code_Agrupation,&#xA;NRO_COMPROBANTE_FISCAL AS NCF, ALMACEN AS Code_Warehouse,&#xA;FLAG_ENTREGA AS To_Delivery,&#xA;CabeceraHistFacturas.NUMERO_PEDIDO AS Order_Num_Linkend,&#xA;CabeceraHistFacturas.RUTA AS Code_Route,&#xA;MONTO AS Total_Amount_Inv,&#xA;CabeceraHistFacturas.DESCUENTO AS Total_Discount_Inv,&#xA;CabeceraHistFacturas.ITBIS AS Total_Tax_Inv,&#xA;'0' as Source_Create, '1' AS transfer_status, NULL as status_SAP&#xA;FROM CabeceraHistFacturas&#xA;INNER JOIN DetalleHistFacturas ON CabeceraHistFacturas.NUMERO_FACT = DetalleHistFacturas.NUMERO_FACT&#xA;INNER JOIN RUTA ON RUTA.RUTA = CabeceraHistFacturas.RUTA&#xA;INNER JOIN IMPLT_products &#xA;ON REPLACE(LTRIM(REPLACE(CODIGO_MATERIAL,'0',' ')),' ','0') = IMPLT_products.Code_ofClient&#xA;LEFT JOIN RUTA AS R2 ON right(R2.RUTA,3) = CabeceraHistFacturas.CODIGO_ZONA AND LEFT(R2.RUTA,1) = 'P'&#xA;WHERE FLAG_ENTREGA = 'X'&#xA;&#xA;TRUNCATE TABLE [IMPLT_hist_orders]&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_hist_orders]&#xA;           ([Order_Num], [Num_Line], [Order_Num_ofClient], [Type_Rec], Code_load,&#xA;&#x9;&#x9;   [Date_Delivery],&#xA;           [Order_Date], [Code_Account], [Code_Product], [Lot_Number], [Quantity],&#xA;           [Quantity_Order], [Unit_Measure], [Price_Br], [Price], [Total_Amount],&#xA;           [Por_Discount1], [Amount_Discount1], [Por_Discount2], [Amount_Discount2],&#xA;           [Por_Discount3], [Amount_Discount3], [Por_Tax1], [Amount_Tax1], [Por_Tax2],&#xA;           [Amount_Tax2], [Code_Currency], Secuence, [Order_Num_Cli], [Code_Paymentway], [Code_Seller],&#xA;&#x9;&#x9;   Code_Seller_Del,&#xA;           [Order_Type], [Sale_Type], [Code_ReturnCause], Code_Address, Code_Agrupation1, &#xA;&#x9;&#x9;   NCF, Code_Warehouse,&#xA;To_Delivery,&#xA;Order_Num_Linkend,&#xA;Code_Route,&#xA;Total_Amount_Inv,&#xA;Total_Discount_Inv,&#xA;Total_Tax_Inv,&#xA;&#x9;&#x9;              [Source_Create], [Transfer_status], [Status_SAP])&#xA;SELECT DISTINCT&#xA;CabeceraHistFacturas.NUMERO_FACT AS Order_Num, NUM_LINEA AS Num_Line, &#xA;NUMERO_PEDIDO AS  Order_Num_ofClient,&#xA;CASE WHEN CANT_FACTURADA = 0 THEN 'R' ELSE 'S' END AS Type_Rec, &#xA;Entrega AS Code_load,&#xA;replace(dateadd(day,1,(convert(date,FECHA_FACTURA, 112))),'-','') AS Date_Delivery,&#xA;convert(char(8),FECHA_FACTURA, 112) AS Order_Date, &#xA;CODIGO_CLIENTE AS Code_account, &#xA;right(CODIGO_MATERIAL,12) AS Code_Product, &#xA;'999999' AS Lot_Number, CANT_FACTURADA AS Quantity,&#xA;CANT_FACTURADA AS Quantity_Order, UNIDAD_DE_MEDIDA AS Unit_Measure, &#xA;PRE_UNITARIO AS Price_Br, &#xA;PRE_UNITARIO AS Price, &#xA;MONT_LINEA AS Total_Amount, &#xA;CASE WHEN PRE_UNITARIO = 0.00 THEN 0.00 ELSE&#xA;(100 * DetalleHistFacturas.DESCUENTO / PRE_UNITARIO) &#xA; END AS Por_Discount1, --MONT LINEA &#xA;DetalleHistFacturas.DESCUENTO AS Amount_Discount1, NULL AS Por_Discount2, &#xA;NULL AS Amount_Discount2,&#xA;NULL AS Por_Discount3, NULL AS Amount_Discount3, &#xA;CASE WHEN PRE_UNITARIO = 0.00 THEN 0.00 ELSE&#xA;--(DetalleHistFacturas.ITBIS * 100 / PRE_UNITARIO) &#xA;CASE WHEN UNIDAD_DE_MEDIDA = 'UN' THEN &#xA;round(DetalleHistFacturas.ITBIS / &#xA;((PRE_UNITARIO * CANT_FACTURADA * 1.00) - DetalleHistFacturas.DESCUENTO) * 100,2)&#xA;ELSE &#xA;round(DetalleHistFacturas.ITBIS / &#xA;((PRE_UNITARIO * CANT_FACTURADA * Factor_Conversion) - DetalleHistFacturas.DESCUENTO) * 100,2)&#xA;END END AS Por_Tax1, &#xA;DetalleHistFacturas.ITBIS AS Amount_Tax1, &#xA;NULL AS Por_Tax2,&#xA;NULL AS Amount_Tax2, 'PE' AS Code_Currency, &#xA;NULL AS Secuence,&#xA;NUMERO_PEDIDO AS Order_Num_Cli, &#xA;COND_PAGO AS Code_Paymentway, &#xA;R2.CONDUCTOR AS Code_Seller,&#xA;max(RUTA.CONDUCTOR) AS Code_Seller_Del,&#xA;'ZOR' AS Order_Type, &#xA;CASE WHEN EST_BONIFICACION = 'ZBP1' THEN 1&#xA;ELSE 0&#xA;END AS Sale_Type,&#xA; NULL AS Code_ReturnCause,  NULL AS Code_Address,&#xA;CODIGO_ZONA AS Code_Agrupation,&#xA;NRO_COMPROBANTE_FISCAL AS NCF, ALMACEN AS Code_Warehouse,&#xA;FLAG_ENTREGA AS To_Delivery,&#xA;CabeceraHistFacturas.NUMERO_PEDIDO AS Order_Num_Linkend,&#xA;CabeceraHistFacturas.RUTA AS Code_Route,&#xA;MONTO AS Total_Amount_Inv,&#xA;CabeceraHistFacturas.DESCUENTO AS Total_Discount_Inv,&#xA;CabeceraHistFacturas.ITBIS AS Total_Tax_Inv,&#xA;'0' as Source_Create, '1' AS transfer_status, NULL as status_SAP&#xA;FROM CabeceraHistFacturas&#xA;INNER JOIN DetalleHistFacturas ON CabeceraHistFacturas.NUMERO_FACT = DetalleHistFacturas.NUMERO_FACT&#xA;INNER JOIN RUTA ON RUTA.RUTA = CabeceraHistFacturas.RUTA &#xA;LEFT JOIN RUTA AS R2 ON right(R2.RUTA,3) = CabeceraHistFacturas.CODIGO_ZONA AND LEFT(R2.RUTA,1) = 'P'&#xA;INNER JOIN IMPLT_products &#xA;ON REPLACE(LTRIM(REPLACE(CODIGO_MATERIAL,'0',' ')),' ','0') = IMPLT_products.Code_ofClient&#xA;WHERE FLAG_ENTREGA IS NULL&#xA;GROUP BY  CabeceraHistFacturas.NUMERO_FACT, DetalleHistFacturas.NUM_LINEA, CabeceraHistFacturas.NUMERO_PEDIDO,&#xA;DetalleHistFacturas.CANT_FACTURADA, CabeceraHistFacturas.ENTREGA, CabeceraHistFacturas.FECHA_FACTURA,&#xA;CabeceraHistFacturas.CODIGO_CLIENTE, DetalleHistFacturas.CODIGO_MATERIAL, DetalleHistFacturas.UNIDAD_DE_MEDIDA,&#xA;DetalleHistFacturas.PRE_UNITARIO, DetalleHistFacturas.MONT_LINEA, DetalleHistFacturas.DESCUENTO,&#xA;DetalleHistFacturas.ITBIS, CabeceraHistFacturas.COND_PAGO, RUTA.CONDUCTOR, r2.CONDUCTOR, DetalleHistFacturas.EST_BONIFICACION,&#xA;CabeceraHistFacturas.CODIGO_ZONA, CabeceraHistFacturas.NRO_COMPROBANTE_FISCAL, CabeceraHistFacturas.ALMACEN,&#xA;CabeceraHistFacturas.FLAG_ENTREGA, CabeceraHistFacturas.RUTA, CabeceraHistFacturas.MONTO, CabeceraHistFacturas.DESCUENTO,&#xA;CabeceraHistFacturas.ITBIS, IMPLT_products.Factor_Conversion" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Pricing"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Pricing"
      DTS:DTSID="{310560D8-5CCF-42F3-9115-FC16DC666404}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Pricing"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="--   IMPLT_pricing&#xA;&#xA;TRUNCATE TABLE   IMPLT_pricing&#xA;GO&#xA;&#xA;INSERT INTO  IMPLT_pricing (Secuence, Code_Table, Code1, Code2, Code3, Code4, Code5, Code6, Code7, &#xA;Code8, Value, Base, Unit_Measure, Type_Value, Code_Currency, Date_Ini, Date_Fin, ValueKey, ID_ERP, &#xA;Quantity_Ini, Quantity_End, Type_S,&#xA;Source_Create, &#xA;                         Transfer_status, Status_SAP)&#xA;&#xA;SELECT DISTINCT 'ZPR0' AS Secuence, &#xA;CASE WHEN ListaDePrecio.Codigo_Material IS NOT NULL THEN Nivel_Precio&#xA;ELSE CASE WHEN len(jerarquia) = 2 THEN Nivel_Precio + '_1'&#xA;ELSE CASE WHEN len(jerarquia) = 4 THEN Nivel_Precio + '_2'&#xA;ELSE CASE WHEN len(jerarquia) = 6 THEN Nivel_Precio + '_3'&#xA;ELSE CASE WHEN len(jerarquia) = 8 THEN Nivel_Precio + '_4'&#xA;ELSE CASE WHEN len(jerarquia) = 10 THEN Nivel_Precio + '_5'  &#xA;END END END END END END AS Code_Table, &#xA;ListaDePrecio.Grupo_Cliente AS Code1,&#xA;&#xA;GRUPO_CLIENTE AS Code2,&#xA;&#xA;CASE WHEN right(ListaDePrecio.Codigo_Material,12) IS NOT NULL &#xA;THEN REPLACE(LTRIM(REPLACE(ListaDePrecio.Codigo_Material,'0',' ')),' ','0')&#xA;ELSE CASE WHEN len(jerarquia) = 2 THEN jerarquia&#xA;ELSE CASE WHEN len(jerarquia) = 4 THEN Substring (jerarquia, 3,2)&#xA;ELSE CASE WHEN len(jerarquia) = 6 THEN Substring (jerarquia, 5,2)&#xA;ELSE CASE WHEN len(jerarquia) = 8 THEN Substring (jerarquia, 7,2)&#xA;ELSE CASE WHEN len(jerarquia) = 10 THEN Substring (jerarquia, 9,2)&#xA;END END END END END END AS Code3,&#xA;NULL AS Code4, &#xA;NULL AS Code5, &#xA;NULL AS Code6, &#xA;NULL AS Code7, &#xA;NULL AS Code8, &#xA;substring(cast(max(Precio) AS varchar(14)),1,12) as Value, &#xA;1 AS Base,&#xA;Unidad_Venta AS Unit_Measure, &#xA;0 AS Type_Value, &#xA;'PE' AS Code_Currency, &#xA;CONVERT(varchar,Fecha_Inicio,112) AS Date_Ini,&#xA;CONVERT(varchar,Fecha_Fin,112)AS Date_Fin, &#xA;'ZPR0' + Nivel_Precio + ListaDePrecio.Grupo_Cliente + Reg_Condicion &#xA;+ REPLACE(LTRIM(REPLACE(ListaDePrecio.Codigo_Material,'0',' ')),' ','0') AS ValueKey, &#xA;Reg_Condicion AS ID_ERP, &#xA;NULL AS Quantity_Ini, NULL AS Quantity_End, 'N' AS Type_S,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;FROM            ListaDePrecio&#xA;INNER JOIN Materiales ON Materiales.codigo_material = ListaDePrecio.Codigo_Material&#xA;&#xA;WHERE  Nivel_Precio = 'A910'&#xA;GROUP BY ListaDePrecio.Codigo_Material, Jerarquia, Nivel_Precio, ListaDePrecio.Grupo_Cliente, Unidad_Venta,&#xA;Fecha_inicio, Fecha_Fin, Reg_Condicion, CLIENTE, RAMO, ZONA&#xA;&#xA;-------------------------------------------------------------------------------------------------------------&#xA;-------------------------------------------------------------------------------------------------------------&#xA;UNION&#xA;&#xA;SELECT DISTINCT 'ZPR0' AS Secuence, &#xA;CASE WHEN ListaDePrecio.Codigo_Material IS NOT NULL THEN Nivel_Precio&#xA;ELSE CASE WHEN len(jerarquia) = 2 THEN Nivel_Precio + '_1'&#xA;ELSE CASE WHEN len(jerarquia) = 4 THEN Nivel_Precio + '_2'&#xA;ELSE CASE WHEN len(jerarquia) = 6 THEN Nivel_Precio + '_3'&#xA;ELSE CASE WHEN len(jerarquia) = 8 THEN Nivel_Precio + '_4'&#xA;ELSE CASE WHEN len(jerarquia) = 10 THEN Nivel_Precio + '_5'  &#xA;END END END END END END AS Code_Table, &#xA;ListaDePrecio.Grupo_Cliente AS Code1,&#xA;&#xA;Cliente AS Code2,&#xA;&#xA;CASE WHEN right(ListaDePrecio.Codigo_Material,12) IS NOT NULL &#xA;THEN REPLACE(LTRIM(REPLACE(ListaDePrecio.Codigo_Material,'0',' ')),' ','0')&#xA;ELSE CASE WHEN len(jerarquia) = 2 THEN jerarquia&#xA;ELSE CASE WHEN len(jerarquia) = 4 THEN Substring (jerarquia, 3,2)&#xA;ELSE CASE WHEN len(jerarquia) = 6 THEN Substring (jerarquia, 5,2)&#xA;ELSE CASE WHEN len(jerarquia) = 8 THEN Substring (jerarquia, 7,2)&#xA;ELSE CASE WHEN len(jerarquia) = 10 THEN Substring (jerarquia, 9,2)&#xA;END END END END END END AS Code3,&#xA;NULL AS Code4, &#xA;NULL AS Code5, &#xA;NULL AS Code6, &#xA;NULL AS Code7, &#xA;NULL AS Code8, &#xA;substring(cast(max(Precio) AS varchar(14)),1,12) as Value, &#xA;1 AS Base,&#xA;Unidad_Venta AS Unit_Measure, &#xA;0 AS Type_Value, &#xA;'PE' AS Code_Currency, &#xA;CONVERT(varchar,Fecha_Inicio,112) AS Date_Ini,&#xA;CONVERT(varchar,Fecha_Fin,112)AS Date_Fin, &#xA;'ZPR0' + Nivel_Precio + ListaDePrecio.Grupo_Cliente + Reg_Condicion &#xA;+ REPLACE(LTRIM(REPLACE(ListaDePrecio.Codigo_Material,'0',' ')),' ','0') AS ValueKey, &#xA;Reg_Condicion AS ID_ERP, &#xA;NULL AS Quantity_Ini, NULL AS Quantity_End, 'N' AS Type_S,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;FROM            ListaDePrecio&#xA;INNER JOIN Materiales ON Materiales.codigo_material = ListaDePrecio.Codigo_Material&#xA;&#xA;WHERE  Nivel_Precio = 'A928'&#xA;GROUP BY ListaDePrecio.Codigo_Material, Jerarquia, Nivel_Precio, ListaDePrecio.Grupo_Cliente, Unidad_Venta,&#xA;Fecha_inicio, Fecha_Fin, Reg_Condicion, CLIENTE, RAMO, ZONA&#xA;&#xA;------------------------------------------------------------------------------------------------------------&#xA;------------------------------------------------------------------------------------------------------------&#xA;INSERT INTO  IMPLT_pricing (Secuence, Code_Table, Code1, Code2, Code3, Code4, Code5, Code6, Code7, &#xA;Code8, Value, Base, Unit_Measure, Type_Value, Code_Currency, Date_Ini, Date_Fin, ValueKey, ID_ERP, &#xA;Quantity_Ini, Quantity_End, Type_S,&#xA;Source_Create, &#xA;                         Transfer_status, Status_SAP)&#xA;&#xA;SELECT DISTINCT 'ZPR0' AS Secuence, &#xA;CASE WHEN ListaDePrecio.Codigo_Material IS NOT NULL THEN Nivel_Precio&#xA;ELSE CASE WHEN len(jerarquia) = 2 THEN Nivel_Precio + '_1'&#xA;ELSE CASE WHEN len(jerarquia) = 4 THEN Nivel_Precio + '_2'&#xA;ELSE CASE WHEN len(jerarquia) = 6 THEN Nivel_Precio + '_3'&#xA;ELSE CASE WHEN len(jerarquia) = 8 THEN Nivel_Precio + '_4'&#xA;ELSE CASE WHEN len(jerarquia) = 10 THEN Nivel_Precio + '_5'  &#xA;END END END END END END AS Code_Table, &#xA;ListaDePrecio.Grupo_Cliente AS Code1,&#xA;&#xA;RAMO AS Code2,&#xA;&#xA;CASE WHEN right(ListaDePrecio.Codigo_Material,12) IS NOT NULL THEN &#xA;REPLACE(LTRIM(REPLACE(ListaDePrecio.Codigo_Material,'0',' ')),' ','0')&#xA;ELSE CASE WHEN len(jerarquia) = 2 THEN jerarquia&#xA;ELSE CASE WHEN len(jerarquia) = 4 THEN Substring (jerarquia, 3,2)&#xA;ELSE CASE WHEN len(jerarquia) = 6 THEN Substring (jerarquia, 5,2)&#xA;ELSE CASE WHEN len(jerarquia) = 8 THEN Substring (jerarquia, 7,2)&#xA;ELSE CASE WHEN len(jerarquia) = 10 THEN Substring (jerarquia, 9,2)&#xA;END END END END END END AS Code3,&#xA;NULL AS Code4, &#xA;NULL AS Code5, &#xA;NULL AS Code6, &#xA;NULL AS Code7, &#xA;NULL AS Code8, &#xA;substring(cast(max(Precio) AS varchar(14)),1,12) as Value, &#xA;1 AS Base,&#xA;Unidad_Venta AS Unit_Measure, &#xA;0 AS Type_Value, &#xA;'PE' AS Code_Currency, &#xA;CONVERT(varchar,Fecha_Inicio,112) AS Date_Ini,&#xA;CONVERT(varchar,Fecha_Fin,112)AS Date_Fin, &#xA;'ZPR0' + Nivel_Precio + ListaDePrecio.Grupo_Cliente + Reg_Condicion &#xA;+ REPLACE(LTRIM(REPLACE(ListaDePrecio.Codigo_Material,'0',' ')),' ','0') AS ValueKey, &#xA;Reg_Condicion AS ID_ERP, &#xA;NULL AS Quantity_Ini, NULL AS Quantity_End, 'N' AS Type_S,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;FROM            ListaDePrecio&#xA;INNER JOIN Materiales ON Materiales.codigo_material = ListaDePrecio.Codigo_Material&#xA;WHERE  Nivel_Precio = 'A934'&#xA;GROUP BY ListaDePrecio.Codigo_Material, Jerarquia, Nivel_Precio, ListaDePrecio.Grupo_Cliente, Unidad_Venta,&#xA;Fecha_inicio, Fecha_Fin, Reg_Condicion, CLIENTE, RAMO, ZONA&#xA;------------------------------------------------------------------------------------------------------------&#xA;-------------------------------------------------------------------------------------------------------------&#xA;UNION &#xA;&#xA;SELECT DISTINCT 'ZPR0' AS Secuence, &#xA;CASE WHEN ListaDePrecio.Codigo_Material IS NOT NULL THEN Nivel_Precio&#xA;ELSE CASE WHEN len(jerarquia) = 2 THEN Nivel_Precio + '_1'&#xA;ELSE CASE WHEN len(jerarquia) = 4 THEN Nivel_Precio + '_2'&#xA;ELSE CASE WHEN len(jerarquia) = 6 THEN Nivel_Precio + '_3'&#xA;ELSE CASE WHEN len(jerarquia) = 8 THEN Nivel_Precio + '_4'&#xA;ELSE CASE WHEN len(jerarquia) = 10 THEN Nivel_Precio + '_5'  &#xA;END END END END END END AS Code_Table, &#xA;ListaDePrecio.Grupo_Cliente AS Code1,&#xA;&#xA;ZONA AS Code2,&#xA;&#xA;CASE WHEN right(ListaDePrecio.Codigo_Material,12) IS NOT NULL &#xA;THEN REPLACE(LTRIM(REPLACE(ListaDePrecio.Codigo_Material,'0',' ')),' ','0')&#xA;ELSE CASE WHEN len(jerarquia) = 2 THEN jerarquia&#xA;ELSE CASE WHEN len(jerarquia) = 4 THEN Substring (jerarquia, 3,2)&#xA;ELSE CASE WHEN len(jerarquia) = 6 THEN Substring (jerarquia, 5,2)&#xA;ELSE CASE WHEN len(jerarquia) = 8 THEN Substring (jerarquia, 7,2)&#xA;ELSE CASE WHEN len(jerarquia) = 10 THEN Substring (jerarquia, 9,2)&#xA;END END END END END END AS Code3,&#xA;NULL AS Code4, &#xA;NULL AS Code5, &#xA;NULL AS Code6, &#xA;NULL AS Code7, &#xA;NULL AS Code8, &#xA;substring(cast(max(Precio) AS varchar(14)),1,12) as Value, &#xA;1 AS Base,&#xA;Unidad_Venta AS Unit_Measure, &#xA;0 AS Type_Value, &#xA;'PE' AS Code_Currency, &#xA;CONVERT(varchar,Fecha_Inicio,112) AS Date_Ini,&#xA;CONVERT(varchar,Fecha_Fin,112)AS Date_Fin, &#xA;'ZPR0' + Nivel_Precio + ListaDePrecio.Grupo_Cliente + Reg_Condicion &#xA;+ REPLACE(LTRIM(REPLACE(ListaDePrecio.Codigo_Material,'0',' ')),' ','0') AS ValueKey, &#xA;Reg_Condicion AS ID_ERP, &#xA;NULL AS Quantity_Ini, NULL AS Quantity_End, 'N' AS Type_S,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;FROM            ListaDePrecio&#xA;INNER JOIN Materiales ON Materiales.codigo_material = ListaDePrecio.Codigo_Material&#xA;&#xA;WHERE  Nivel_Precio = 'A943'&#xA;GROUP BY ListaDePrecio.Codigo_Material, Jerarquia, Nivel_Precio, ListaDePrecio.Grupo_Cliente, Unidad_Venta,&#xA;Fecha_inicio, Fecha_Fin, Reg_Condicion, CLIENTE, RAMO, ZONA&#xA;------------------------------------------------------------------------------------------------------------&#xA;------------------------------------------------------------------------------------------------------------&#xA;UNION&#xA;SELECT        'MWST' AS Secuence, 'A003' AS Code_Table,&#xA;'0' AS Code1, '' AS Code2, '' AS Code3, &#xA;NULL AS Code4, NULL AS Code5, NULL AS Code6, NULL&#xA;                         AS Code7, NULL AS Code8, '0.000' AS Value, 1 AS Base,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '%' AS Unit_Measure, '1' AS Type_Value, 'RD' AS Code_Currency,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '20140101' AS Date_Ini, '20990101' AS Date_Fin,&#xA; 'A003017' AS ValueKey, 'MWSTA003017' AS ID_ERP,  --'' AS Articulo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Quantity_Ini, NULL AS Quantity_End, 'N' AS Type_S,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;&#xA;UNION&#xA;SELECT        'MWST' AS Secuence, 'A003' AS Code_Table,&#xA;'1' AS Code1, '' AS Code2, '' AS Code3,  &#xA;NULL AS Code4, NULL AS Code5, NULL AS Code6, NULL&#xA;                         AS Code7, NULL AS Code8, '18.000' AS Value, 1 AS Base,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '%' AS Unit_Measure, '1' AS Type_Value, 'RD' AS Code_Currency,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '20140101' AS Date_Ini, '20990101' AS Date_Fin,&#xA; 'A003117' AS ValueKey, 'MWSTA003117' AS ID_ERP,  --'' AS Articulo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Quantity_Ini, NULL AS Quantity_End, 'N' AS Type_S,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;&#xA;UNION&#xA;SELECT        'MWST' AS Secuence, 'A003' AS Code_Table,&#xA;'2' AS Code1, '' AS Code2, '' AS Code3, &#xA;NULL AS Code4, NULL AS Code5, NULL AS Code6, NULL&#xA;                         AS Code7, NULL AS Code8, '16.000' AS Value, 1 AS Base,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '%' AS Unit_Measure, '1' AS Type_Value, 'RD' AS Code_Currency,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '20140101' AS Date_Ini, '20990101' AS Date_Fin,&#xA; 'A003217' AS ValueKey, 'MWSTA003217' AS ID_ERP,  --'' AS Articulo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; NULL AS Quantity_Ini, NULL AS Quantity_End, 'N' AS Type_S,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;&#xA;---------------------------------------------------------------------------------------------------------------&#xA;---------------------------------------------------------------&#xA;---------------------------------------------------------------&#xA;--Precios_Descuentos&#xA;TRUNCATE TABLE [IMPLT_pricing_esc]&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_pricing_esc]&#xA;           ([Secuence]&#xA;           ,[Code_Table]&#xA;           ,[Code1]&#xA;           ,[Code2]&#xA;           ,[Code3]&#xA;           ,[Code4]&#xA;           ,[Code5]&#xA;           ,[Code6]&#xA;           ,[Code7]&#xA;           ,[Code8]&#xA;           ,[Value]&#xA;           ,[Base]&#xA;           ,[Unit_Measure]&#xA;           ,[Type_Value]&#xA;           ,[Code_Currency]&#xA;           ,[Date_Ini]&#xA;           ,[Date_Fin]&#xA;           ,[ValueKey]&#xA;           ,[ID_ERP]&#xA;           ,[Quantity_Ini]&#xA;           ,[Quantity_End]&#xA;           ,[Type_S]&#xA;           ,[Price_Min]&#xA;           ,[Price_Max]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;     SELECT DISTINCT 'ZDC1' AS Secuence, &#xA;CASE WHEN right(Codigo_Material,12) IS NOT NULL THEN Nivel_Precio&#xA;ELSE CASE WHEN len(jerarquia_producto) = 2 THEN Nivel_Precio + '_1'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 4 THEN Nivel_Precio + '_2'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 6 THEN Nivel_Precio + '_3'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 8 THEN Nivel_Precio + '_4'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 10 THEN Nivel_Precio + '_5'  &#xA;END END END END END END AS Code_Table, &#xA;Descuentos.Grupo_Cliente AS Code1,&#xA;&#xA;GRUPO_CLIENTE AS Code2, &#xA;&#xA;CASE WHEN right(Codigo_Material,12) IS NOT NULL &#xA;THEN REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0')&#xA;ELSE CASE WHEN len(jerarquia_producto) = 2 THEN jerarquia_producto&#xA;ELSE CASE WHEN len(jerarquia_producto) = 4 THEN Substring (jerarquia_producto, 3,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 6 THEN Substring (jerarquia_producto, 5,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 8 THEN Substring (jerarquia_producto, 7,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 10 THEN Substring (jerarquia_producto, 9,2)&#xA;END END END END END END AS Code3,&#xA;NULL AS Code4, &#xA;NULL AS Code5, &#xA;NULL AS Code6, &#xA;NULL AS Code7, &#xA;NULL AS Code8, &#xA;cast(max(PCTO_Descuento) AS varchar(12)) as Value, &#xA;1 AS Base,&#xA;'%' AS Unit_Measure, &#xA;1 AS Type_Value, &#xA;'%' AS Code_Currency, &#xA;CONVERT(varchar,Fecha_Inicio,112) AS Date_Ini,&#xA;CONVERT(varchar,Fecha_Fin,112)AS Date_Fin, &#xA;'ZDC1' + Nivel_Precio + Descuentos.Grupo_Cliente + Registro_Condicion + GRUPO_CLIENTE&#xA;+ REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') AS ValueKey, &#xA;Registro_Condicion AS ID_ERP, &#xA;CANT_DESDE AS Quantity_Ini, CANT_HASTA AS Quantity_End, 'E' AS Type_S,&#xA;cast(max(promocion_ventas) AS decimal(11,3)) AS price_min,&#xA;cast(max(promocion_ventas) AS decimal(11,3)) AS price_max,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;FROM            Descuentos &#xA;&#xA;WHERE  Nivel_Precio IN ('A910','A916')&#xA;GROUP BY Codigo_Material, Nivel_Precio, jerarquia_producto, Registro_Condicion, Descuentos.Grupo_Cliente, Fecha_Inicio,&#xA;Fecha_Fin, CANT_DESDE, CANT_HASTA&#xA;--------------------------------------------------------------------------------------------------------------&#xA;--------------------------------------------------------------------------------------------------------------&#xA;UNION&#xA;&#xA;     SELECT DISTINCT 'ZDC1' AS Secuence, &#xA;CASE WHEN right(Codigo_Material,12) IS NOT NULL THEN Nivel_Precio&#xA;ELSE CASE WHEN len(jerarquia_producto) = 2 THEN Nivel_Precio + '_1'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 4 THEN Nivel_Precio + '_2'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 6 THEN Nivel_Precio + '_3'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 8 THEN Nivel_Precio + '_4'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 10 THEN Nivel_Precio + '_5'  &#xA;END END END END END END AS Code_Table, &#xA;Descuentos.Grupo_Cliente AS Code1,&#xA;&#xA;CLIENTE AS Code2,&#xA;&#xA;CASE WHEN right(Codigo_Material,12) IS NOT NULL &#xA;THEN REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0')&#xA;ELSE CASE WHEN len(jerarquia_producto) = 2 THEN jerarquia_producto&#xA;ELSE CASE WHEN len(jerarquia_producto) = 4 THEN Substring (jerarquia_producto, 3,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 6 THEN Substring (jerarquia_producto, 5,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 8 THEN Substring (jerarquia_producto, 7,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 10 THEN Substring (jerarquia_producto, 9,2)&#xA;END END END END END END AS Code3,&#xA;NULL AS Code4, &#xA;NULL AS Code5, &#xA;NULL AS Code6, &#xA;NULL AS Code7, &#xA;NULL AS Code8, &#xA;cast(max(PCTO_Descuento) AS varchar(12)) as Value, &#xA;1 AS Base,&#xA;'%' AS Unit_Measure, &#xA;1 AS Type_Value, &#xA;'%' AS Code_Currency, &#xA;CONVERT(varchar,Fecha_Inicio,112) AS Date_Ini,&#xA;CONVERT(varchar,Fecha_Fin,112)AS Date_Fin, &#xA;'ZDC1' + Nivel_Precio + Descuentos.Grupo_Cliente + Registro_Condicion + CLIENTE&#xA;+ REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') AS ValueKey, &#xA;Registro_Condicion AS ID_ERP, &#xA;CANT_DESDE AS Quantity_Ini, CANT_HASTA AS Quantity_End, 'E' AS Type_S,&#xA;cast(max(promocion_ventas) AS decimal(11,3)) AS price_min,&#xA;cast(max(promocion_ventas) AS decimal(11,3)) AS price_max,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;FROM            Descuentos&#xA;&#xA;WHERE  Nivel_Precio IN ('A928','A922')&#xA;GROUP BY Codigo_Material, Nivel_Precio, jerarquia_producto, Registro_Condicion, Descuentos.Grupo_Cliente, Fecha_Inicio,&#xA;Fecha_Fin, CANT_DESDE, CANT_HASTA, Descuentos.CLIENTE&#xA;&#xA;--------------------------------------------------------------------------------------------------------------&#xA;--------------------------------------------------------------------------------------------------------------&#xA;INSERT INTO [dbo].[IMPLT_pricing_esc]&#xA;           ([Secuence]&#xA;           ,[Code_Table]&#xA;           ,[Code1]&#xA;           ,[Code2]&#xA;           ,[Code3]&#xA;           ,[Code4]&#xA;           ,[Code5]&#xA;           ,[Code6]&#xA;           ,[Code7]&#xA;           ,[Code8]&#xA;           ,[Value]&#xA;           ,[Base]&#xA;           ,[Unit_Measure]&#xA;           ,[Type_Value]&#xA;           ,[Code_Currency]&#xA;           ,[Date_Ini]&#xA;           ,[Date_Fin]&#xA;           ,[ValueKey]&#xA;           ,[ID_ERP]&#xA;           ,[Quantity_Ini]&#xA;           ,[Quantity_End]&#xA;           ,[Type_S]&#xA;           ,[Price_Min]&#xA;           ,[Price_Max]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;&#xA;     SELECT DISTINCT 'ZDC1' AS Secuence, &#xA;CASE WHEN right(Codigo_Material,12) IS NOT NULL THEN Nivel_Precio&#xA;ELSE CASE WHEN len(jerarquia_producto) = 2 THEN Nivel_Precio + '_1'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 4 THEN Nivel_Precio + '_2'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 6 THEN Nivel_Precio + '_3'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 8 THEN Nivel_Precio + '_4'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 10 THEN Nivel_Precio + '_5'  &#xA;END END END END END END AS Code_Table, &#xA;Descuentos.Grupo_Cliente AS Code1,&#xA;&#xA;RAMO AS Code2,&#xA;&#xA;CASE WHEN right(Codigo_Material,12) IS NOT NULL &#xA;THEN REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0')&#xA;ELSE CASE WHEN len(jerarquia_producto) = 2 THEN jerarquia_producto&#xA;ELSE CASE WHEN len(jerarquia_producto) = 4 THEN Substring (jerarquia_producto, 3,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 6 THEN Substring (jerarquia_producto, 5,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 8 THEN Substring (jerarquia_producto, 7,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 10 THEN Substring (jerarquia_producto, 9,2)&#xA;END END END END END END AS Code3,&#xA;NULL AS Code4, &#xA;NULL AS Code5, &#xA;NULL AS Code6, &#xA;NULL AS Code7, &#xA;NULL AS Code8, &#xA;cast(max(PCTO_Descuento) AS varchar(12)) as Value, &#xA;1 AS Base,&#xA;'%' AS Unit_Measure, &#xA;1 AS Type_Value, &#xA;'%' AS Code_Currency, &#xA;CONVERT(varchar,Fecha_Inicio,112) AS Date_Ini,&#xA;CONVERT(varchar,Fecha_Fin,112)AS Date_Fin, &#xA;'ZDC1' + Nivel_Precio + Descuentos.Grupo_Cliente + Registro_Condicion + RAMO&#xA;+ REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') AS ValueKey, &#xA;Registro_Condicion AS ID_ERP, &#xA;convert(decimal(15,3),CANT_DESDE) AS Quantity_Ini, &#xA;convert(decimal(15,3),CANT_HASTA) AS Quantity_End, &#xA;'E' AS Type_S,&#xA;cast(max(promocion_ventas) AS decimal(11,3)) AS price_min,&#xA;cast(max(promocion_ventas) AS decimal(11,3)) AS price_max,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;FROM            Descuentos&#xA;&#xA;WHERE  Nivel_Precio = 'A934'&#xA;GROUP BY Codigo_Material, Nivel_Precio, jerarquia_producto, Registro_Condicion, Descuentos.Grupo_Cliente, Fecha_Inicio,&#xA;Fecha_Fin, CANT_DESDE, CANT_HASTA, RAMO&#xA;&#xA;&#xA;&#xA;--------------------------------------------------------------------------------------------------------------&#xA;--------------------------------------------------------------------------------------------------------------&#xA;UNION&#xA;&#xA;     SELECT DISTINCT 'ZDC1' AS Secuence, &#xA;CASE WHEN right(Codigo_Material,12) IS NOT NULL THEN Nivel_Precio&#xA;ELSE CASE WHEN len(jerarquia_producto) = 2 THEN Nivel_Precio + '_1'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 4 THEN Nivel_Precio + '_2'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 6 THEN Nivel_Precio + '_3'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 8 THEN Nivel_Precio + '_4'&#xA;ELSE CASE WHEN len(jerarquia_producto) = 10 THEN Nivel_Precio + '_5'  &#xA;END END END END END END AS Code_Table, &#xA;Descuentos.Grupo_Cliente AS Code1,&#xA;&#xA;ZONA AS Code2,&#xA;&#xA;CASE WHEN right(Codigo_Material,12) IS NOT NULL &#xA;THEN REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0')&#xA;ELSE CASE WHEN len(jerarquia_producto) = 2 THEN jerarquia_producto&#xA;ELSE CASE WHEN len(jerarquia_producto) = 4 THEN Substring (jerarquia_producto, 3,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 6 THEN Substring (jerarquia_producto, 5,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 8 THEN Substring (jerarquia_producto, 7,2)&#xA;ELSE CASE WHEN len(jerarquia_producto) = 10 THEN Substring (jerarquia_producto, 9,2)&#xA;END END END END END END AS Code3,&#xA;NULL AS Code4, &#xA;NULL AS Code5, &#xA;NULL AS Code6, &#xA;NULL AS Code7, &#xA;NULL AS Code8, &#xA;cast(max(PCTO_Descuento) AS varchar(12)) as Value, &#xA;1 AS Base,&#xA;'%' AS Unit_Measure, &#xA;1 AS Type_Value, &#xA;'%' AS Code_Currency, &#xA;CONVERT(varchar,Fecha_Inicio,112) AS Date_Ini,&#xA;CONVERT(varchar,Fecha_Fin,112)AS Date_Fin, &#xA;'ZDC1' + Nivel_Precio + Descuentos.Grupo_Cliente + Registro_Condicion + ZONA&#xA;+ REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') AS ValueKey, &#xA;Registro_Condicion AS ID_ERP, &#xA;CANT_DESDE AS Quantity_Ini, CANT_HASTA AS Quantity_End, 'E' AS Type_S,&#xA;cast(max(promocion_ventas) AS decimal(11,3)) AS price_min,&#xA;cast(max(promocion_ventas) AS decimal(11,3)) AS price_max,&#xA;'0' AS Source_Create, &#xA;1 AS transfer_status, &#xA;0  AS status_SAP&#xA;FROM            Descuentos&#xA;&#xA;WHERE  Nivel_Precio = 'A943'&#xA;GROUP BY Codigo_Material, Nivel_Precio, jerarquia_producto, Registro_Condicion, Descuentos.Grupo_Cliente, Fecha_Inicio,&#xA;Fecha_Fin, CANT_DESDE, CANT_HASTA, ZONA" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Productos"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Productos"
      DTS:DTSID="{A690BEB4-8B88-422F-95E2-D850294C1678}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Productos"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE IMPLT_products&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_products (Code_ofClient, Description, Description_short, Code_Hierarchy1, &#xA;Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_ClassificationA, Code_ClassificationB, &#xA;Code_ClassificationC, Code_ClassificationD, &#xA;                         Code_ClassificationE, Code_Status, Ean14, Factor_Conversion, Unit_Type_Sales, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Unit_Type_Inv, Weight, Unit_Type_Weight, Factor_Convert_W, Trazability, Volume, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Unit_Type_Volume, Tax1, Tax2, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; --Code_Empty, Code_Unit_Type_Empty, Code_Empty_Box, Code_Unit_Type_Box, &#xA;&#x9;&#x9;&#x9;&#x9;Code_Hierarchy_All, Code_Hierarchy5, Code_Hierarchy6,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Source_Create, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Transfer_status, Status_SAP)&#xA;SELECT  DISTINCT    &#xA;REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') as Code_ofClient, &#xA;left(Descripcion_Material,50) as Description, NULL as Description_short, '01' as Code_Hierarchy1, &#xA;left(Jerarquia,2) as Code_Hierarchy2, &#xA;SUBSTRING(Jerarquia,3,2) as Code_Hierarchy3, &#xA;SUBSTRING(Jerarquia,5,2) as Code_Hierarchy4,&#xA;CODIGO_CLASIFICACION as Code_ClassificationA, &#xA;Marca as Code_ClassificationB, NULL as Code_ClassificationC, &#xA;FAMILIA as Code_ClassificationD, &#xA;NULL as Code_ClassificationE, &#xA;'1' as Code_Status, &#xA;Codigo_barras as Ean14, &#xA;Und_Empaque as Factor_Conversion, &#xA;Und_Empaque_Almacen as Unit_Type_Sales, Und_Empaque_Detalle as Unit_Type_Inv,&#xA; PESO as Weight, &#xA; 'KG' as Unit_Type_Weight, 1 as Factor_Convert_W, '0' as Trazability, 1 as Volume, &#xA; 'L' as Unit_Type_Volume, &#xA;IMPUESTO AS Tax1, &#xA; NULL as Tax2, &#xA; --NULL as Code_Empty,  NULL as  Code_Unit_Type_Empty, NULL as Code_Empty_Box, NULL as Code_Unit_Type_Box, &#xA;Jerarquia AS Code_Hierarchy_All,&#xA;SUBSTRING(Jerarquia,7,2) AS Code_Hierarchy5,&#xA;SUBSTRING(Jerarquia,9,2) AS Code_Hierarchy6,&#xA; '0' AS Source_Create, &#xA; '1' AS transfer_status, NULL AS status_SAP&#xA;FROM    Materiales&#xA;LEFT JOIN Grupo_Familia  ON Grupo_Material = Grupo_Articulo&#xA;GO&#xA;&#xA;&#xA;-- IMPLT_products_array&#xA;&#xA;TRUNCATE TABLE IMPLT_products_array&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_products_array (Code, Type, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT '%' as Code, 50 as Type, '%' as Description , '0' AS Source_Create, &#xA;'0' AS transfer_status, '1' AS status_SAP&#xA;UNION&#xA;SELECT 'UN' as Code, 50 as Type, 'UN' as Description , '0' AS Source_Create, &#xA;'0' AS transfer_status, '1' AS status_SAP&#xA;UNION&#xA;SELECT DISTINCT CODIGO as Code, 1 as Type, DESCRIPCION as Description,&#xA; '0' AS Source_Create, &#xA;'0' AS transfer_status, &#xA;'1' AS status_SAP &#xA;FROM ClasificacionDeProductos WHERE CODIGO IS NOT NULL&#xA;UNION&#xA;SELECT DISTINCT MARCAS as Code, 2 as Type, DESCRIPCION as Description , &#xA;'0' AS Source_Create, '0' AS transfer_status, &#xA;'1' AS status_SAP &#xA;FROM Marcas WHERE MARCAS IS NOT NULL&#xA;UNION&#xA;SELECT DISTINCT Grupo_Material as Code, 9 as Type, Grupo_Material + ' ' + Denominacion as Description , &#xA;'0' AS Source_Create, '0' AS transfer_status, &#xA;'1' AS status_SAP &#xA;FROM Grupo_Familia WHERE Grupo_Material IS NOT NULL&#xA;UNION&#xA;SELECT DISTINCT Familia as Code, 8 as Type, DESCRIPCION as Description , &#xA;'0' AS Source_Create, '0' AS transfer_status, &#xA;'1' AS status_SAP &#xA;FROM Familia_Productos WHERE Familia IS NOT NULL&#xA;&#xA;&#xA;-- IMPLT_products_measure&#xA;&#xA;TRUNCATE TABLE IMPLT_products_measure&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_products_measure (Code_Product, Unit_Measure, Factor_Conversion, &#xA;Source_Create, Transfer_status, Status_SAP)&#xA;SELECT  DISTINCT    &#xA;REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') as Code_ofClient,  &#xA;Und_Empaque_Detalle as Unit_Measure, 1 as Factor_Conversion, '0' AS Source_Create, '1' AS transfer_status, &#xA;NULL  AS status_SAP&#xA;FROM    Materiales WHERE Und_Empaque_Detalle IS NOT NULL&#xA;UNION &#xA;SELECT  DISTINCT    &#xA;REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') as Code_ofClient,  &#xA;Und_Empaque_Almacen as Unit_Measure, Und_Empaque as Factor_Conversion, &#xA;'0' AS Source_Create, '1' AS transfer_status, &#xA;NULL  AS status_SAP&#xA;FROM    Materiales WHERE Und_Empaque_Almacen IS NOT NULL&#xA;GO&#xA;&#xA;&#xA;-- IMPLT_products_organization&#xA;&#xA;TRUNCATE TABLE IMPLT_products_organization&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_products_organization (Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Status, Unit_Box, &#xA;Unit_Type_Sales, Unit_Type_Inv, Factor_Conversion, Trazability, --Max_Discount, Quantity_Min, Price_Min, &#xA;Source_Create, Transfer_status, Status_SAP)&#xA;SELECT  DISTINCT    &#xA;REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') as Code_Product,  &#xA;'01' as Code_Unit_Org, &#xA;IMPLT_W_unit_sales_org.Code_Sales_Org as Code_Sales_Org, &#xA;'1' as Code_status, '1' as Unit_Box, Und_empaque_almacen as Unit_Type_Sales, &#xA;Und_empaque_detalle as Unit_Type_Inv, Und_Empaque as Factor_Conversion, '0' as Trazability, &#xA;--Maximo_Descuento as Max_Discount, &#xA;--Cantidad_Minimo_Venta as Quantity_Min,  Precio_Minimo_Venta as Price_Min, &#xA;'0' AS Source_Create, &#xA;'1' AS transfer_status, NULL  AS status_SAP&#xA;FROM    Materiales CROSS JOIN IMPLT_W_unit_sales_org&#xA;GO&#xA;&#xA;--IMPLT_hierarchy_all&#xA;TRUNCATE TABLE IMPLT_hierarchy_all&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_hierarchy_all]&#xA;           ([Code]&#xA;           ,[Description]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;     SELECT DISTINCT Codigo AS [Code]&#xA;           ,Descripcion AS [Description]&#xA;           ,'0' AS Source_Create, '1' AS transfer_status, &#xA;NULL  AS status_SAP&#xA;&#x9;&#x9;   FROM JerarquiaDeproductos&#xA;&#x9;&#x9;  &#xA;&#xA;--&#xA;--IMPLT_products_hierarchy2&#xA;TRUNCATE TABLE IMPLT_products_hierarchy2&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_products_hierarchy2]&#xA;           ([Code]&#xA;           ,[Code_Hierarchy1]&#xA;           ,[Description]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;  SELECT DISTINCT&#xA;  Codigo AS [Code]&#xA;           ,'01' AS [Code_Hierarchy1]&#xA;           ,Descripcion AS [Description]&#xA;           ,'0' AS Source_Create, '1' AS transfer_status, &#xA;NULL  AS status_SAP FROM JerarquiaDeproductos&#xA;WHERE LEN(Codigo) = 2&#xA;&#xA;--IMPLT_products_hierarchy3&#xA;TRUNCATE TABLE IMPLT_products_hierarchy3&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_products_hierarchy3]&#xA;           ([Code]&#xA;           ,[Code_Hierarchy1]&#xA;           ,[Code_Hierarchy2]&#xA;           ,[Description]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;    SELECT DISTINCT&#xA;substring(Codigo,3,2) AS [Code],&#xA;'01' AS [Code_Hierarchy1], &#xA;substring(Codigo,1,2)    AS Code_Hierarchy2,&#xA;           Descripcion AS [Description],&#xA;'0' AS Source_Create, '1' AS transfer_status, &#xA;NULL  AS status_SAP FROM JerarquiaDeproductos&#xA;WHERE LEN(Codigo) = 4 &#xA;&#xA;&#xA;--IMPLT_products_hierarchy4&#xA;TRUNCATE TABLE IMPLT_products_hierarchy4&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_products_hierarchy4]&#xA;           ([Code]&#xA;           ,[Code_Hierarchy1]&#xA;           ,[Code_Hierarchy2]&#xA;           ,[Code_Hierarchy3]&#xA;           ,[Description]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;SELECT DISTINCT substring(Codigo,5,2) AS [Code]&#xA;           ,'01' AS [Code_Hierarchy1]&#xA;           ,substring(Codigo,1,2) AS [Code_Hierarchy2]&#xA;           ,substring(Codigo,3,2) AS [Code_Hierarchy3]&#xA;           ,Descripcion AS [Description]&#xA;           ,'0' AS Source_Create, '1' AS transfer_status, &#xA;NULL  AS status_SAP FROM JerarquiaDeproductos&#xA;WHERE LEN(Codigo) = 6 &#xA;&#xA;&#xA;--IMPLT_products_hierarchy5&#xA;TRUNCATE TABLE IMPLT_products_hierarchy5&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_products_hierarchy5]&#xA;           ([Code]&#xA;           ,[Code_Hierarchy1]&#xA;           ,[Code_Hierarchy2]&#xA;           ,[Code_Hierarchy3],&#xA;&#x9;&#x9;   [Code_Hierarchy4]&#xA;           ,[Description]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;SELECT DISTINCT substring(Codigo,7,2) AS [Code]&#xA;           ,'01' AS [Code_Hierarchy1]&#xA;           ,substring(Codigo,1,2) AS [Code_Hierarchy2]&#xA;           ,substring(Codigo,3,2) AS [Code_Hierarchy3],&#xA;&#x9;&#x9;   substring(Codigo,5,2) AS [Code_Hierarchy4]&#xA;           ,Descripcion AS [Description]&#xA;           ,'0' AS Source_Create, '1' AS transfer_status, &#xA;NULL  AS status_SAP FROM JerarquiaDeproductos&#xA;WHERE LEN(Codigo) = 8 &#xA;&#xA;--IMPLT_products_hierarchy6&#xA;TRUNCATE TABLE IMPLT_products_hierarchy6&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_products_hierarchy6]&#xA;           ([Code]&#xA;           ,[Code_Hierarchy1]&#xA;           ,[Code_Hierarchy2]&#xA;           ,[Code_Hierarchy3],&#xA;&#x9;&#x9;   [Code_Hierarchy4],&#xA;&#x9;&#x9;   Code_Hierarchy5&#xA;           ,[Description]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;SELECT DISTINCT substring(Codigo,9,2) AS [Code]&#xA;           ,'01' AS [Code_Hierarchy1]&#xA;           ,substring(Codigo,1,2) AS [Code_Hierarchy2]&#xA;           ,substring(Codigo,3,2) AS [Code_Hierarchy3],&#xA;&#x9;&#x9;   substring(Codigo,5,2) AS [Code_Hierarchy4],&#xA;&#x9;&#x9;   substring(Codigo,7,2) AS [Code_Hierarchy5]&#xA;           ,Descripcion AS [Description]&#xA;           ,'0' AS Source_Create, '1' AS transfer_status, &#xA;NULL  AS status_SAP FROM JerarquiaDeproductos&#xA;WHERE LEN(Codigo) = 10 " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Promociones head org"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{252693F7-7246-4449-9C51-D97944BB3216}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Promociones head org"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="--promotions_head&#xA;TRUNCATE TABLE IMPLT_promotions_head&#xA;GO&#xA;&#xA;INSERT INTO [dbo].IMPLT_promotions_head&#xA;           (Code_ofClient,&#xA;           Description,&#xA;           Date_Ini,&#xA;           Date_End, Type,&#xA;           Order_Apply,&#xA;           Cumulative,&#xA;           Quantity_from,&#xA;           Quantity_Mult, Per_Client, Head_Table, Head_Line,&#xA;           Code_Type_Apply,&#xA;           Apply_to, &#xA;&#x9;&#x9;   Price_Gift,&#xA;&#x9;&#x9;   Apply_Val, Apply_Gift,&#xA;&#x9;&#x9;   Modificable,&#xA;&#x9;&#x9;   Activable,&#xA;&#x9;&#x9;   Quantity_Ini,&#xA;           Quantity_Fin, By_default, Only_onetime, Ex_group, Priority_Group,&#xA;&#x9;&#x9;   Quantity_Gift,&#xA;&#x9;&#x9;   Maximun_Gift, Code_Type_Client,&#xA;&#x9;&#x9;   Source_Create,&#xA;           Transfer_status,&#xA;           Status_SAP)&#xA;&#xA;SELECT DISTINCT&#xA;REGISTRO_CONDICION + '_' +&#xA;cast(ROW_NUMBER() OVER ( PARTITION BY REGISTRO_CONDICION &#xA;order by REGISTRO_CONDICION) as varchar(8)) as Code_ofClient,&#xA;REGISTRO_CONDICION AS Description,&#xA;convert(varchar, fecha_inicio,112)AS Date_Ini,&#xA;           convert(varchar, fecha_fin,112)AS Date_End,&#xA;&#x9;&#x9;   '09' AS Type,&#xA;CASE WHEN Nivel_Precio = 'A928' THEN 1 &#xA;ELSE CASE WHEN Nivel_Precio = 'A934' THEN 2 &#xA;ELSE CASE WHEN Nivel_Precio = 'A943' THEN 3 &#xA;ELSE CASE WHEN Nivel_Precio = 'A910' THEN 4 &#xA;ELSE CASE WHEN Nivel_Precio = 'A916' THEN 5 &#xA;ELSE CASE WHEN Nivel_Precio = 'A922' THEN 6 &#xA;&#xA;END END END END END END AS Order_Apply,&#xA;'1' AS Cumulative,&#xA;convert(decimal(15,3),CANT_DESDE) AS Quantity_from,&#xA;0.00 AS Quantity_Mult,&#xA;-1 AS Per_Client, &#xA;'1' AS Head_Table, '1' AS Head_Line,&#xA;'G' AS Code_Type_Apply,&#xA;CASE WHEN Nivel_Precio IN ('A928','A922') THEN '14' &#xA;ELSE CASE WHEN Nivel_Precio = 'A934' THEN '40' &#xA;ELSE CASE WHEN Nivel_Precio = 'A943' THEN '41' &#xA;ELSE CASE WHEN Nivel_Precio IN ('A910','A916') THEN '09' &#xA;END END END END AS Apply_To,&#xA;&#xA;-1 * PCTO_DESCUENTO AS Price_Gift,&#xA;&#xA;CASE WHEN Codigo_Material IS NOT NULL THEN '16'&#xA;ELSE CASE WHEN LEN(Jerarquia_Producto) = '2' THEN '18'&#xA;ELSE CASE WHEN LEN(Jerarquia_Producto) = '4' THEN '19'&#xA;ELSE CASE WHEN LEN(Jerarquia_Producto) = '6' THEN '76'&#xA;ELSE CASE WHEN LEN(Jerarquia_Producto) = '8' THEN '77'&#xA;ELSE CASE WHEN LEN(Jerarquia_Producto) = '10' THEN '78'&#xA;END END END END END END AS Apply_Val,&#xA;&#xA;CASE WHEN Codigo_Material IS NOT NULL THEN '16'&#xA;ELSE CASE WHEN LEN(Jerarquia_Producto) = '2' THEN '18'&#xA;ELSE CASE WHEN LEN(Jerarquia_Producto) = '4' THEN '19'&#xA;ELSE CASE WHEN LEN(Jerarquia_Producto) = '6' THEN '76'&#xA;ELSE CASE WHEN LEN(Jerarquia_Producto) = '8' THEN '77'&#xA;ELSE CASE WHEN LEN(Jerarquia_Producto) = '10' THEN '78'&#xA;END END END END END END AS Apply_Gift,&#xA;&#xA;'0' AS Modificable,&#xA;'0' AS Activable,&#xA;convert(decimal(15,3),CANT_DESDE) AS Quantity_Ini,&#xA;convert(decimal(15,3),CANT_HASTA)   AS Quantity_Fin,&#xA;'1' AS By_default,&#xA;'1' AS Only_onetime,&#xA;registro_condicion AS Ex_group,&#xA;0 AS Priority_Group,&#xA;0 AS Quantity_Gift,&#xA;0 AS Maximum_gift, clase_condicion AS Code_Type_Client,&#xA;'0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP&#xA;FROM Descuentos WHERE Nivel_Precio IN ('A928','A934','A943','A910','A916','A922')&#xA;&#xA;UNION&#xA;&#xA;SELECT DISTINCT&#xA;CODIGO_BONIFICACION_COMB + '-' + cast(ROW_NUMBER() &#xA;OVER (partition by CODIGO_BONIFICACION_COMB, Codigo_Material, Nivel_Precio&#xA;order by CODIGO_BONIFICACION_COMB) as varchar(8))&#xA; as Code_ofClient,&#xA;'BONIFICACION' + '' + CODIGO_BONIFICACION_COMB AS Description,&#xA;convert(varchar, fecha_inicio,112)AS Date_Ini,&#xA;           convert(varchar, fecha_fin,112)AS Date_End,&#xA;&#x9;&#x9;   '08' AS Type,&#xA;CASE WHEN Nivel_Precio IN ('ZP10','ZP15') THEN '1' &#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP30','ZP35') THEN '3' &#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP40','ZP45') THEN '2' &#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP50','ZP55') THEN '4' &#xA;END END END END AS Order_Apply,&#xA;'1' AS Cumulative,&#xA;max(convert(decimal(15,3),FACTOR_BONIFICAR)) AS Quantity_from,&#xA;max(convert(decimal(15,3),FACTOR_BONIFICAR)) AS Quantity_Mult,&#xA;-1 AS Per_Client, &#xA;'1' AS Head_Table, '1' AS Head_Line,&#xA;'G' AS Code_Type_Apply,&#xA;CASE WHEN Nivel_Precio IN ('ZP10','ZP15') THEN '14' &#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP40','ZP45') THEN '40' &#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP30','ZP35') THEN '41' &#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP50','ZP55') THEN '09' &#xA;END END END END AS Apply_To,&#xA;0.00 AS Price_Gift,&#xA;'16' AS Apply_Val,&#xA;'16' AS Apply_Gift, &#xA;'0' AS Modificable,&#xA;'0' AS Activable,&#xA;convert(decimal(15,3),CANT_MINIMA) AS Quantity_Ini,&#xA;convert(decimal(15,3),CANT_MAX)  AS Quantity_Fin,&#xA;'1' AS By_default,&#xA;'1' AS Only_onetime,&#xA;0 AS Ex_group,&#xA;0.00 AS Priority_Group,&#xA;UNIDADES_BONIFICAR AS Quantity_gift,&#xA;convert(decimal(15,3),CANT_MAX) AS Maximum_gift, NULL AS Code_Type_Client,&#xA;'0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP&#xA;FROM Bonificacion  WHERE Nivel_Precio IN ('ZP10','ZP15','ZP40','ZP45','ZP30','ZP35','ZP50','ZP55')&#xA;GROUP BY CODIGO_BONIFICACION_COMB, CODIGO_MATERIAL, NIVEL_PRECIO,&#xA;&#x9;CLIENTE, RAMO, ZONA, GRUPO_CLIENTE,&#xA;&#x9;FECHA_INICIO, FECHA_FIN,&#xA;CANT_MINIMA, CANT_MAX, UNIDADES_BONIFICAR&#xA;&#xA;--------------------------------------------------------------------------------&#xA;-------------------------------------------------------------------------------------------&#xA;--Promotions Organization&#xA;TRUNCATE TABLE IMPLT_promotions_organization&#xA;GO&#xA;&#xA;INSERT INTO [dbo].IMPLT_promotions_organization&#xA;           (Code_Promotion,&#xA;           Code_Unit_Org,&#xA;           Code_Sales_Org,&#xA;           Date_Ini,&#xA;           Date_End,&#xA;           Source_Create,&#xA;           Transfer_status,&#xA;           Status_SAP)&#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   SELECT DISTINCT&#xA;REGISTRO_CONDICION + '_' +&#xA;cast(ROW_NUMBER() OVER ( PARTITION BY REGISTRO_CONDICION,  IMPLT_W_unit_sales_org.Code_Sales_Org &#xA;order by REGISTRO_CONDICION) as varchar(8)) AS Code_Promotion,&#xA;'01' AS Code_Unit_Org,&#xA; IMPLT_W_unit_sales_org.Code_Sales_Org AS Code_Sales_Org,&#xA;           convert(varchar,fecha_inicio,112)AS Date_Ini,&#xA;           convert(varchar,fecha_fin,112)AS Date_End,&#xA;           '0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP&#xA;&#x9;&#x9;   FROM Descuentos CROSS JOIN IMPLT_W_unit_sales_org&#xA;&#x9;&#x9;    WHERE Nivel_Precio IN ('A928','A934','A943','A910','A916','A922')&#xA;&#x9;&#x9; &#xA;&#x9;&#x9;   UNION&#xA;&#x9;&#x9; &#xA;&#x9;&#x9;   &#x9;&#x9;   SELECT DISTINCT&#xA;CODIGO_BONIFICACION_COMB + '-' + cast(ROW_NUMBER() &#xA;OVER (partition by CODIGO_BONIFICACION_COMB, Codigo_Material, Nivel_Precio, IMPLT_W_unit_sales_org.Code_Sales_Org&#xA;order by CODIGO_BONIFICACION_COMB) as varchar(8))&#xA; as Code_Promotion,&#xA;'01' AS Code_Unit_Org,&#xA; IMPLT_W_unit_sales_org.Code_Sales_Org AS Code_Sales_Org,&#xA;           convert(varchar,fecha_inicio,112)AS Date_Ini,&#xA;           convert(varchar,fecha_fin,112)AS Date_End,&#xA;           '0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP&#xA;&#x9;&#x9;   FROM Bonificacion CROSS JOIN IMPLT_W_unit_sales_org&#xA;&#x9;&#x9;    WHERE Nivel_Precio IN ('ZP10','ZP15','ZP40','ZP45','ZP30','ZP35','ZP50','ZP55')&#xA;GROUP BY CODIGO_BONIFICACION_COMB, CODIGO_MATERIAL, NIVEL_PRECIO, IMPLT_W_unit_sales_org.Code_Sales_Org,&#xA;&#x9;CLIENTE, RAMO, ZONA, GRUPO_CLIENTE,&#xA;&#x9;FECHA_INICIO, FECHA_FIN,&#xA;CANT_MINIMA, CANT_MAX&#x9;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Promociones New"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C06D1147-DE8A-4EE3-83C3-ED1A9E43513A}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Promociones New"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="--------------------------------------------------------------------------&#xA;--------------------------------------------------------------------------&#xA;--Promotions Destiny&#xA;TRUNCATE TABLE IMPLT_promotions_destiny&#xA;GO&#xA;&#xA;INSERT INTO [dbo].IMPLT_promotions_destiny&#xA;           (Code_Promo,&#xA;           Code_Variable,&#xA;           Code_Entity,&#xA;           Source_Create,&#xA;           Transfer_status,&#xA;           Status_SAP)&#xA;&#x9;&#x9;  &#xA;SELECT DISTINCT&#xA;&#x9;&#x9;    REGISTRO_CONDICION + '_' +&#xA;cast(ROW_NUMBER() OVER ( PARTITION BY REGISTRO_CONDICION &#xA;order by REGISTRO_CONDICION) as varchar(8)) AS Code_Promo,&#xA;          CASE WHEN Nivel_Precio IN ('A928','A922') THEN '14' &#xA;ELSE CASE WHEN Nivel_Precio = 'A934' THEN '40' &#xA;ELSE CASE WHEN Nivel_Precio = 'A943' THEN '41' &#xA;ELSE CASE WHEN Nivel_Precio IN ('A910','A916') THEN '09' &#xA;END END END END AS Code_Variable,&#xA;            CASE WHEN Nivel_Precio IN ('A928','A922') THEN CLIENTE &#xA;ELSE CASE WHEN Nivel_Precio = 'A934' THEN RAMO &#xA;ELSE CASE WHEN Nivel_Precio = 'A943' THEN ZONA&#xA;ELSE CASE WHEN Nivel_Precio IN ('A910','A916') THEN GRUPO_CLIENTE&#xA;END END END END AS Code_Entity,         &#xA;           '0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP&#xA;&#x9;&#x9;   FROM Descuentos WHERE Nivel_Precio IN ('A928','A934','A943','A910','A916','A922')&#xA;UNION&#xA;&#xA; SELECT DISTINCT&#xA;CODIGO_BONIFICACION_COMB + '-' + cast(ROW_NUMBER() &#xA;OVER (partition by CODIGO_BONIFICACION_COMB, Codigo_Material, Nivel_Precio&#xA;order by CODIGO_BONIFICACION_COMB) as varchar(8)) AS Code_Promo,&#xA;CASE WHEN Nivel_Precio IN ('ZP10','ZP15') THEN '14' &#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP40','ZP45') THEN '40' &#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP30','ZP35') THEN '41' &#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP50','ZP55') THEN '09' &#xA;END END END END AS Code_Variable,&#xA;CASE WHEN Nivel_Precio IN ('ZP10','ZP15') THEN CLIENTE&#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP40','ZP45') THEN RAMO&#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP30','ZP35') THEN ZONA&#xA;ELSE CASE WHEN Nivel_Precio IN ('ZP50','ZP55') THEN GRUPO_CLIENTE&#xA;END END END END AS Code_Entity,         &#xA;           '0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP&#xA;&#x9;&#x9;   FROM Bonificacion &#xA;&#x9;&#x9;   WHERE Nivel_Precio IN ('ZP10','ZP15','ZP40','ZP45','ZP30','ZP35','ZP50','ZP55')&#xA;&#x9;GROUP BY CODIGO_BONIFICACION_COMB, CODIGO_MATERIAL, NIVEL_PRECIO, &#xA;&#x9;CLIENTE, RAMO, ZONA, GRUPO_CLIENTE,&#xA;&#x9;FECHA_INICIO, FECHA_FIN,&#xA;CANT_MINIMA, CANT_MAX&#x9;   &#xA;&#xA;----------------------------------------------------------------------------&#xA;--Promotions hierarchy&#xA; TRUNCATE TABLE IMPLT_promotions_hierarchy&#xA;GO    &#xA;INSERT INTO [dbo].IMPLT_promotions_hierarchy&#xA;           ([Code_Promotion]&#xA;           ,[Code_Variable]&#xA;           ,[Code_Entity]&#xA;           ,[Quantity]&#xA;           ,[Unit_Sales]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;&#x9;&#x9;   &#xA;SELECT DISTINCT&#xA;&#x9;&#x9; REGISTRO_CONDICION + '_' +&#xA;cast(ROW_NUMBER() OVER ( PARTITION BY REGISTRO_CONDICION &#xA;order by REGISTRO_CONDICION) as varchar(8)) AS  [Code_Promotion],&#xA; CASE WHEN Codigo_Material IS NOT NULL THEN  '16'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 2 THEN '18'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 4 THEN '19'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 6 THEN '76'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 8 THEN '77'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 10 THEN '78'&#xA; END END END END END END AS [Code_Variable],&#xA;&#xA; /*&#xA; CASE WHEN Codigo_Material IS NOT NULL THEN  '16'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 2 THEN Jerarquia_Producto&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 4 THEN Substring (JERARQUIA_PRODUCTO, 3,2)&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 6 THEN Substring (JERARQUIA_PRODUCTO, 5,2)&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 8 THEN Substring (JERARQUIA_PRODUCTO, 7,2)&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 10 THEN Substring (JERARQUIA_PRODUCTO, 9,2)&#xA; END END END END END END AS*/&#xA; REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') AS &#xA;  [Code_Entity],&#xA;           convert(decimal(15,3),CANT_DESDE) AS [Quantity]&#xA;           ,Unidad_Venta AS [Unit_Sales],&#xA;           '0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP&#xA;&#x9;&#x9;   FROM Descuentos WHERE Nivel_Precio IN ('A928','A934','A943','A910','A916','A922')&#xA;&#xA;UNION&#xA;&#xA; SELECT DISTINCT&#xA;CODIGO_BONIFICACION_COMB + '-' + cast(ROW_NUMBER() &#xA;OVER (partition by CODIGO_BONIFICACION_COMB, Codigo_Material, Nivel_Precio&#xA;order by CODIGO_BONIFICACION_COMB) as varchar(8)) AS  [Code_Promotion],&#xA;'16' AS [Code_Variable],&#xA;REPLACE(LTRIM(REPLACE(Codigo_Material,'0',' ')),' ','0') AS [Code_Entity],&#xA;         0.00 AS [Quantity],&#xA;           Unidad_Bonificacion AS [Unit_Sales],&#xA;           '0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP&#xA;&#x9;&#x9;   FROM Bonificacion&#xA;&#x9;&#x9;    WHERE Nivel_Precio IN ('ZP10','ZP15','ZP40','ZP45','ZP30','ZP35','ZP50','ZP55')&#xA;&#x9;&#x9;&#x9;GROUP BY CODIGO_BONIFICACION_COMB, CODIGO_MATERIAL, NIVEL_PRECIO, UNIDAD_BONIFICACION,&#xA;&#x9;CLIENTE, RAMO, ZONA, GRUPO_CLIENTE,&#xA;&#x9;FECHA_INICIO, FECHA_FIN,&#xA;CANT_MINIMA, CANT_MAX&#x9;&#xA;&#x9;&#x9;  &#xA;----------------------------------------------------------------------&#xA;----------------------------------------------------------------------&#xA;--Promotions Hierarchy Gift&#xA;TRUNCATE TABLE IMPLT_promotions_hier_gift&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_promotions_hier_gift]&#xA;           ([Code_Promotion]&#xA;           ,[Code_Variable]&#xA;           ,[Code_Entity]&#xA;           ,[Quantity]&#xA;           ,[Maximum_Gift]&#xA;           ,[Unit_Sales]&#xA;           ,[Price_Gift]&#xA;           ,[Code_Currency]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;&#x9;&#x9;   &#xA;SELECT &#xA;&#x9;&#x9; REGISTRO_CONDICION + '_' +&#xA;cast(ROW_NUMBER() OVER ( PARTITION BY REGISTRO_CONDICION &#xA;order by REGISTRO_CONDICION) as varchar(8)) AS  [Code_Promotion],&#xA; CASE WHEN Codigo_Material IS NOT NULL THEN  '16'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 2 THEN '18'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 4 THEN '19'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 6 THEN '76'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 8 THEN '77'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 10 THEN '78'&#xA; END END END END END END AS [Code_Variable],&#xA;&#xA; CASE WHEN Codigo_Material IS NOT NULL THEN  '16'&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 2 THEN Jerarquia_Producto&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 4 THEN Substring (JERARQUIA_PRODUCTO, 3,2)&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 6 THEN Substring (JERARQUIA_PRODUCTO, 5,2)&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 8 THEN Substring (JERARQUIA_PRODUCTO, 7,2)&#xA; ELSE CASE WHEN LEN(Jerarquia_Producto) = 10 THEN Substring (JERARQUIA_PRODUCTO, 9,2)&#xA; END END END END END END AS [Code_Entity],&#xA;           0.00 AS [Quantity],&#xA;&#x9;&#x9;   -1 AS Maximum_Gift,&#xA;&#x9;&#x9;   Unidad_Venta AS [Unit_Sales],&#xA;&#x9;&#x9;   PCTO_DESCUENTO AS Price_gift,&#xA;&#x9;&#x9;   'PE' AS Code_currency,&#xA;           '0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP&#xA;&#x9;&#x9;   FROM Descuentos WHERE Nivel_Precio IN ('A928','A934','A943','A910','A916','A922')&#xA;&#xA;UNION&#xA;&#xA;  SELECT DISTINCT&#xA; CODIGO_BONIFICACION_COMB + '-' + cast(ROW_NUMBER() &#xA;OVER (partition by CODIGO_BONIFICACION_COMB, Codigo_Material, Nivel_Precio&#xA;order by CODIGO_BONIFICACION_COMB) as varchar(8)) AS  [Code_Promotion],&#xA;'16' AS [Code_Variable],&#xA;REPLACE(LTRIM(REPLACE(CODIGO_MATERIAL_BONIF,'0',' ')),' ','0') AS [Code_Entity],&#xA;UNIDADES_BONIFICAR AS [Quantity],&#xA;convert(decimal(15,3),CANT_MAX) AS Maximum_Gift,&#xA;UNIDAD_BONIFICAR AS [Unit_Sales],&#xA;&#x9;&#x9;   0.00 AS Price_gift,&#xA;&#x9;&#x9;   'PE' AS Code_currency,&#xA;           '0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP&#xA;&#x9;&#x9;   FROM Bonificacion&#xA;&#x9;&#x9;    WHERE Nivel_Precio IN ('ZP10','ZP15','ZP40','ZP45','ZP30','ZP35','ZP50','ZP55')&#xA;GROUP BY CODIGO_BONIFICACION_COMB, CODIGO_MATERIAL, NIVEL_PRECIO, FECHA_INICIO, FECHA_FIN,&#xA;&#x9;CLIENTE, RAMO, ZONA, GRUPO_CLIENTE,&#xA;CANT_MINIMA, CANT_MAX, CODIGO_MATERIAL_BONIF, UNIDADES_BONIFICAR, UNIDAD_BONIFICAR&#xA;&#x9;&#x9;   ------------------------------------------------------&#xA;-----------------------------------------------------------------&#xA;--Promotions IMPLT_promotions_sellers&#xA; TRUNCATE TABLE IMPLT_promotions_sellers&#xA;GO   &#xA;     &#xA;INSERT INTO [dbo].[IMPLT_promotions_sellers]&#xA;           ([Code_Promotion]&#xA;           ,[Code_Seller]&#xA;           ,[Quantity]&#xA;           ,[Date_Ini]&#xA;           ,[Date_End]&#xA;           ,[Modificable]&#xA;           ,[Activable]&#xA;           ,[Quantity_Ini]&#xA;           ,[Quantity_End]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;&#x9;&#x9;   &#xA;SELECT  &#xA; REGISTRO_CONDICION + '_' +&#xA;cast(ROW_NUMBER() OVER ( PARTITION BY REGISTRO_CONDICION &#xA;order by REGISTRO_CONDICION) as varchar(8)) AS [Code_Promotion],&#xA;CASE WHEN RUTA.Conductor IS NULL THEN 9999&#xA;ELSE RUTA.Conductor END AS [Code_Seller],&#xA;        999999 AS   [Quantity],&#xA;    convert(varchar,fecha_inicio,112)AS Date_Ini,&#xA;           convert(varchar,fecha_fin,112)AS Date_End,&#xA;       '0' AS    [Modificable],&#xA;       '0' AS    [Activable],&#xA;  CANT_DESDE AS         [Quantity_Ini],&#xA;           CANT_HASTA AS [Quantity_End],&#xA;           '0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP FROM descuentos &#xA;&#x9;&#x9;   LEFT JOIN ruta ON descuentos.ruta = ruta.ruta&#xA;&#x9;&#x9;   WHERE Nivel_Precio IN ('A928','A934','A943','A910','A916','A922')&#xA;UNION&#xA;&#xA;SELECT DISTINCT&#xA; CODIGO_BONIFICACION_COMB + '-' + cast(ROW_NUMBER() &#xA;OVER (partition by CODIGO_BONIFICACION_COMB, Codigo_Material, Nivel_Precio&#xA;order by CODIGO_BONIFICACION_COMB) as varchar(8)) AS [Code_Promotion],&#xA;          9999 AS [Code_Seller],&#xA;        999999 AS   [Quantity],&#xA;    convert(varchar,fecha_inicio,112)AS Date_Ini,&#xA;           convert(varchar,fecha_fin,112)AS Date_End,&#xA;       '0' AS    [Modificable],&#xA;       '0' AS    [Activable],&#xA;convert(decimal(15,3),CANT_MINIMA) AS         [Quantity_Ini],&#xA;convert(decimal(15,3),CANT_MAX) AS [Quantity_End],&#xA;           '0' AS Source_Create,&#xA;           1 AS Transfer_status,&#xA;           0 AS Status_SAP FROM bonificacion &#xA;&#x9;&#x9;    WHERE Nivel_Precio IN ('ZP10','ZP15','ZP40','ZP45','ZP30','ZP35','ZP50','ZP55')&#xA;&#x9;&#x9;&#x9;GROUP BY CODIGO_BONIFICACION_COMB, CODIGO_MATERIAL, NIVEL_PRECIO, FECHA_INICIO, FECHA_FIN,&#xA;&#x9;&#x9;&#x9;&#x9;CLIENTE, RAMO, ZONA, GRUPO_CLIENTE,&#xA;CANT_MINIMA, CANT_MAX, CODIGO_MATERIAL_BONIF, UNIDADES_BONIFICAR, UNIDAD_BONIFICAR&#x9;   &#xA;------------------------------------------------------------------------------------------------&#xA;------------------------------------------------------------------------------------------------&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Promociones viejo"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Promociones"
      DTS:Disabled="True"
      DTS:DTSID="{E2D4CFF0-ECD8-416C-AEFA-4F9550276B14}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Promociones viejo"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="-- GRUPOS OBJETIVO DE CLIENTES&#xA;&#xA;-- IMPLT_target_accounts_header&#xA;&#xA;TRUNCATE TABLE IMPLT_target_accounts_header&#xA;GO&#xA;&#xA;INSERT INTO  IMPLT_target_accounts_header (Code_Group, Description, Code_Unit_Org, Code_Sales_Org,  Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT Compania + Division + Grupo_cliente as Code_Group, left(Descripcion,50) as Description, Compania as Code_Unit_Org, Compania + Division Code_Sales_Org,&#xA; '0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;FROM        grupo_cliente_promo_header&#xA;where Compania = '01'&#xA;GO  &#xA;&#xA;&#xA;-- IMPLT_target_accounts_detail&#xA;&#xA;TRUNCATE TABLE IMPLT_target_accounts_detail&#xA;GO&#xA;&#xA;INSERT INTO  IMPLT_target_accounts_detail (Code_Account, Code_Unit_Org, Code_Sales_Org,  Code_Group, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT Compania + Cliente as Code_Account, Compania as Code_Unit_Org, Compania + Division Code_Sales_Org, Compania + Division + Grupo_cliente as Code_Group,  &#xA; '0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;FROM        grupo_cliente_promo_detail&#xA;where Compania = '01'&#xA;GO  &#xA;&#xA;&#xA;-- PROMOCIONES&#xA;&#xA;UPDATE promociones_header set type = NULL&#xA;GO&#xA;&#xA;-- IMPLT_promotions_head&#xA;&#xA;TRUNCATE TABLE IMPLT_promotions_head&#xA;GO&#xA;&#xA;-- Tomamos como tipo 30 las de Producto que no tienen rangos de regalo&#xA;update promociones_header set Type = '30' &#xA;from promociones_header as PH INNER JOIN&#xA;promociones_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;PH.Secuencia = PD.Secuencia AND PH.tipo_promocion = PD.tipo_promocion AND &#xA;PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE        (PH.tipo_promocion = 'P') AND (ISNULL(PD.Cantidad_desde, 0) + ISNULL(PD.Cantidad_hasta, 0) &#xA; + ISNULL(PD.Monto_desde, 0) + ISNULL(PD.Monto_hasta, 0) = 0) AND (PH.Type IS NULL)&#xA;GO&#xA;&#xA;update promociones_header set Type = '30' &#xA;from promociones_header as PH INNER JOIN&#xA;promociones_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;PH.Secuencia = PD.Secuencia AND PH.tipo_promocion = PD.tipo_promocion AND &#xA;PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE        (PH.tipo_promocion = 'P') AND (ISNULL(PD.Monto_desde, 0) + ISNULL(PD.Monto_hasta, 0) = 0) AND (PH.Type IS NULL)&#xA;GO&#xA;&#xA;update promociones_header set Type = '31' &#xA;from promociones_header as PH INNER JOIN&#xA;promociones_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;PH.Secuencia = PD.Secuencia AND PH.tipo_promocion = PD.tipo_promocion AND &#xA;PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE        (PH.tipo_promocion = 'P') AND (ISNULL(PD.Cantidad_desde, 0) + ISNULL(PD.Cantidad_hasta, 0)  = 0) AND (PH.Type IS NULL)&#xA;GO&#xA;&#xA;&#xA;-- Tomamos como tipo 23 las de Descuento que no tienen rangos de regalo&#xA;update promociones_header set Type = '32' &#xA;from promociones_header as PH INNER JOIN&#xA;descuento_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE        (PH.tipo_promocion = 'E') AND (cast(ISNULL(PD.Cantidad_desde, 0) as numeric(18,0)) + cast(ISNULL(PD.Cantidad_hasta, 0) as numeric(18,0)) &#xA;                         + cast(ISNULL(PD.Monto_desde, 0.00) as numeric(15,3)) + cast(ISNULL(PD.Monto_hasta, 0.00) as numeric(15,3)) = 0) AND (PH.Type IS NULL) and PD.nivel_precio is null&#xA;GO&#xA;&#xA;update promociones_header set Type = '32' &#xA;from promociones_header as PH INNER JOIN&#xA;descuento_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;PH.Secuencia = PD.Secuencia AND PH.tipo_promocion = PD.tipo_promocion AND &#xA;PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE        (PH.tipo_promocion = 'E') AND (cast(ISNULL(PD.Monto_desde, 0.00) as numeric(15,3)) + cast(ISNULL(PD.Monto_hasta, 0.00) as numeric(15,3)) = 0) AND (PH.Type IS NULL) and PD.nivel_precio is null&#xA;GO&#xA;&#xA;&#xA;update promociones_header set Type = '33' &#xA;from promociones_header as PH INNER JOIN&#xA;Descuento_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;PH.Secuencia = PD.Secuencia AND PH.tipo_promocion = PD.tipo_promocion AND &#xA;PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE        (PH.tipo_promocion = 'E') AND (cast(ISNULL(PD.Cantidad_desde, 0) as numeric(18,0)) + cast(ISNULL(PD.Cantidad_hasta, 0) as numeric(18,0)) = 0) AND (PH.Type IS NULL) and PD.nivel_precio is null&#xA;GO&#xA;&#xA;-- Tomamos como tipo 25 las de Descuento que no tienen rangos de regalo&#xA;update promociones_header set Type = '34' &#xA;from promociones_header as PH INNER JOIN&#xA;descuento_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;PH.Secuencia = PD.Secuencia AND PH.tipo_promocion = PD.tipo_promocion AND &#xA;PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE        (PH.tipo_promocion = 'E') AND (cast(ISNULL(PD.Cantidad_desde, 0) as numeric(18,0)) + cast(ISNULL(PD.Cantidad_hasta, 0) as numeric(18,0)) &#xA;                         + cast(ISNULL(PD.Monto_desde, 0.00) as numeric(15,3)) + cast(ISNULL(PD.Monto_hasta, 0.00) as numeric(15,3)) = 0) AND (PH.Type IS NULL) and PD.nivel_precio is not null&#xA;GO&#xA;&#xA;update promociones_header set Type = '34' &#xA;from promociones_header as PH INNER JOIN&#xA;descuento_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;PH.Secuencia = PD.Secuencia AND PH.tipo_promocion = PD.tipo_promocion AND &#xA;PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE        (PH.tipo_promocion = 'E') AND (cast(ISNULL(PD.Monto_desde, 0.00) as numeric(15,3)) + cast(ISNULL(PD.Monto_hasta, 0.00) as numeric(15,3)) = 0) AND (PH.Type IS NULL) and PD.nivel_precio is not null&#xA;GO&#xA;&#xA;&#xA;update promociones_header set Type = '35' &#xA;from promociones_header as PH INNER JOIN&#xA;descuento_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;PH.Secuencia = PD.Secuencia AND PH.tipo_promocion = PD.tipo_promocion AND &#xA;PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE        (PH.tipo_promocion = 'E') AND (cast(ISNULL(PD.Cantidad_desde, 0) as numeric(18,0)) + cast(ISNULL(PD.Cantidad_hasta, 0) as numeric(18,0)) = 0) AND (PH.Type IS NULL) and PD.nivel_precio is not null&#xA;GO&#xA;&#xA;&#xA;INSERT INTO IMPLT_promotions_head (Code, Code_ofClient, Description, Date_Ini, Date_End, Apply_to, Type, Order_Apply, Cumulative, Quantity_from, Quantity_Mult, Maximun_Gift, Price_Gift, Unit_Sales, Per_Client, &#xA;                         Condition_List, Head_Table, Head_Line, Modificable, Activable, By_Default, Only_OneTime, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT &#xA;                         '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5&#xA;                          - LEN(PH.Promocion)), ' ', '0') + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') &#xA;                         + PH.Secuencia AS Code, REPLACE(SPACE(5 - LEN(PH.Promocion)), ' ', '0') &#xA;                         + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') + PH.Secuencia AS Code_ofClient, &#xA;                         'Promo: ' + PH.Promocion + ' - Sec: ' + PH.Secuencia AS Description, CONVERT(char(8), &#xA;                         PH.Fecha_inicio, 112) AS Date_Ini, CONVERT(char(8), PH.Fecha_fin, 112) AS Date_End, case when PH.grupo_cliente is null then '14' else '68' end AS Apply_to, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Type, 1 as Order_Apply, '1' as Cumulative, cast(PH.Factor_cantidad as numeric(11,3)) as Quantity_from, cast(PH.Factor_cantidad as numeric(11,3)) as Quantity_Mult,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; -1 as Maximun_Gift, cast(PH.Factor_monto as numeric(11,3)) as Price_Gift, 'UN' as Unit_Sales, case when PH.Primera_compra is null then -1 else 1 end Per_Client,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; case when PH.Tipo_factor = 'SIN_DESCUENTO' then '1' when PH.Tipo_factor = 'CON_DESCUENTO' then '2' when PH.Tipo_factor = 'CON_ITBIS' then '3' else PH.Tipo_factor end as Condition_List,&#xA;                         '1' as Head_Table, '1' as Head_Line,  '0' as Modificable, '0' as Activable, '1' as By_Default, '1' as Only_OneTime, '0' as Source_Create, '0' AS transfer_status, NULL as status_SAP  &#xA;FROM            promociones_header as PH INNER JOIN&#xA;                         promociones_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;                         PH.Secuencia = PD.Secuencia AND PH.tipo_promocion = PD.tipo_promocion AND &#xA;                         PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE PH.Compania = '01'&#xA;UNION&#xA;SELECT &#xA;                         '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5&#xA;                          - LEN(PH.Promocion)), ' ', '0') + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') &#xA;                         + PH.Secuencia AS Code, REPLACE(SPACE(5 - LEN(PH.Promocion)), ' ', '0') &#xA;                         + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') + PH.Secuencia AS Code_ofClient, &#xA;                         'Promo: ' + PH.Promocion + ' - Sec: ' + PH.Secuencia AS Description, CONVERT(char(8), &#xA;                         PH.Fecha_inicio, 112) AS Date_Ini, CONVERT(char(8), PH.Fecha_fin, 112) AS Date_End, case when PH.grupo_cliente is null then '14' else '68' end  AS Apply_to, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; Type, 1 as Order_Apply, '1' as Cumulative, cast(PH.Factor_cantidad as numeric(11,3)) as Quantity_from, cast(PH.Factor_cantidad as numeric(11,3)) as Quantity_Mult,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; -1 as Maximun_Gift, cast(PH.Factor_monto as numeric(11,3)) as Price_Gift, 'UN' as Unit_Sales, case when PH.Primera_compra is null then -1 else 1 end Per_Client,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; case when PH.Tipo_factor = 'SIN_DESCUENTO' then '1' when PH.Tipo_factor = 'CON_DESCUENTO' then '2' when PH.Tipo_factor = 'CON_ITBIS' then '3' else PH.Tipo_factor end as Condition_List,&#xA;                         '1' as Head_Table, '1' as Head_Line,  '0' as Source_Create, '0' as Modificable, '0' as Activable, '1' as By_Default, '1' as Only_OneTime, '1' AS transfer_status, NULL as status_SAP  &#xA;FROM            promociones_header as PH INNER JOIN&#xA;                         descuento_detail as PD ON PH.Promocion = PD.Promocion AND &#xA;                         PH.Secuencia = PD.Secuencia AND PH.tipo_promocion = PD.tipo_promocion AND &#xA;                         PH.Division = PD.Division AND PH.Compania = PD.Compania&#xA;WHERE PH.Compania = '01'&#xA;GO&#xA;&#xA;&#xA;&#xA;-- IMPLT_promotions_products&#xA;&#xA;TRUNCATE TABLE IMPLT_promotions_products&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_promotions_products  (Code_Promotion, Code_Product, Unit_Sales, Quantity, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT        '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5 - LEN(PH.Promocion)), ' ', '0') &#xA;                         + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') + PH.Secuencia AS Code_Promotion, GAD.Compania + GAD.Articulo AS Code_Product, 'UN' AS Unit_Sales, &#xA;                         CASE WHEN GAH.Requiere_cantidad_articulo = 'X' THEN Cantidad ELSE NULL END AS Quantity, '0' AS Source_Create, '1' AS transfer_status, &#xA;                         NULL AS status_SAP&#xA;FROM            promociones_header AS PH INNER JOIN&#xA;                         grupo_articulo_promo_header AS GAH ON PH.Compania = GAH.Compania AND PH.Division = GAH.Division AND &#xA;                         PH.Grupo_articulo = GAH.Grupo_articulo INNER JOIN&#xA;                         grupo_articulo_promo_detail AS GAD ON PH.Compania = GAD.Compania AND PH.Division = GAD.Division AND &#xA;                         PH.Grupo_articulo = GAD.Grupo_articulo &#xA;WHERE        (PH.Articulo IS NULL) and PH.Compania = '01'&#xA;UNION&#xA;SELECT        '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5 - LEN(PH.Promocion)), ' ', '0') &#xA;                         + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') + PH.Secuencia AS Code_Promotion, PH.Compania + PH.Articulo AS Code_Product, 'UN' AS Unit_Sales, &#xA;                         PH.Factor_cantidad AS Quantity, '0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;FROM            STDB_Corripio_Prod.dbo.promociones_header AS PH &#xA;WHERE        (PH.Articulo IS NOT NULL) and Compania = '01'&#xA;GO&#xA;&#xA;&#xA;-- IMPLT_promotions_destiny&#xA;&#xA;TRUNCATE TABLE IMPLT_promotions_destiny&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_promotions_destiny (Code_Promotion, Code_Variable, Code, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT    '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5&#xA;                          - LEN(PH.Promocion)), ' ', '0') + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') &#xA;                         + PH.Secuencia AS Code_Promo,  '14' as Code_Variable, PH.Compania + PH.Cliente as Code, '0' as Source_Create, '1' AS transfer_status, NULL as status_SAP   &#xA;FROM            promociones_header as PH &#xA;where cliente is not null and Compania = '01'&#xA;UNION&#xA;SELECT        '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5 - LEN(PH.Promocion)), ' ', '0') &#xA;                         + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') + PH.Secuencia AS Code_Promo, '68' AS Code_Variable, PH.Compania + PH.Division +&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  Grupo_Cliente as Code,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '0' as Source_Create, '1' AS transfer_status, NULL as status_SAP&#xA;FROM            promociones_header AS PH &#xA;where PH.Grupo_Cliente is not null and Compania = '01'&#xA;GO&#xA;&#xA;&#xA;-- IMPLT_promotions_organization&#xA;&#xA;TRUNCATE TABLE IMPLT_promotions_organization&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_promotions_organization (Code_Promotion, Code_Unit_Org, Code_Sales_Org, Date_Ini, Date_End, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT &#xA;                         '1' + Compania + Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5 - LEN(Promocion)), ' ', '0') &#xA;                         + Promocion + REPLACE(SPACE(3 - LEN(Secuencia)), ' ', '0') + Secuencia AS Code, Compania AS Code_Unit_Org, Compania + Division AS Code_Sales_Org, &#xA;                         CONVERT(char(8), Fecha_inicio, 112) AS Date_Ini, CONVERT(char(8), Fecha_fin, 112) AS Date_End, '0' AS Source_Create, '1' AS transfer_status, &#xA;                         NULL AS status_SAP&#xA;FROM            STDB_Corripio_Prod.dbo.promociones_header AS PH&#xA;GO&#xA;&#xA;&#xA;&#xA;--  IMPLT_promotions_sellers&#xA;&#xA;TRUNCATE TABLE  IMPLT_promotions_sellers&#xA;GO&#xA;&#xA;INSERT INTO  IMPLT_promotions_sellers (Code_Promotion, Code_Seller, Guid_Prom, Quantity, Date_Ini, Date_End, Modificable, Activable, Quantity_Ini, Quantity_End, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT Code_Promotion, Code_Seller, 100000000 + ROW_NUMBER() OVER (ORDER BY Code_Promotion, Code_Seller) as Guid_Prom, Quantity, Date_Ini, Date_End, Modificable, Activable, Quantity_Ini, Quantity_End, Source_Create, Transfer_status, Status_SAP FROM&#xA;(SELECT    '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5&#xA;                          - LEN(PH.Promocion)), ' ', '0') + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') &#xA;                         + PH.Secuencia AS Code_Promotion,  CC.Compania + CC.Cliente_Portal as Code_Seller, NULL as Quantity, replace(Fecha_inicio,'-','') as Date_Ini, replace(Fecha_fin,'-','') as Date_End,  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '0' as Modificable, '0' as Activable, NULL as Quantity_Ini, NULL as Quantity_End, '0' as Source_Create, '1' AS transfer_status, NULL as status_SAP   &#xA;FROM          promociones_header as PH INNER JOIN (SELECT Cliente, Compania, Division, Cliente_Portal FROM Cliente WHERE Cliente_Portal is not NULL) as CC&#xA;ON PH.Compania = CC.Compania and PH.Division = CC.Division and PH.Cliente = CC.Cliente &#xA;where PH.cliente is not null &#xA;UNION&#xA;SELECT        '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5 - LEN(PH.Promocion)), ' ', '0') &#xA;                         + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') + PH.Secuencia AS Code_Promotion, CC.Compania + CC.Cliente_Portal as Code_Seller, NULL as Quantity, replace(Fecha_inicio,'-','') as Date_Ini, replace(Fecha_fin,'-','') as Date_End,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '0' as Modificable, '0' as Activable, NULL as Quantity_Ini, NULL as Quantity_End, '0' as Source_Create, '1' AS transfer_status, NULL as status_SAP&#xA;FROM            promociones_header AS PH INNER JOIN&#xA;                         grupo_cliente_promo_detail AS GCP ON PH.Compania = GCP.Compania AND PH.Division = GCP.Division AND &#xA;                         PH.Grupo_cliente = GCP.Grupo_cliente INNER JOIN (SELECT Cliente, Compania, Division, Cliente_Portal FROM Cliente WHERE Cliente_Portal is not NULL) as CC&#xA;&#x9;&#x9;&#x9;&#x9;ON CC.Compania = GCP.Compania and CC.Division = GCP.Division and CC.Cliente = GCP.Cliente &#xA;where PH.cliente is null) as PS &#xA;GO&#xA;&#xA;&#xA;&#xA;-- IMPLT_promotions_gift&#xA;&#xA;TRUNCATE TABLE  IMPLT_promotions_gift&#xA;GO&#xA;&#xA;INSERT INTO  IMPLT_promotions_gift(Code_Promotion, Code_Product_Gift, Num_Line, Quantity_from, Quantity_to,  Amount_from,Amount_Gift,  Discount, Price_Level, Price, Quantity_Gift, Amount_to, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT       '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5 - LEN(PH.Promocion)), ' ', '0') &#xA;                         + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') + PH.Secuencia AS Code_Promotion, &#xA;                         IMPLT_promotions_products.Code_Product AS Code_Product_Gift, NULL as Num_Line, cast(PH.Cantidad_desde as numeric(11,3)) AS Quantity_from, cast(left(PH.Cantidad_hasta,8) as numeric(11,3)) AS Quantity_to, &#xA;                         cast(PH.Monto_desde as numeric(11,3)) AS Amount_from, NULL AS Amount_gift, cast(PH.Descuento as numeric(11,3)) AS Discount, PH.Nivel_precio AS Price_Level, NULL as Price, NULL AS Quantity_Gift, &#xA;                         right(PH.Monto_hasta,11) AS Amount_to, '0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP&#xA;FROM           descuento_detail AS PH INNER JOIN&#xA;                         IMPLT_promotions_products ON &#xA;                         '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5 - LEN(PH.Promocion)), ' ', '0') &#xA;                         + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') + PH.Secuencia = IMPLT_promotions_products.Code_Promotion&#xA;WHERE PH.Compania = '01'&#xA;UNION&#xA;SELECT        '1' + PH.Compania + PH.Division + CASE WHEN PH.tipo_promocion = 'P' THEN '1' ELSE '2' END + REPLACE(SPACE(5 - LEN(PH.Promocion)), ' ', '0') &#xA;                         + PH.Promocion + REPLACE(SPACE(3 - LEN(PH.Secuencia)), ' ', '0') + PH.Secuencia AS Code_Promotion, PH.Compania + PH.Articulo as Code_Product_Gift, NULL as Num_Line, cast(PH.Cantidad_desde as numeric(11,3)) AS Quantity_from, &#xA;                         cast(left(PH.Cantidad_hasta,8) as numeric(11,3)) AS Quantity_to, cast(PH.Monto_desde as numeric(11,3)) AS Amount_from, cast(Cantidad as numeric(11,3)) AS Amount_gift, cast(PH.Descuento as numeric(11,3)) AS Discount, NULL as Price_Level, Precio as Price, cast(PH.Cantidad as numeric(11,3)) AS Quantity_Gift, &#xA;                         cast(left(PH.Monto_hasta,8) as numeric(11,3)) AS Amount_to, '0' AS Source_Create, '1' AS transfer_status, NULL AS status_SAP &#xA;FROM            promociones_detail AS PH&#xA;WHERE PH.Compania = '01' &#xA;GO&#xA;&#xA;&#xA;&#xA;update       IMPLT_promotions_gift set Quantity_from = 1, Quantity_to = 9999999, Num_line = 1&#xA;WHERE        (Code_Promotion IN&#xA;                             (SELECT        Code&#xA;                               FROM            IMPLT_promotions_head&#xA;                               WHERE        (Type IN ('30', '32', '34')))) AND ((Quantity_from IS NULL) OR&#xA;                         (Quantity_to IS NULL)) &#xA;GO&#xA;&#xA;update       IMPLT_promotions_gift set Amount_from = 1, Amount_to = 9999999, Num_line = 1&#xA;WHERE        (Code_Promotion IN&#xA;                             (SELECT        Code&#xA;                               FROM            IMPLT_promotions_head&#xA;                               WHERE        (Type IN ('31', '33', '35')))) AND ((Amount_from IS NULL) OR&#xA;                         (Amount_to IS NULL)) and (Code_Promotion = '101028200204001')&#xA;GO&#xA;&#xA;update       IMPLT_promotions_gift set Num_line = Quantity_from  &#xA;WHERE        (Code_Promotion IN&#xA;                             (SELECT        Code&#xA;                               FROM            IMPLT_promotions_head&#xA;                               WHERE        (Type IN ('30', '32', '34')))) AND Num_Line is null &#xA;GO&#xA;&#xA;update       IMPLT_promotions_gift set Num_line = Amount_from  &#xA;WHERE        (Code_Promotion IN&#xA;                             (SELECT        Code&#xA;                               FROM            IMPLT_promotions_head&#xA;                               WHERE        (Type IN ('31', '33', '35')))) AND Num_Line is null &#xA;GO&#xA;&#xA;&#xA;&#xA;-- IMPLT_promotions_conf&#xA;&#xA;TRUNCATE TABLE IMPLT_promotions_conf&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_promotions_conf (Code_Unit_Org, Code_Sales_Org, Cumulative, Source_Create, transfer_status, status_SAP)&#xA;SELECT    Compania as Code_Unit_Org, Compania + Divison as Code_Sales_Org, case when Acumula_Tasa_Dto = 'X' then '1' else '0' end as Cumulative,&#xA;'0' as Source_Create, '0' AS transfer_status, NULL as status_SAP&#xA;FROM   Divisiones&#xA;where Compania = '01'&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Status"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5d8a818b-2def-47a5-a7c5-52fae7c61e55}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Status"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE IMPLT_order_status&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_order_status]&#xA;           ([Order_Num]&#xA;           ,[Code_seller]&#xA;           ,[Code_Status]&#xA;           ,[Transfer_status])&#xA; SELECT   nro_pedido AS [Order_Num]&#xA;           ,ruta AS [Code_seller]&#xA;           ,estado AS [Code_Status]&#xA;           ,1 AS [Transfer_status]&#xA;&#x9;&#x9;   FROM EstadoPedido&#xA;-----------------------------------------------&#xA;TRUNCATE TABLE IMPLT_status_descrip&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_status_descrip]&#xA;           ([Code_Status]&#xA;           ,[Description]&#xA;           ,[Transfer_Status])&#xA;     SELECT  Estado AS [Code_Status]&#xA;           ,Descripcion AS [Description]&#xA;           ,1 AS [Transfer_Status]&#xA;&#x9;&#x9;   FROM Estados_Descrip&#xA;&#xA;-----------------------------------------------&#xA;TRUNCATE TABLE IMPLT_des_array&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_des_array]&#xA;           ([Motivo]&#xA;           ,[Descripcion])&#xA;SELECT [Motivo]&#xA;           ,[Descripcion] FROM Motivos_Devolucion" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\target_sales_head"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2F0B4CCD-FEFB-4B57-AB90-9C65366BD4E8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="target_sales_head"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="----Llenar la target_sales_head---&#xA;TRUNCATE TABLE IMPLT_target_sales_head&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_target_sales_head (&#xA;Code,Code_ofClient,Code_Family,Description,Date_Ini,Date_End,Code_Type,Code_Level,&#xA;Amount,Unit_Sales,Code_Status,Apply_Val)&#xA;select distinct &#xA;Ruta AS Code, RUTA as Code_ofClient, NULL as Code_Family, DESCRIPCION as Description, &#xA;'20210101' as Date_Ini, '99999999' as Date_End, &#xA;'1' as Code_Type, NULL as Code_Level, VALOR as Amount, NULL as Unit_Sales&#xA;, 1 as Code_Status, NULL as Apply_Val&#xA;from Ruta&#xA;inner join Cuota_Ventas on right(RUTA.Ruta,3)=Cuota_Ventas.ZONA&#xA;where Cuota_Ventas.Familia is null&#xA;&#xA;UNION&#xA;&#xA;SELECT DISTINCT Ruta AS Code,RUTA as Code_ofClient, Familia_productos.Familia as Code_Family, &#xA;Familia_productos.descripcion as Description, '20210101' as Date_Ini, '99999999' as Date_End, &#xA;'2' as Code_Type, NULL as Code_Level, VALOR as Amount, NULL as Unit_Sales,&#xA;1 as Code_Status, NULL as Apply_Val &#xA;from RUTA&#xA;INNER JOIN Cuota_ventas on right(RUTA.Ruta,3) = Cuota_ventas.ZONA&#xA;INNER JOIN Familia_productos on Familia_Productos.familia = Cuota_ventas.familia" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Vendedores y Rutas"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Vendedores y Rutas"
      DTS:DTSID="{FB93819A-3A81-49C1-A837-212203889EE3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Vendedores y Rutas"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{CB917D9C-2D2C-42B0-AF60-036E8B06B9C2}"
          SQLTask:SqlStatementSource="-- IMPLT_sellers&#xA;&#xA;TRUNCATE TABLE IMPLT_sellers&#xA;GO&#xA;&#xA;INSERT INTO IMPLT_sellers (Code_Seller, Name, Type, Code_Warehouse, Code_Seller_Del, Code_Manager, &#xA;Code_Country, Substitute, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT       Conductor as Code_Seller, max(left(Nombre,50)) as Name, &#xA;CASE WHEN left(Ruta,1) = 'P' THEN '02' &#xA;ELSE CASE WHEN LEFT(Ruta,1) = 'A' THEN '02' &#xA;ELSE CASE WHEN LEFT(Ruta,1) = 'D' THEN '13' &#xA;ELSE CASE WHEN LEFT(Ruta,1) = 'H' THEN  '02'&#xA;ELSE '02'&#xA;END END END END AS Type, &#xA;Centro_SAP as Code_Warehouse, NULL as Code_Seller_Del, &#xA;'9999' as Code_Manager, 'RD' as Code_Country, &#xA;'0' as Substitute, &#xA;'0' AS Source_Create, '1' AS transfer_status, &#xA;NULL  AS status_SAP&#xA;FROM            Ruta&#xA;group by Conductor, Ruta, Centro_SAP&#xA;&#xA;&#xA;&#xA;--  IMPLT_sellers_org&#xA;&#xA;TRUNCATE TABLE  IMPLT_sellers_org&#xA;GO&#xA;&#xA;INSERT INTO  IMPLT_sellers_org (Code_Seller, Code_Unit_Org, Code_Sales_Org, Code_Manager, Source_Create, &#xA;transfer_status, status_SAP)&#xA;SELECT  distinct      Conductor AS Code_Seller, '01' AS Code_Unit_Org, &#xA;IMPLT_W_unit_sales_org_vendedores.Code_Sales_Org AS Code_Sales_Org, &#xA;'9999' AS Code_Manager, '0' AS Source_Create, &#xA;'1' AS transfer_status, NULL  AS status_SAP&#xA;FROM            Ruta &#xA;INNER JOIN IMPLT_W_unit_sales_org_vendedores&#xA;ON left(Ruta,1) = IMPLT_W_unit_sales_org_vendedores.Letra_Ruta&#xA;&#xA;--   IMPLT_route_org_accounts&#xA;&#xA;TRUNCATE TABLE   IMPLT_route_org_accounts&#xA;GO&#xA;&#xA;INSERT INTO  IMPLT_route_org_accounts( Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Route, Description, &#xA;Code_Seller, &#xA;Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun,&#xA;Code_Frecuency, Code_Week, TOUR_ID, Type_List, Code_Truck,&#xA;Source_Create, Transfer_status, Status_SAP)&#xA;SELECT DISTINCT   Codigo_Cliente AS Code_account, &#xA;'01' AS Code_Unit_Org, Grupo_Cliente AS Code_Sales_Org, &#xA;Clientes.Ruta AS Code_Route, &#xA;Ruta.Descripcion AS Description, &#xA;Conductor AS Code_Seller, &#xA;CASE WHEN Dia_Visita = 'LUN' THEN Orden_Visita ELSE '0' END AS Visit_Mon, &#xA;CASE WHEN Dia_Visita = 'MAR' THEN Orden_Visita ELSE '0' END AS Visit_Tue, &#xA;CASE WHEN Dia_Visita = 'MIE' THEN Orden_Visita ELSE '0' END AS Visit_Wen, &#xA;CASE WHEN Dia_Visita = 'JUE' THEN Orden_Visita ELSE '0' END AS Visit_Thu, &#xA;CASE WHEN Dia_Visita = 'VIE' THEN Orden_Visita ELSE '0' END AS Visit_Fri,&#xA;CASE WHEN Dia_Visita = 'SAB' THEN Orden_Visita ELSE '0' END AS Visit_Sat,&#xA;CASE WHEN Dia_Visita = 'DOM' THEN Orden_Visita ELSE '0' END AS Visit_Sun,&#xA;&#xA;CASE WHEN Frecuencia_Visita = 'N/A' THEN 'S' ELSE Frecuencia_Visita END AS Code_Frecuency,&#xA;&#xA;CASE WHEN Semana_Visita = 'N/A' THEN '0' &#xA;ELSE CASE WHEN Frecuencia_Visita = 'Q' AND Semana_Visita IN ('1','3') THEN  '0'&#xA;ELSE CASE WHEN Frecuencia_Visita = 'Q' AND Semana_Visita IN ('2','4') THEN  '1'&#xA;ELSE Semana_Visita &#xA;END END END AS Code_Week,&#xA;TOUR_ID, Tipo_Lista AS Type_List, Camion AS Code_Truck,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; '0' AS Source_Create, &#xA;                         '1' AS transfer_status, NULL  AS status_SAP&#xA;FROM   Clientes INNER JOIN Ruta ON Clientes.Ruta = Ruta.Ruta&#xA;WHERE Codigo_Cliente is not NULL --AND left(ruta.ruta,1) NOT IN ('M','A') &#xA;&#xA;--IMPLT_trucks&#xA;TRUNCATE TABLE IMPLT_trucks&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[IMPLT_trucks]&#xA;           ([Code]&#xA;           ,[Description]&#xA;           ,[Plate]&#xA;           ,[Code_Seller]&#xA;           ,[Source_Create]&#xA;           ,[Transfer_status]&#xA;           ,[Status_SAP])&#xA;    SELECT right(Camion,12) AS [Code]&#xA;           ,Camion AS [Description]&#xA;           ,right(Camion,15) AS [Plate]&#xA;           ,max(Conductor) AS [Code_Seller]&#xA;           ,'0' AS Source_Create, &#xA;                         '1' AS transfer_status, NULL  AS status_SAP&#xA;FROM Ruta&#xA;--WHERE left(ruta,1) NOT IN ('M','A') &#xA;GROUP BY Camion&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{9DCFDFAF-7A9A-42CE-89E1-F451FBFB64DF}"
      DTS:From="Package\Promociones viejo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Cargas" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{2BA24F2D-D651-4A98-B428-8161B60FA629}"
      DTS:From="Package\Cargas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Pedidos" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{4E6CE941-4933-4784-8BA8-CF094B6F1323}"
      DTS:From="Package\Pedidos"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Promociones head org" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{D827ACC7-7CDD-4734-AB2D-C76906285207}"
      DTS:From="Package\Promociones head org"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Promociones New" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{35A73F37-1ECF-4865-B141-15C161747287}"
      DTS:From="Package\Promociones New"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Status" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{CF9694D9-B02C-4D53-AD30-193295B3C444}"
      DTS:From="Package\Status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\target_sales_head" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción]"
      DTS:CreationName=""
      DTS:DTSID="{28C05022-E86E-45AD-A3A1-6E28A39D80D1}"
      DTS:From="Package\Clientes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción"
      DTS:To="Package\Productos" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 1]"
      DTS:CreationName=""
      DTS:DTSID="{D117BF2C-E80C-4D23-9D89-787B2E5E9B10}"
      DTS:From="Package\Productos"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 1"
      DTS:To="Package\Vendedores y Rutas" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 2]"
      DTS:CreationName=""
      DTS:DTSID="{9DC3772F-924B-410C-A15A-45F2CAB8BF68}"
      DTS:From="Package\Vendedores y Rutas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 2"
      DTS:To="Package\Pricing" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 3]"
      DTS:CreationName=""
      DTS:DTSID="{A9805DCD-CA49-4092-A986-8B1C21629121}"
      DTS:From="Package\Pricing"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 3"
      DTS:To="Package\Cobros" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 4]"
      DTS:CreationName=""
      DTS:DTSID="{919F3FBA-DFB1-498B-86CA-56ED248BEB9E}"
      DTS:From="Package\Cobros"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 4"
      DTS:To="Package\Grupos de articulos" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 5]"
      DTS:CreationName=""
      DTS:DTSID="{6FDA1939-5EFC-4F7A-A483-DAEA91A7DD2F}"
      DTS:From="Package\Grupos de articulos"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 5"
      DTS:To="Package\Organizacion" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 6]"
      DTS:CreationName=""
      DTS:DTSID="{D06C7E46-1A02-4F11-96C0-FAD72ED07896}"
      DTS:From="Package\Organizacion"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 6"
      DTS:To="Package\Promociones viejo" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="111.333333333334,41.3333333333334"
          Id="Package\Cargas"
          TopLeft="32.335601102912,221.455178196554" />
        <NodeLayout
          Size="106.666666666667,42.6666666666667"
          Id="Package\Clientes"
          TopLeft="5.5,5.68867924528302" />
        <NodeLayout
          Size="136,44"
          Id="Package\Cobros"
          TopLeft="599.5,108.443396226415" />
        <NodeLayout
          Size="104.666666666667,41.3333333333334"
          Id="Package\Fiscal"
          TopLeft="115.138883000861,349.833329420288" />
        <NodeLayout
          Size="136,44"
          Id="Package\Grupos de articulos"
          TopLeft="398.896226415094,108.292452830189" />
        <NodeLayout
          Size="148,44"
          Id="Package\Organizacion"
          TopLeft="200.179245283019,108.330188679245" />
        <NodeLayout
          Size="115.333333333334,41.3333333333334"
          Id="Package\Pedidos"
          TopLeft="203.47221919025,215.222218373749" />
        <NodeLayout
          Size="110,42"
          Id="Package\Pricing"
          TopLeft="599.575471698113,5.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\Productos"
          TopLeft="205.009433962264,5.61320754716981" />
        <NodeLayout
          Size="153.333333333334,42.6666666666667"
          Id="Package\Promociones head org"
          TopLeft="385,213" />
        <NodeLayout
          Size="163.333333333334,41.3333333333334"
          Id="Package\Promociones New"
          TopLeft="600.000010217939,217.613448430098" />
        <NodeLayout
          Size="164.666666666667,41.3333333333334"
          Id="Package\Promociones viejo"
          TopLeft="5.5,108.179245283019" />
        <NodeLayout
          Size="100.666666666667,42.6666666666667"
          Id="Package\Status"
          TopLeft="842.5,219.166662753621" />
        <NodeLayout
          Size="140,42.6666666666667"
          Id="Package\target_sales_head"
          TopLeft="822.307692307692,304.615384615385" />
        <NodeLayout
          Size="145.333333333334,42.6666666666667"
          Id="Package\Vendedores y Rutas"
          TopLeft="398.896226415094,5.5377358490566" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="87.917800551456,149.779245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71.6759329135353"
              Start="0,0"
              End="0,64.1759329135353">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.1759329135353" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="143.535601102912,239.138698285152">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.936618087338,0"
              Start="0,0"
              End="52.436618087338,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="52.436618087338,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="318.805552523583,235.111109186875">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="66.1944474764167,0"
              Start="0,0"
              End="58.6944474764167,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.6944474764167,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="538.333333333333,236.306724215049">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="61.6666768846056,0"
              Start="0,0"
              End="54.1666768846056,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="54.1666768846056,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="763.333343551272,239.39005559186">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79.1666564487276,0"
              Start="0,0"
              End="71.6666564487276,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="71.6666564487276,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="892.570512820513,261.833329420288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,42.7820551950969"
              Start="0,0"
              End="0,35.2820551950969">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.2820551950969" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción]"
          TopLeft="112.166666666667,27.3176100628931">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92.8427672955973,0"
              Start="0,0"
              End="85.3427672955973,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="85.3427672955973,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 1]"
          TopLeft="341.009433962264,27.2421383647799">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57.88679245283,0"
              Start="0,0"
              End="50.38679245283,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="50.38679245283,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 2]"
          TopLeft="544.229559748427,26.685534591195">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.3459119496856,0"
              Start="0,0"
              End="47.8459119496856,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="47.8459119496856,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 3]"
          TopLeft="654.575471698113,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.924528301887,60.943396226415"
              Start="0,0"
              End="12.924528301887,53.443396226415">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.4716981132075" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.4716981132075"
                    Point2="0,30.4716981132075"
                    Point3="4,30.4716981132075" />
                  <mssgle:LineSegment
                    End="8.92452830188699,30.4716981132075" />
                  <mssgle:CubicBezierSegment
                    Point1="8.92452830188699,30.4716981132075"
                    Point2="12.924528301887,30.4716981132075"
                    Point3="12.924528301887,34.4716981132075" />
                  <mssgle:LineSegment
                    End="12.924528301887,53.443396226415" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 4]"
          TopLeft="599.5,130.405660377358">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-64.8301886792453,-0.15094339622641"
              Start="0,0"
              End="-57.3301886792453,-0.15094339622641">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-32.4150943396227,0" />
                  <mssgle:LineSegment
                    End="-32.4150943396227,-0.15094339622641" />
                  <mssgle:LineSegment
                    End="-57.3301886792453,-0.15094339622641" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 5]"
          TopLeft="398.896226415094,130.311320754717">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-50.716981132075,0"
              Start="0,0"
              End="-43.216981132075,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-43.216981132075,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 6]"
          TopLeft="200.179245283019,129.654716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-29.879245283019,0"
              Start="0,0"
              End="-22.379245283019,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-22.379245283019,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>