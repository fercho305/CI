<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/25/2018 4:56:10 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="SERGIOW7"
  DTS:CreatorName="TELYNET\Sergio Iñigo"
  DTS:DTSID="{BCE6722E-9DE4-46AE-8349-FE760AD6962C}"
  DTS:EnableConfig="True"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="15.0.1100.123"
  DTS:LocaleID="3082"
  DTS:ObjectName="ImportMaster_PRD"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="682"
  DTS:VersionGUID="{4C8273BD-AEF2-4252-A74B-4AA4DB065E68}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[BaseProyecto]"
      DTS:CreationName="ADO.NET:SQL"
      DTS:DTSID="{F6D18082-B760-414A-89F8-75F34B042CB0}"
      DTS:ObjectName="BaseProyecto">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=sql-gc01.miami;User ID=&quot;Rafael Contreras&quot;;Initial Catalog=crm3_cesar_iglesias;Persist Security Info=True;Connect Timeout=30;Application Name=SSIS-ImportMaster-{F6D18082-B760-414A-89F8-75F34B042CB0}BaseProyecto;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="FWQHu2hfjQ=="
            IV="VVXpCEYyLi0=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>VVXpCEYyLi0SE7BYKmkPONEcMfGe1rLtS/xJWleSK/XLwXPWpxyvH44CJl1gGmUI7yEcj3gp8oZOyqvjggRd1nd4gcZB98fTJnl7ghTKcJYqWENFtgaHMhx/p+LJYdRr0B9jy0krp5FV4YNvuZNgUekqa6HNSCUkQVUZNBYAdaFEBOpSz4nXTA==</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CRM_Proyecto]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
      DTS:ObjectName="CRM_Proyecto">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=sql-gc01.miami;User ID=Rafael Contreras;Initial Catalog=crm3_cesar_iglesias;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package-{C37EE04D-F2D3-4126-AA52-6A7C5BE532EA}SERGIOW7\MSQL2008.crm3_mercasid;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="KCeHJ6Z+dw=="
            IV="XoAKeIubuMM=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>XoAKeIubuMM7wnHF0Oz4KpsVnIidx82AnzegdVYE+s7UUK2/59sor9HSAeCXPW9cMiPwM3s0V/Sg1q+acrosi3rssAABARs/bLh0Ebr8UOIzlgfOYRAak72HM1SmnhQ6BgLqk72Fi+Gu8jfxf+36PZKkiiUuCFSZxDm6od58A8e/aoYIlWJz6A==</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SMTP]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{B8089F13-B8EC-4DB3-8B55-4F649A16B977}"
      DTS:ObjectName="SMTP">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=1.0.1.0;UseWindowsAuthentication=True;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Configurations>
    <DTS:Configuration
      DTS:ConfigurationString="TipoCargaT"
      DTS:ConfigurationVariable="\Package.Variables[User::TipoCarga].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{7B3F8CD7-A09B-47F0-9492-1EBE60F953AA}"
      DTS:ObjectName="TipodeCarga" />
    <DTS:Configuration
      DTS:ConfigurationString="ReindexarT"
      DTS:ConfigurationVariable="\Package.Variables[User::Reindexar].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{D2A5C18A-BD5C-47A4-BF04-29DF7C5128E3}"
      DTS:ObjectName="Reindexacion" />
    <DTS:Configuration
      DTS:ConfigurationString="CargaDeutaT"
      DTS:ConfigurationVariable="\Package.Variables[User::CargaDeuda].Properties[Value]"
      DTS:CreationName=""
      DTS:DTSID="{2EDA7A9D-4F06-4243-8F13-6219C4FBC6B1}"
      DTS:ObjectName="CargadeDeuda" />
  </DTS:Configurations>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CA95F645-072D-404E-BB91-A549CC3C7B57}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CargaDeuda">
      <DTS:VariableValue
        DTS:DataType="8">I</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3FA4D44B-B007-4851-BF4F-816E9211110F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Reindexar">
      <DTS:VariableValue
        DTS:DataType="8">Y</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E0AE38A2-7C80-43BF-8A8B-283F7A5EFF10}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TipoCarga">
      <DTS:VariableValue
        DTS:DataType="8">M</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\accounts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts"
      DTS:DTSID="{DD64489C-2CF3-4307-85C3-485A77C65961}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO accounts (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code,  Code_ofClient, Name1, Name2, NIF, Code_Country, &#xA;                      Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Phone1, Phone2, Fax, Web, E_mail, Code_Type, &#xA;                      Code_Potential, Potential, Code_Status, Code_Agrupation1, Code_Agrupation2, Code_Agrupation3, Code_Agrupation4, Code_Agrupation5, Code_Hierarchy1, &#xA;                      Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, &#xA;                      Code_Seller, Code_Team, Date_New, Date_Drop, Cause_Drop, Blocked, Latitude, Length, Code_ERP, Observations, Transfered, Language_tr, Validated, &#xA;                      House_nr)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by Code_ofClient) + 100000 as varchar(8)) as Code,  Code_ofClient, Name1, Name2, NIF, Code_Country, &#xA;                      Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Phone1, Phone2, Fax, Web, E_mail, Code_Type, &#xA;                      Code_Potential, Potential, Code_Status, Code_Agrupation1, Code_Agrupation2, Code_Agrupation3, Code_Agrupation4, Code_Agrupation5, Code_Hierarchy1, &#xA;                      Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, &#xA;                      Code_Seller, Code_Team, Date_New, Date_Drop, Cause_Drop, Blocked, Latitude, Length, Code_ERP, Observations, '1' as Transfered, Language_tr, Validated, &#xA;                      House_nr&#xA;FROM        ERP_IMPLT_accounts CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient from accounts where Code_ofClient = ERP_IMPLT_accounts.Code_ofClient)&#xA;GO&#xA;&#xA;-- Modificación&#xA;-- Los campos de coordenadas están comentados porque normalmente se gestionan en Hydra. Si se van a recibir descomentar las líneas&#xA;UPDATE accounts SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Name1 = MOD.Name1, Name2 = MOD.Name2, NIF = MOD.NIF, Code_Country = MOD.Code_Country, Code_Region = MOD.Code_Region, Code_Province = MOD.Code_Province, &#xA;&#x9;&#x9;Code_Population = MOD.Code_Population, ZIP = MOD.ZIP, Address1 = MOD.Address1, Address2 = MOD.Address2, Province = MOD.Province, Population = MOD.Population, &#xA;&#x9;&#x9;Hamlet = MOD.Hamlet, Phone1 = MOD.Phone1, Phone2 = MOD.Phone2, Fax = MOD.Fax, Web = MOD.Web, E_mail = MOD.E_mail, Code_Type = MOD.Code_Type, &#xA;        Code_Potential = MOD.Code_Potential, Potential = MOD.Potential, Code_Status = MOD.Code_Status, Code_Agrupation1 = MOD.Code_Agrupation1, &#xA;&#x9;&#x9;Code_Agrupation2 = MOD.Code_Agrupation2, Code_Agrupation3 = MOD.Code_Agrupation3, Code_Agrupation4 = MOD.Code_Agrupation4, &#xA;&#x9;&#x9;Code_Agrupation5 = MOD.Code_Agrupation5, Code_Hierarchy1 = MOD.Code_Hierarchy1, Code_Hierarchy2 = MOD.Code_Hierarchy2, Code_Hierarchy3 = MOD.Code_Hierarchy3, &#xA;&#x9;&#x9;Hierarchy_Table = MOD.Hierarchy_Table, TextLastHierarchy = MOD.TextLastHierarchy, Code_ClassificationA = MOD.Code_ClassificationA, &#xA;&#x9;&#x9;Code_ClassificationB = MOD.Code_ClassificationB, Code_ClassificationC = MOD.Code_ClassificationC, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;        Code_Seller = MOD.Code_Seller, Code_Team = MOD.Code_Team, Date_New = MOD.Date_New, Date_Drop = MOD.Date_Drop, Cause_Drop = MOD.Cause_Drop, &#xA;&#x9;&#x9;Blocked = MOD.Blocked, Code_ERP = MOD.Code_ERP, Observations = MOD.Observations, Language_tr = MOD.Language_tr, &#xA;&#x9;&#x9;Validated = MOD.Validated, House_nr = MOD.House_nr&#xA;&#x9;&#x9;-- , Latitude = MOD.Latitude, Length = MOD.Length&#xA;FROM&#xA;(SELECT   Code_ofClient, Name1, Name2, NIF, Code_Country, &#xA;                      Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Phone1, Phone2, Fax, Web, E_mail, Code_Type, &#xA;                      Code_Potential, Potential, Code_Status, Code_Agrupation1, Code_Agrupation2, Code_Agrupation3, Code_Agrupation4, Code_Agrupation5, Code_Hierarchy1, &#xA;                      Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, &#xA;                      Code_Seller, Code_Team, Date_New, Date_Drop, Cause_Drop, Blocked, Code_ERP, Observations, Language_tr, Validated, &#xA;                      House_nr&#xA;&#x9;&#x9;&#x9;-- , Latitude, Length&#xA;FROM       ERP_IMPLT_accounts &#xA;EXCEPT&#xA;SELECT     Code_ofClient, Name1, Name2, NIF, Code_Country, &#xA;                      Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Phone1, Phone2, Fax, Web, E_mail, Code_Type, &#xA;                      Code_Potential, Potential, Code_Status, Code_Agrupation1, Code_Agrupation2, Code_Agrupation3, Code_Agrupation4, Code_Agrupation5, Code_Hierarchy1, &#xA;                      Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, &#xA;                      Code_Seller, Code_Team, Date_New, Date_Drop, Cause_Drop, Blocked, Code_ERP, Observations, Language_tr, Validated, &#xA;                      House_nr&#xA;&#x9;&#x9;&#x9;-- , Latitude, Length&#xA;FROM         accounts) as MOD INNER JOIN accounts ON MOD.Code_ofClient = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_accounts where Code_ofClient = accounts.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_accounts where Code_ofClient = accounts.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_accounts (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, SearchTerm1, Code_Frecuency, NVisits, Cluster, &#xA;                      Code_Plant, Allow_Order, Name3, Name4, SearchTerm2, Address3, Address4, Building_Code, POBox, Route, Code_Currency, Prospect, Is_New, Transfered, IBAN, &#xA;                      Qr_customer, Code_Com_Sector, Collaborator, Equivalence_Surcharge, Generic_Cust, Code_Warehouse)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code, SearchTerm1, Code_Frecuency, NVisits, Cluster, Code_Plant, Allow_Order, Name3, Name4, SearchTerm2, Address3, Address4, Building_Code, POBox, &#xA;&#x9;Route, Code_Currency, Prospect, Is_New, '1' as Transfered, IBAN, Qr_customer, Code_Com_Sector, Collaborator, Equivalence_Surcharge, Generic_Cust, &#xA;&#x9;warehouses.Code as Code_Warehouse&#xA;FROM   ERP_IMPLT_accounts inner join accounts on ERP_IMPLT_accounts.Code_ofClient = accounts.Code_ofClient &#xA;left join warehouses on ERP_IMPLT_accounts.Code_Warehouse = Warehouses.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from prj_accounts where Code = accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;SearchTerm1 = MOD.SearchTerm1, Code_Frecuency = MOD.Code_Frecuency, NVisits = MOD.NVisits, Cluster = MOD.Cluster, Code_Plant = MOD.Code_Plant, &#xA;&#x9;&#x9;Allow_Order = MOD.Allow_Order, Name3 = MOD.Name3, Name4 = MOD.Name4, SearchTerm2 = MOD.SearchTerm2, Address3 = MOD.Address3, Address4 = MOD.Address4, &#xA;&#x9;&#x9;Building_Code = MOD.Building_Code, POBox = MOD.POBox, Route = MOD.Route, Code_Currency = MOD.Code_Currency, Prospect = MOD.Prospect, Is_New = MOD.Is_New, &#xA;&#x9;&#x9;IBAN = MOD.IBAN, Qr_customer = MOD.Qr_customer, Code_Com_Sector = MOD.Code_Com_Sector, Collaborator = MOD.Collaborator, &#xA;&#x9;&#x9;Equivalence_Surcharge = MOD.Equivalence_Surcharge, Generic_Cust = MOD.Generic_Cust, Code_Warehouse = MOD.Code_Warehouse&#xA;FROM&#xA;(SELECT  accounts.Code, SearchTerm1, Code_Frecuency, NVisits, Cluster, Code_Plant, Allow_Order, Name3, Name4, SearchTerm2, Address3, Address4, Building_Code, POBox, &#xA;&#x9;Route, Code_Currency, Prospect, Is_New, IBAN, Qr_customer, Code_Com_Sector, Collaborator, Equivalence_Surcharge, Generic_Cust, &#xA;&#x9;warehouses.Code as Code_Warehouse&#xA;FROM       ERP_IMPLT_accounts inner join accounts on ERP_IMPLT_accounts.Code_ofClient = accounts.Code_ofClient &#xA;left join warehouses on ERP_IMPLT_accounts.Code_Warehouse = Warehouses.Code_ofClient &#xA;EXCEPT&#xA;SELECT     Code, SearchTerm1, Code_Frecuency, NVisits, Cluster, &#xA;                      Code_Plant, Allow_Order, Name3, Name4, SearchTerm2, Address3, Address4, Building_Code, POBox, Route, Code_Currency, Prospect, Is_New, IBAN, &#xA;                      Qr_customer, Code_Com_Sector, Collaborator, Equivalence_Surcharge, Generic_Cust, Code_Warehouse&#xA;FROM         prj_accounts) as MOD INNER JOIN prj_accounts ON MOD.Code = prj_accounts.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT accounts.Code FROM ERP_IMPLT_accounts inner join accounts on ERP_IMPLT_accounts.Code_ofClient = accounts.Code_ofClient&#xA;where accounts.Code = prj_accounts.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_accounts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT accounts.Code FROM ERP_IMPLT_accounts inner join accounts on ERP_IMPLT_accounts.Code_ofClient = accounts.Code_ofClient&#xA;where accounts.Code = prj_accounts.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts CI"
      DTS:DTSID="{0A6888E6-8D73-475D-AA68-F9FB6736D96D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="53">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;UPDATE accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_accounts where Code_ofClient = accounts.Code_ofClient) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;UPDATE prj_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT accounts.Code FROM ERP_IMPLT_accounts inner join accounts on ERP_IMPLT_accounts.Code_ofClient = accounts.Code_ofClient&#xA;where accounts.Code = prj_accounts.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_addresses"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_addresses"
      DTS:DTSID="{7C99E1C3-15F4-45D6-9126-1AFA9F89E0A2}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_addresses"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO accounts_addresses (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Address, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Account, Code_Type, By_Default, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;addresses.Code as Code_Address, ERP_IMPLT_accounts_addresses.Code_Unit_Org, ERP_IMPLT_accounts_addresses.Code_Sales_Org, accounts.Code as Code_Account, &#xA;&#x9;ERP_IMPLT_accounts_addresses.Code_Type, ERP_IMPLT_accounts_addresses.By_Default, '1' as Transfered&#xA;FROM        ERP_IMPLT_accounts_addresses inner join addresses on ERP_IMPLT_accounts_addresses.Code_Address = addresses.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_accounts_addresses.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Account from accounts_addresses where Code_Address = addresses.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_addresses.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_addresses.Code_Sales_Org and Code_Account = accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_addresses SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Type = MOD.Code_Type, By_Default = MOD.By_Default&#xA;FROM&#xA;(SELECT addresses.Code as Code_Address, ERP_IMPLT_accounts_addresses.Code_Unit_Org, ERP_IMPLT_accounts_addresses.Code_Sales_Org, accounts.Code as Code_Account, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_addresses.Code_Type, ERP_IMPLT_accounts_addresses.By_Default&#xA;&#x9; FROM        ERP_IMPLT_accounts_addresses inner join addresses on ERP_IMPLT_accounts_addresses.Code_Address = addresses.Code_ofClient &#xA;&#x9; inner join accounts on ERP_IMPLT_accounts_addresses.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Account, Code_Type, By_Default&#xA;FROM accounts_addresses) as MOD INNER JOIN accounts_addresses ON MOD.Code_Address = accounts_addresses.Code_Address and MOD.Code_Unit_Org = accounts_addresses.Code_Unit_Org &#xA;and MOD.Code_Sales_Org = accounts_addresses.Code_Sales_Org and MOD.Code_Account = accounts_addresses.Code_Account CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_addresses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_addresses.Code_Address FROM ERP_IMPLT_accounts_addresses inner join addresses on ERP_IMPLT_accounts_addresses.Code_Address = addresses.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_accounts_addresses.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = accounts_addresses.Code_Address and ERP_IMPLT_accounts_addresses.Code_Unit_Org = accounts_addresses.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_addresses.Code_Sales_Org = accounts_addresses.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = accounts_addresses.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_addresses SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_addresses.Code_Address FROM ERP_IMPLT_accounts_addresses inner join addresses on ERP_IMPLT_accounts_addresses.Code_Address = addresses.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_accounts_addresses.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = accounts_addresses.Code_Address and ERP_IMPLT_accounts_addresses.Code_Unit_Org = accounts_addresses.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_addresses.Code_Sales_Org = accounts_addresses.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = accounts_addresses.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_addresses CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_addresses CI"
      DTS:DTSID="{27A19696-A52D-4F35-90D0-A19849EC988B}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_addresses CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="54">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_addresses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_addresses.Code_Address FROM ERP_IMPLT_accounts_addresses inner join addresses on ERP_IMPLT_accounts_addresses.Code_Address = addresses.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_accounts_addresses.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = accounts_addresses.Code_Address and ERP_IMPLT_accounts_addresses.Code_Unit_Org = accounts_addresses.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_addresses.Code_Sales_Org = accounts_addresses.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = accounts_addresses.Code_Account) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation1"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation1"
      DTS:DTSID="{5F8DDAAB-4CE7-45CA-B715-E200F09ECDC2}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_accounts_agrupation1 (Code, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Agrupation1 as Code, Code_Agrupation1 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation1 where code = ERP_IMPLT_accounts.Code_Agrupation1) &#xA;and not exists (SELECT Code FROM accounts_agrupation1 where code = ERP_IMPLT_accounts.Code_Agrupation1) and Code_Agrupation1 is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO accounts_agrupation1 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_accounts_agrupation1 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM accounts_agrupation1 where Code = ERP_IMPLT_accounts_agrupation1.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_agrupation1 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Description&#xA;FROM         ERP_IMPLT_accounts_agrupation1&#xA;EXCEPT&#xA;SELECT     Code, Description&#xA;FROM         accounts_agrupation1) as MOD INNER JOIN accounts_agrupation1 ON MOD.Code = accounts_agrupation1.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_agrupation1 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation1 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation1 where Code = accounts_agrupation1.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_agrupation1 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_agrupation1 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation1 where Code = accounts_agrupation1.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation1 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation1 CI"
      DTS:DTSID="{26D72A1E-3128-4792-BA85-910D787CFB4D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation1 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="9">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_agrupation1 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation1 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation1 where Code = accounts_agrupation1.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation2"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation2"
      DTS:DTSID="{7C403DED-AA4E-41D4-BA8F-93603EC758E8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_accounts_agrupation2 (Code, Code_Agrupation1, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Agrupation2 as Code, Code_Agrupation1, Code_Agrupation2 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation2 where code = ERP_IMPLT_accounts.Code_Agrupation2 and Code_Agrupation1 = ERP_IMPLT_accounts.Code_Agrupation1) &#xA;and not exists (SELECT Code FROM accounts_agrupation2 where code = ERP_IMPLT_accounts.Code_Agrupation2 and Code_Agrupation1 = ERP_IMPLT_accounts.Code_Agrupation1) and Code_Agrupation2 is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO accounts_agrupation2 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_Agrupation1, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_Agrupation1, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_accounts_agrupation2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM accounts_agrupation2 where Code = ERP_IMPLT_accounts_agrupation2.Code and Code_Agrupation1 = ERP_IMPLT_accounts_agrupation2.Code_Agrupation1)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_agrupation2 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_Agrupation1, Description&#xA;FROM         ERP_IMPLT_accounts_agrupation2&#xA;EXCEPT&#xA;SELECT     Code, Code_Agrupation1, Description&#xA;FROM         accounts_agrupation2) as MOD INNER JOIN accounts_agrupation2 ON MOD.Code = accounts_agrupation2.Code and MOD.Code_Agrupation1 = accounts_agrupation2.Code_Agrupation1 CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_agrupation2 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation2 where Code = accounts_agrupation2.Code and Code_Agrupation1 = accounts_agrupation2.Code_Agrupation1 and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_agrupation2 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_agrupation2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation2 where Code = accounts_agrupation2.Code and Code_Agrupation1 = accounts_agrupation2.Code_Agrupation1 and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation2 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation2 CI"
      DTS:DTSID="{2AF11908-D285-46EF-8BC4-1A071229C92E}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation2 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="10">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_agrupation2 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation2 where Code = accounts_agrupation2.Code and Code_Agrupation1 = accounts_agrupation2.Code_Agrupation1) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation3"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation3"
      DTS:DTSID="{3EE5BD07-7BAA-4531-A4BD-5C409D7FF739}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation3"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_accounts_agrupation3 (Code, Code_Agrupation1, Code_Agrupation2, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Agrupation3 as Code, Code_Agrupation1, Code_Agrupation2, Code_Agrupation3 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation3 where code = ERP_IMPLT_accounts.Code_Agrupation3 and Code_Agrupation1 = ERP_IMPLT_accounts.Code_Agrupation1 and Code_Agrupation2 = ERP_IMPLT_accounts.Code_Agrupation2) &#xA;and not exists (SELECT Code FROM accounts_agrupation3 where code = ERP_IMPLT_accounts.Code_Agrupation3 and Code_Agrupation1 = ERP_IMPLT_accounts.Code_Agrupation1 and Code_Agrupation2 = ERP_IMPLT_accounts.Code_Agrupation2) and Code_Agrupation3 is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO accounts_agrupation3 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_Agrupation1, Code_Agrupation2, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_Agrupation1, Code_Agrupation2, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_accounts_agrupation3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM accounts_agrupation3 where Code = ERP_IMPLT_accounts_agrupation3.Code and Code_Agrupation1 = ERP_IMPLT_accounts_agrupation3.Code_Agrupation1 and Code_Agrupation2 = ERP_IMPLT_accounts_agrupation3.Code_Agrupation2)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_agrupation3 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_Agrupation1, Code_Agrupation2, Description&#xA;FROM         ERP_IMPLT_accounts_agrupation3&#xA;EXCEPT&#xA;SELECT     Code, Code_Agrupation1, Code_Agrupation2, Description&#xA;FROM         accounts_agrupation3) as MOD INNER JOIN accounts_agrupation3 ON MOD.Code = accounts_agrupation3.Code and MOD.Code_Agrupation1 = accounts_agrupation3.Code_Agrupation1 and MOD.Code_Agrupation2 = accounts_agrupation3.Code_Agrupation2 CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_agrupation3 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation3 where Code = accounts_agrupation3.Code and Code_Agrupation1 = accounts_agrupation3.Code_Agrupation1 and Code_Agrupation2 = accounts_agrupation3.Code_Agrupation2 and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_agrupation3 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_agrupation3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation3 where Code = accounts_agrupation3.Code and Code_Agrupation1 = accounts_agrupation3.Code_Agrupation1 and Code_Agrupation2 = accounts_agrupation3.Code_Agrupation2 and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_agrupation3 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_agrupation3 CI"
      DTS:DTSID="{EC05F83F-1795-465C-B229-79A10114054B}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_agrupation3 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="11">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_agrupation3 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_accounts_agrupation3 where Code = accounts_agrupation3.Code and Code_agrupation1 = accounts_agrupation3.Code_agrupation1 and Code_agrupation2 = accounts_agrupation3.Code_Agrupation2) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_array"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_array"
      DTS:DTSID="{4E0E0A86-9558-4876-B2E9-4302D43C1D9E}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_array"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_accounts_array (Code, Type, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_ClassificationA as Code, 1 as Type, Code_ClassificationA as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationA and Type = '1') &#xA;and not exists (SELECT Code FROM accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationA and Type = '1') and Code_ClassificationA is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationB as Code, 2 as Type, Code_ClassificationB as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationB and Type = '2') &#xA;and not exists (SELECT Code FROM accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationB and Type = '2') and Code_ClassificationB is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationC as Code, 3 as Type, Code_ClassificationC as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationC and Type = '3') &#xA;and not exists (SELECT Code FROM accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationC and Type = '3') and Code_ClassificationC is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationD as Code, 4 as Type, Code_ClassificationD as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationD and Type = '4') &#xA;and not exists (SELECT Code FROM accounts_array where code = ERP_IMPLT_accounts.Code_ClassificationD and Type = '4') and Code_ClassificationD is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO accounts_array (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Type, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Type, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_accounts_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM accounts_array where Code = ERP_IMPLT_accounts_array.Code and Type = ERP_IMPLT_accounts_array.Type)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_array SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Type, Description&#xA;FROM         ERP_IMPLT_accounts_array&#xA;EXCEPT&#xA;SELECT     Code, Type, Description&#xA;FROM         accounts_array) as MOD INNER JOIN accounts_array ON MOD.Code = accounts_array.Code and MOD.Type = accounts_array.Type CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_accounts_array where Code = accounts_array.Code and Type = accounts_array.Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_array SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_accounts_array where Code = accounts_array.Code and Type = accounts_array.Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_array CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_array CI"
      DTS:DTSID="{688FB302-DD5D-49FC-94E6-1454D847864C}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_array CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="12">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_accounts_array where Code = accounts_array.Code and Type = accounts_array.Type) &#xA;and type not in (5,6,19,24,25,30,31)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_function"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_function"
      DTS:DTSID="{F713A2CF-8605-41AB-A059-31BA757B74B7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_function"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO accounts_function (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                       Code_Function, Code_Type_Function, By_Default, ValidFrom, ValidTo, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_function.Code_Unit_Org, ERP_IMPLT_accounts_function.Code_Sales_Org, accounts_1.Code as Code_Function, &#xA;&#x9;Code_Type_Function, '0' as By_Default, '20180101' as ValidFrom, '20991231' as ValidTo, '1' as Transfered&#xA;FROM        ERP_IMPLT_accounts_function inner join accounts on ERP_IMPLT_accounts_function.Code_Account = accounts.Code_ofClient &#xA;inner join accounts as accounts_1 on ERP_IMPLT_accounts_function.Code_Function = accounts_1.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Function, Code_Type_Function from accounts_function where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_function.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_function.Code_Sales_Org and Code_Function = accounts_1.Code&#xA;and Code_Type_Function = ERP_IMPLT_accounts_function.Code_Type_Function)&#xA;GO&#xA;&#xA;-- Modificación (No hay ya que los campos que recibimos forman parte de la clave y el resto son constantes&#xA;&#xA;-- Baja&#xA;UPDATE accounts_function SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_function CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_function.Code_Account FROM ERP_IMPLT_accounts_function inner join accounts on ERP_IMPLT_accounts_function.Code_Account = accounts.Code_ofClient&#xA;        inner join accounts as accounts_1 on ERP_IMPLT_accounts_function.Code_Function = accounts_1.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_function.Code_Account and ERP_IMPLT_accounts_function.Code_Unit_Org = accounts_function.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_function.Code_Sales_Org = accounts_function.Code_Sales_Org &#xA;&#x9;&#x9;and accounts_1.Code = accounts_function.Code_Function and ERP_IMPLT_accounts_function.Code_Type_Function = accounts_function.Code_Type_Function and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_function SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_function CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_function.Code_Account FROM ERP_IMPLT_accounts_function inner join accounts on ERP_IMPLT_accounts_function.Code_Account = accounts.Code_ofClient&#xA;        inner join accounts as accounts_1 on ERP_IMPLT_accounts_function.Code_Function = accounts_1.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_function.Code_Account and ERP_IMPLT_accounts_function.Code_Unit_Org = accounts_function.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_function.Code_Sales_Org = accounts_function.Code_Sales_Org &#xA;&#x9;&#x9;and accounts_1.Code = accounts_function.Code_Function and ERP_IMPLT_accounts_function.Code_Type_Function = accounts_function.Code_Type_Function and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- No rellenamos la EXTENDIDA porque para este tipo de proyectos no se gestiona" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_function CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_function CI"
      DTS:DTSID="{F1DD7C4C-0F4A-4E14-B99E-656D795821D8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_function CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="13">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_function SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_function CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_function.Code_Account FROM ERP_IMPLT_accounts_function inner join accounts on ERP_IMPLT_accounts_function.Code_Account = accounts.Code_ofClient&#xA;        inner join accounts as accounts_1 on ERP_IMPLT_accounts_function.Code_Function = accounts_1.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_function.Code_Account and ERP_IMPLT_accounts_function.Code_Unit_Org = accounts_function.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_function.Code_Sales_Org = accounts_function.Code_Sales_Org &#xA;&#x9;&#x9;and accounts_1.Code = accounts_function.Code_Function and ERP_IMPLT_accounts_function.Code_Type_Function = accounts_function.Code_Type_Function) &#xA;GO&#xA;&#xA;-- No rellenamos la EXTENDIDA porque para este tipo de proyectos no se gestiona" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_function CI 1"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_function CI"
      DTS:DTSID="{64C3ED97-33CF-43CC-BAFF-8BEA8827EEA7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_function CI 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="14">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_accounts_credit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_credit.Code_Account FROM ERP_IMPLT_accounts_credit inner join accounts on ERP_IMPLT_accounts_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_credit.Code_Account) &#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_org"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_org"
      DTS:DTSID="{FF1E56AB-36E1-4226-BC39-49B239A08AB2}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_org"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO accounts_org (Create_User, Create_Date, Modify_User, Modify_Date, &#xA;Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Potential, Potential, Code_Status, Code_Hierarchy1, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_ClassificationC, &#xA;                      Code_ClassificationD, Code_Team, Blocked, Transfered, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_ClassificationA, Code_ClassificationB, Code_Frecuency_V, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Week_V, Visit_Mon, Visit_Tue, &#xA;                      Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, Visit_Mon_Order, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Visit_Sat_Order, &#xA;                      Visit_Sun_Order, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, Dely_Mon_Order, Dely_Tue_Order, &#xA;                      Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Dely_Sun_Order)&#xA;SELECT distinct &#xA;View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_org.Code_Unit_Org, ERP_IMPLT_accounts_org.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_accounts_org.Code_Potential, ERP_IMPLT_accounts_org.Potential, &#xA;&#x9;ERP_IMPLT_accounts_org.Code_Status, ERP_IMPLT_accounts_org.Code_Hierarchy1, &#xA;&#x9;ERP_IMPLT_accounts_org.Code_Hierarchy2, ERP_IMPLT_accounts_org.Code_Hierarchy3, &#xA;&#x9;ERP_IMPLT_accounts_org.Hierarchy_Table, ERP_IMPLT_accounts_org.TextLastHierarchy, &#xA;&#x9;ERP_IMPLT_accounts_org.Code_ClassificationC, &#xA;    ERP_IMPLT_accounts_org.Code_ClassificationD, ERP_IMPLT_accounts_org.Code_Team, ERP_IMPLT_accounts_org.Blocked, &#xA;&#x9;'1' as Transfered, ERP_IMPLT_accounts_org.Code_ClassificationA, ERP_IMPLT_accounts_org.Code_ClassificationB, &#xA;&#x9;Code_Frecuency_V, Code_Week_V, Visit_Mon, Visit_Tue, &#xA;    Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, &#xA;&#x9;Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, Visit_Sat_Order, &#xA;    Visit_Sun_Order, &#xA;&#x9;Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, &#xA;&#x9;Dely_Mon_Order, Dely_Tue_Order, &#xA;    Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, Dely_Sun_Order&#xA;FROM        ERP_IMPLT_accounts_org inner join accounts &#xA;on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org from accounts_org &#xA;where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_org.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_org.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_org SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Potential = MOD.Code_Potential, Potential = MOD.Potential, Code_Status = MOD.Code_Status, Code_Hierarchy1 = MOD.Code_Hierarchy1, &#xA;&#x9;&#x9;Code_Hierarchy2 = MOD.Code_Hierarchy2, Code_Hierarchy3 = MOD.Code_Hierarchy3, Hierarchy_Table = MOD.Hierarchy_Table, &#xA;&#x9;&#x9;TextLastHierarchy = MOD.TextLastHierarchy, Code_ClassificationC = MOD.Code_ClassificationC, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_Team = MOD.Code_Team, Blocked = MOD.Blocked, Transfered = MOD.Transfered, Code_ClassificationA = MOD.Code_ClassificationA, &#xA;&#x9;&#x9;Code_ClassificationB = MOD.Code_ClassificationB, Code_Frecuency_V = MOD.Code_Frecuency_V, Code_Week_V = MOD.Code_Week_V, Visit_Mon = MOD.Visit_Mon, &#xA;&#x9;&#x9;Visit_Tue = MOD.Visit_Tue, Visit_Wen = MOD.Visit_Wen, Visit_Thu = MOD.Visit_Thu, &#xA;&#x9;&#x9;Visit_Fri = MOD.Visit_Fri, Visit_Sat = MOD.Visit_Sat, Visit_Sun = MOD.Visit_Sun, &#xA;&#x9;&#x9;Visit_Mon_Order = MOD.Visit_Mon_Order, Visit_Tue_Order = MOD.Visit_Tue_Order, &#xA;&#x9;&#x9;Visit_Wen_Order = MOD.Visit_Wen_Order, Visit_Thu_Order = MOD.Visit_Thu_Order, &#xA;&#x9;&#x9;Visit_Fri_Order = MOD.Visit_Fri_Order, Visit_Sat_Order = MOD.Visit_Sat_Order, &#xA;&#x9;&#x9;Visit_Sun_Order = MOD.Visit_Sun_Order, Code_Frecuency_D = MOD.Code_Frecuency_D, &#xA;&#x9;&#x9;Code_Week_D = MOD.Code_Week_D, Dely_Mon = MOD.Dely_Mon, Dely_Tue = MOD.Dely_Tue, &#xA;&#x9;&#x9;Dely_Wen = MOD.Dely_Wen, Dely_Thu = MOD.Dely_Thu, Dely_Fri = MOD.Dely_Fri, &#xA;&#x9;&#x9;Dely_Sat = MOD.Dely_Sat, Dely_Sun = MOD.Dely_Sun, &#xA;&#x9;&#x9;Dely_Mon_Order = MOD.Dely_Mon_Order, Dely_Tue_Order = MOD.Dely_Tue_Order, &#xA;&#x9;&#x9;Dely_Wen_Order = MOD.Dely_Wen_Order, &#xA;&#x9;&#x9;Dely_Thu_Order = MOD.Dely_Thu_Order, Dely_Fri_Order = MOD.Dely_Fri_Order, &#xA;&#x9;&#x9;Dely_Sat_Order = MOD.Dely_Sat_Order, Dely_Sun_Order = MOD.Dely_Sun_Order&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_accounts_org.Code_Unit_Org, ERP_IMPLT_accounts_org.Code_Sales_Org, ERP_IMPLT_accounts_org.Code_Potential, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_org.Potential, ERP_IMPLT_accounts_org.Code_Status, ERP_IMPLT_accounts_org.Code_Hierarchy1, ERP_IMPLT_accounts_org.Code_Hierarchy2, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_org.Code_Hierarchy3, ERP_IMPLT_accounts_org.Hierarchy_Table, ERP_IMPLT_accounts_org.TextLastHierarchy, ERP_IMPLT_accounts_org.Code_ClassificationC, &#xA;        ERP_IMPLT_accounts_org.Code_ClassificationD, ERP_IMPLT_accounts_org.Code_Team, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_org.Blocked, '1' as Transfered, ERP_IMPLT_accounts_org.Code_ClassificationA, &#xA;        ERP_IMPLT_accounts_org.Code_ClassificationB, Code_Frecuency_V, Code_Week_V, Visit_Mon, Visit_Tue, &#xA;        Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, Visit_Mon_Order, Visit_Tue_Order, &#xA;&#x9;&#x9;Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, Visit_Sat_Order, &#xA;        Visit_Sun_Order, Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, Dely_Wen, &#xA;&#x9;&#x9;Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, Dely_Mon_Order, Dely_Tue_Order, &#xA;        Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, Dely_Sun_Order&#xA;     FROM   ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Potential, Potential, Code_Status, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationC, &#xA;                      Code_ClassificationD, Code_Team, Blocked, '1' as Transfered, Code_ClassificationA, Code_ClassificationB, Code_Frecuency_V, Code_Week_V, Visit_Mon, Visit_Tue, &#xA;                      Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, Visit_Sat_Order, &#xA;                      Visit_Sun_Order, Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, Dely_Mon_Order, Dely_Tue_Order, &#xA;                      Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, Dely_Sun_Order&#xA;FROM         accounts_org) as MOD INNER JOIN accounts_org ON MOD.Code_Account = accounts_org.Code_Account and MOD.Code_Unit_Org = accounts_org.Code_Unit_Org and MOD.Code_Sales_Org = accounts_org.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_org SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = accounts_org.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = accounts_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_org.Code_Sales_Org = accounts_org.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_org SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = accounts_org.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = accounts_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_org.Code_Sales_Org = accounts_org.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_accounts_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Payment, Code_Price_list, Code_Plant, Code_St_Bill, Code_St_Trans, Code_St_Del, Code_Currency, Sales_Office, Incoterms, Transfered, Code_Provider, &#xA;                      Code_Segment, Logistic, Code_Account_Provider, Number_Bank, Price_Schema, IBAN, Code_Com_Agent, Code_ClassificationE, Discount_Allowed, Document_Type, &#xA;                      Delivery_Note, IVA_Return, Observations, Notes, Code_Hierarchy4, Code_Hierarchy5, Valued, Code_Payment_method)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_org.Code_Unit_Org, ERP_IMPLT_accounts_org.Code_Sales_Org, Code_Payment, Code_Price_list, &#xA;&#x9;Code_Plant, Code_St_Bill, Code_St_Trans, Code_St_Del, Code_Currency, Sales_Office, Incoterms, '1' as Transfered, Code_Provider,  Code_Segment, &#xA;&#x9;Logistic, Code_Account_Provider, Number_Bank, Price_Schema, IBAN, Code_Com_Agent, Code_ClassificationE, Discount_Allowed, Document_Type, &#xA;    Delivery_Note, IVA_Return, ERP_IMPLT_accounts_org.Observations, Notes, Code_Hierarchy4, Code_Hierarchy5, Valued, Code_Payment_method&#xA;FROM        ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org from prj_accounts_organization where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_org.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_org.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Payment = MOD.Code_Payment, Code_Price_list = MOD.Code_Price_list, Code_Plant = MOD.Code_Plant, Code_St_Bill = MOD.Code_St_Bill, &#xA;&#x9;&#x9;Code_St_Trans = MOD.Code_St_Trans, Code_St_Del = MOD.Code_St_Del, Code_Currency = MOD.Code_Currency, Sales_Office = MOD.Sales_Office, &#xA;&#x9;&#x9;Incoterms = MOD.Incoterms, Transfered = MOD.Transfered, Code_Provider = MOD.Code_Provider, Code_Segment = MOD.Code_Segment, Logistic = MOD.Logistic, &#xA;&#x9;&#x9;Code_Account_Provider = MOD.Code_Account_Provider, Number_Bank = MOD.Number_Bank, Price_Schema = MOD.Price_Schema, IBAN = MOD.IBAN, &#xA;&#x9;&#x9;Code_Com_Agent = MOD.Code_Com_Agent, Code_ClassificationE = MOD.Code_ClassificationE, Discount_Allowed = MOD.Discount_Allowed, &#xA;&#x9;&#x9;Document_Type = MOD.Document_Type, Delivery_Note = MOD.Delivery_Note, IVA_Return = MOD.IVA_Return, Observations = MOD.Observations, Notes = MOD.Notes, &#xA;&#x9;&#x9;Code_Hierarchy4 = MOD.Code_Hierarchy4, Code_Hierarchy5 = MOD.Code_Hierarchy5, Valued = MOD.Valued, Code_Payment_method = MOD.Code_Payment_method&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_accounts_org.Code_Unit_Org, ERP_IMPLT_accounts_org.Code_Sales_Org, Code_Payment, Code_Price_list, &#xA;&#x9;   Code_Plant, Code_St_Bill, Code_St_Trans, Code_St_Del, Code_Currency, Sales_Office, Incoterms, '1' as Transfered, Code_Provider,  Code_Segment, &#xA;&#x9;   Logistic, Code_Account_Provider, Number_Bank, Price_Schema, IBAN, Code_Com_Agent, Code_ClassificationE, Discount_Allowed, Document_Type, &#xA;       Delivery_Note, IVA_Return, ERP_IMPLT_accounts_org.Observations, Notes, Code_Hierarchy4, Code_Hierarchy5, Valued, Code_Payment_method&#xA;       FROM        ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Payment, Code_Price_list, Code_Plant, Code_St_Bill, Code_St_Trans, Code_St_Del, &#xA;&#x9; Code_Currency, Sales_Office, Incoterms, Transfered, Code_Provider, Code_Segment, Logistic, Code_Account_Provider, Number_Bank, Price_Schema, &#xA;&#x9; IBAN, Code_Com_Agent, Code_ClassificationE, Discount_Allowed, Document_Type, Delivery_Note, IVA_Return, Observations, Notes, Code_Hierarchy4, &#xA;&#x9; Code_Hierarchy5, Valued, Code_Payment_method&#xA;FROM         prj_accounts_organization) as MOD INNER JOIN prj_accounts_organization ON MOD.Code_Account = prj_accounts_organization.Code_Account and MOD.Code_Unit_Org = prj_accounts_organization.Code_Unit_Org and &#xA;MOD.Code_Sales_Org = prj_accounts_organization.Code_Sales_Org CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_accounts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;where accounts.code = prj_accounts_organization.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = prj_accounts_organization.Code_Unit_Org and &#xA;ERP_IMPLT_accounts_org.Code_Sales_Org = prj_accounts_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_accounts_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;where accounts.code = prj_accounts_organization.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = prj_accounts_organization.Code_Unit_Org and &#xA;ERP_IMPLT_accounts_org.Code_Sales_Org = prj_accounts_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_org CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_org CI"
      DTS:DTSID="{9E90CBCC-90FC-4720-8AA0-4A84292510B5}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_org CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="8">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;UPDATE accounts_org SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = accounts_org.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = accounts_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_org.Code_Sales_Org = accounts_org.Code_Sales_Org ) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;UPDATE prj_accounts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_org.Code_Account FROM ERP_IMPLT_accounts_org inner join accounts on ERP_IMPLT_accounts_org.Code_Account = accounts.Code_ofClient &#xA;where accounts.code = prj_accounts_organization.Code_Account and ERP_IMPLT_accounts_org.Code_Unit_Org = prj_accounts_organization.Code_Unit_Org and &#xA;ERP_IMPLT_accounts_org.Code_Sales_Org = prj_accounts_organization.Code_Sales_Org) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_organization"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_organization"
      DTS:DTSID="{ED8127FE-ACE0-49D2-8A1F-85EE4FAD2D41}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_organization"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO accounts_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Seller, Code_Potential, Potential, Code_Status, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, &#xA;                      Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, Transfered, Code_ClassificationA, Code_ClassificationB)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_organization.Code_Unit_Org, ERP_IMPLT_accounts_organization.Code_Sales_Org, sellers.Code as Code_Seller, &#xA;&#x9;ERP_IMPLT_accounts_organization.Code_Potential, ERP_IMPLT_accounts_organization.Potential, ERP_IMPLT_accounts_organization.Code_Status, ERP_IMPLT_accounts_organization.Code_Hierarchy1, ERP_IMPLT_accounts_organization.Code_Hierarchy2, ERP_IMPLT_accounts_organization.Code_Hierarchy3, ERP_IMPLT_accounts_organization.Hierarchy_Table, ERP_IMPLT_accounts_organization.TextLastHierarchy, &#xA;    ERP_IMPLT_accounts_organization.Code_ClassificationC, ERP_IMPLT_accounts_organization.Code_ClassificationD, ERP_IMPLT_accounts_organization.Code_Team, ERP_IMPLT_accounts_organization.Blocked, '1' as Transfered, ERP_IMPLT_accounts_organization.Code_ClassificationA, ERP_IMPLT_accounts_organization.Code_ClassificationB&#xA;FROM        ERP_IMPLT_accounts_organization inner join accounts on ERP_IMPLT_accounts_organization.Code_Account = accounts.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_accounts_organization.Code_Seller = sellers.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Seller from accounts_organization where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_organization.Code_Sales_Org and Code_Seller = sellers.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE accounts_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Potential = MOD.Code_Potential, Potential = MOD.Potential, Code_Status = MOD.Code_Status, Code_Hierarchy1 = MOD.Code_Hierarchy1, &#xA;&#x9;&#x9;Code_Hierarchy2 = MOD.Code_Hierarchy2, Code_Hierarchy3 = MOD.Code_Hierarchy3, Hierarchy_Table = MOD.Hierarchy_Table, &#xA;&#x9;&#x9;TextLastHierarchy = MOD.TextLastHierarchy, Code_ClassificationC = MOD.Code_ClassificationC, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_Team = MOD.Code_Team, Blocked = MOD.Blocked, Transfered = MOD.Transfered, Code_ClassificationA = MOD.Code_ClassificationA, Code_ClassificationB = MOD.Code_ClassificationB&#xA;FROM&#xA;(SELECT accounts.Code as Code_Account, ERP_IMPLT_accounts_organization.Code_Unit_Org, ERP_IMPLT_accounts_organization.Code_Sales_Org, sellers.Code as Code_Seller, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_organization.Code_Potential, ERP_IMPLT_accounts_organization.Potential, ERP_IMPLT_accounts_organization.Code_Status, ERP_IMPLT_accounts_organization.Code_Hierarchy1, ERP_IMPLT_accounts_organization.Code_Hierarchy2, ERP_IMPLT_accounts_organization.Code_Hierarchy3, ERP_IMPLT_accounts_organization.Hierarchy_Table, ERP_IMPLT_accounts_organization.TextLastHierarchy, &#xA;&#x9;&#x9;ERP_IMPLT_accounts_organization.Code_ClassificationC, ERP_IMPLT_accounts_organization.Code_ClassificationD, ERP_IMPLT_accounts_organization.Code_Team, ERP_IMPLT_accounts_organization.Blocked, '1' as Transfered, ERP_IMPLT_accounts_organization.Code_ClassificationA, ERP_IMPLT_accounts_organization.Code_ClassificationB&#xA;&#x9; FROM        ERP_IMPLT_accounts_organization inner join accounts on ERP_IMPLT_accounts_organization.Code_Account = accounts.Code_ofClient &#xA;&#x9; inner join sellers on ERP_IMPLT_accounts_organization.Code_Seller = sellers.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Potential, Potential, Code_Status, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, &#xA;              Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, '1' as Transfered, Code_ClassificationA, Code_ClassificationB&#xA;FROM accounts_organization) as MOD INNER JOIN accounts_organization ON MOD.Code_Account = accounts_organization.Code_Account and MOD.Code_Unit_Org = accounts_organization.Code_Unit_Org &#xA;and MOD.Code_Sales_Org = accounts_organization.Code_Sales_Org and MOD.Code_Seller = accounts_organization.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE accounts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_organization.Code_Account FROM ERP_IMPLT_accounts_organization inner join accounts on ERP_IMPLT_accounts_organization.Code_Account = accounts.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_accounts_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_organization.Code_Account and ERP_IMPLT_accounts_organization.Code_Unit_Org = accounts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organization.Code_Sales_Org = accounts_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = accounts_organization.Code_Seller and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE accounts_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_organization.Code_Account FROM ERP_IMPLT_accounts_organization inner join accounts on ERP_IMPLT_accounts_organization.Code_Account = accounts.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_accounts_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_organization.Code_Account and ERP_IMPLT_accounts_organization.Code_Unit_Org = accounts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organization.Code_Sales_Org = accounts_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = accounts_organization.Code_Seller and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\accounts_organization CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="accounts_organization CI"
      DTS:DTSID="{06F3ED08-F034-4B12-A1F3-1093D4EF4A61}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="accounts_organization CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="43">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_organization.Code_Account FROM ERP_IMPLT_accounts_organization inner join accounts on ERP_IMPLT_accounts_organization.Code_Account = accounts.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_accounts_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where accounts.code = accounts_organization.Code_Account and ERP_IMPLT_accounts_organization.Code_Unit_Org = accounts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organization.Code_Sales_Org = accounts_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = accounts_organization.Code_Seller) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses"
      DTS:DTSID="{ECDCE0B3-D582-41FD-8457-0B4C350DE3D2}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO addresses (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code,  Code_ofClient, Code_Country, Code_Region, &#xA;                      Code_Province, Code_Population, ZIP, Address1, Address2, Address3, Address4, Province, Population, Phone1, Phone2, Fax, Web, E_mail, Code_Type, Code_Status, &#xA;                      Code_Seller, Code_Team, Blocked, Observations, House_nr, Transfered, Hamlet)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_addresses.Code_ofClient) + 100000 as varchar(8)) as Code,  ERP_IMPLT_addresses.Code_ofClient, Code_Country, Code_Region, &#xA;                      Code_Province, Code_Population, ZIP, Address1, Address2, Address3, Address4, Province, Population, Phone1, Phone2, Fax, Web, E_mail, ERP_IMPLT_addresses.Code_Type, Code_Status, &#xA;                      sellers.Code as Code_Seller, Code_Team, Blocked, Observations, House_nr, '1' as Transfered, Hamlet&#xA;FROM        ERP_IMPLT_addresses left join sellers on sellers.Code_ofClient = ERP_IMPLT_addresses.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient from addresses where Code_ofClient = ERP_IMPLT_addresses.Code_ofClient)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE addresses SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Country = MOD.Code_Country, Code_Region = MOD.Code_Region, Code_Province = MOD.Code_Province, Code_Population = MOD.Code_Population, &#xA;&#x9;&#x9;ZIP = MOD.ZIP, Address1 = MOD.Address1, Address2 = MOD.Address2, Address3 = MOD.Address3, Address4 = MOD.Address4, Province = MOD.Province, &#xA;&#x9;&#x9;Population = MOD.Population, Phone1 = MOD.Phone1, Phone2 = MOD.Phone2, Fax = MOD.Fax, Web = MOD.Web, E_mail = MOD.E_mail, Code_Type = MOD.Code_Type, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Code_Seller = MOD.Code_Seller, Code_Team = MOD.Code_Team, Blocked = MOD.Blocked, &#xA;&#x9;&#x9;Observations = MOD.Observations, House_nr = MOD.House_nr, Transfered = MOD.Transfered, Hamlet = MOD.Hamlet&#xA;FROM&#xA;(SELECT  ERP_IMPLT_addresses.Code_ofClient, Code_Country, Code_Region, &#xA;                      Code_Province, Code_Population, ZIP, Address1, Address2, Address3, Address4, Province, Population, Phone1, Phone2, Fax, Web, E_mail, ERP_IMPLT_addresses.Code_Type, Code_Status, &#xA;                      sellers.Code as Code_Seller, Code_Team, Blocked, Observations, House_nr, '1' as Transfered, Hamlet&#xA;FROM        ERP_IMPLT_addresses left join sellers on sellers.Code_ofClient = ERP_IMPLT_addresses.Code_Seller &#xA;EXCEPT&#xA;SELECT     Code_ofClient, Code_Country, Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Address3, Address4, Province, &#xA;&#x9;&#x9;&#x9;&#x9;Population, Phone1, Phone2, Fax, Web, E_mail, Code_Type, Code_Status, Code_Seller, Code_Team, Blocked, Observations, &#xA;&#x9;&#x9;&#x9;&#x9;House_nr, Transfered, Hamlet&#xA;FROM         addresses) as MOD INNER JOIN addresses ON MOD.Code_ofClient = addresses.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE addresses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_addresses where Code_ofClient = addresses.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE addresses SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_addresses where Code_ofClient = addresses.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses CI"
      DTS:DTSID="{A2CF83BE-A4A3-4F38-83A1-C0F9E96C2C5C}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="42">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE addresses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_addresses where Code_ofClient = addresses.Code_ofClient) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses_org"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses_org"
      DTS:DTSID="{ED3E0265-423D-46A9-A369-0C70E0EADB2C}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses_org"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO addresses_org (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Address, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Status, Code_Team, Blocked, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;addresses.Code as Code_Address, ERP_IMPLT_addresses_org.Code_Unit_Org, ERP_IMPLT_addresses_org.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_addresses_org.Code_Status, ERP_IMPLT_addresses_org.Code_Team, ERP_IMPLT_addresses_org.Blocked, '1' as Transfered&#xA;FROM        ERP_IMPLT_addresses_org inner join addresses on ERP_IMPLT_addresses_org.Code_Address = addresses.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Address, Code_Unit_Org, Code_Sales_Org from addresses_org where Code_Address = addresses.Code and &#xA;Code_Unit_Org = ERP_IMPLT_addresses_org.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_addresses_org.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE addresses_org SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Code_Team = MOD.Code_Team, Blocked = MOD.Blocked, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT addresses.Code as Code_Address, ERP_IMPLT_addresses_org.Code_Unit_Org, ERP_IMPLT_addresses_org.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_addresses_org.Code_Status, ERP_IMPLT_addresses_org.Code_Team, ERP_IMPLT_addresses_org.Blocked, '1' as Transfered&#xA;FROM        ERP_IMPLT_addresses_org inner join addresses on ERP_IMPLT_addresses_org.Code_Address = addresses.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Status, Code_Team, Blocked, Transfered&#xA;FROM         addresses_org) as MOD INNER JOIN addresses_org ON MOD.Code_Address = addresses_org.Code_Address and MOD.Code_Unit_Org = addresses_org.Code_Unit_Org and MOD.Code_Sales_Org = addresses_org.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE addresses_org SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_addresses_org.Code_Address FROM ERP_IMPLT_addresses_org inner join addresses on ERP_IMPLT_addresses_org.Code_Address = addresses.Code_ofClient &#xA;&#x9;&#x9;where addresses.code = addresses_org.Code_Address and ERP_IMPLT_addresses_org.Code_Unit_Org = addresses_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_org.Code_Sales_Org = addresses_org.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE addresses_org SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  addresses_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_addresses_org.Code_Address FROM ERP_IMPLT_addresses_org inner join addresses on ERP_IMPLT_addresses_org.Code_Address = addresses.Code_ofClient &#xA;&#x9;&#x9;where addresses.code = addresses_org.Code_Address and ERP_IMPLT_addresses_org.Code_Unit_Org = addresses_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_org.Code_Sales_Org = addresses_org.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses_org CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses_org CI"
      DTS:DTSID="{4C887215-4723-4EBF-A73E-883D0B0AA54E}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses_org CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="41">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE addresses_org SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses_org CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_addresses_org.Code_Address FROM ERP_IMPLT_addresses_org inner join addresses on ERP_IMPLT_addresses_org.Code_Address = addresses.Code_ofClient &#xA;&#x9;&#x9;where addresses.code = addresses_org.Code_Address and ERP_IMPLT_addresses_org.Code_Unit_Org = addresses_org.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_org.Code_Sales_Org = addresses_org.Code_Sales_Org ) &#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses_organization"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses_organization"
      DTS:DTSID="{61FB5C36-880F-4404-8F0D-0299FB9FC3AE}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses_organization"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO addresses_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Address, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Seller, Code_Status, Code_Team, Blocked, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;addresses.Code as Code_Address, ERP_IMPLT_addresses_organization.Code_Unit_Org, ERP_IMPLT_addresses_organization.Code_Sales_Org, sellers.Code as Code_Seller, &#xA;&#x9;ERP_IMPLT_addresses_organization.Code_Status, ERP_IMPLT_addresses_organization.Code_Team, ERP_IMPLT_addresses_organization.Blocked, '1' as Transfered&#xA;FROM        ERP_IMPLT_addresses_organization inner join addresses on ERP_IMPLT_addresses_organization.Code_Address = addresses.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_addresses_organization.Code_Seller = sellers.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Seller from addresses_organization where Code_Address = addresses.Code and &#xA;Code_Unit_Org = ERP_IMPLT_addresses_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_addresses_organization.Code_Sales_Org and Code_Seller = sellers.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE addresses_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Blocked = MOD.Blocked&#xA;FROM&#xA;(SELECT addresses.Code as Code_Address, ERP_IMPLT_addresses_organization.Code_Unit_Org, ERP_IMPLT_addresses_organization.Code_Sales_Org, sellers.Code as Code_Seller, &#xA;&#x9;&#x9;ERP_IMPLT_addresses_organization.Code_Status, ERP_IMPLT_addresses_organization.Blocked&#xA;&#x9; FROM        ERP_IMPLT_addresses_organization inner join addresses on ERP_IMPLT_addresses_organization.Code_Address = addresses.Code_ofClient &#xA;&#x9; inner join sellers on ERP_IMPLT_addresses_organization.Code_Seller = sellers.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Address, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Status, Blocked&#xA;FROM addresses_organization) as MOD INNER JOIN addresses_organization ON MOD.Code_Address = addresses_organization.Code_Address and MOD.Code_Unit_Org = addresses_organization.Code_Unit_Org &#xA;and MOD.Code_Sales_Org = addresses_organization.Code_Sales_Org and MOD.Code_Seller = addresses_organization.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE addresses_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_addresses_organization.Code_Address FROM ERP_IMPLT_addresses_organization inner join addresses on ERP_IMPLT_addresses_organization.Code_Address = addresses.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_addresses_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = addresses_organization.Code_Address and ERP_IMPLT_addresses_organization.Code_Unit_Org = addresses_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_organization.Code_Sales_Org = addresses_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = addresses_organization.Code_Seller and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE addresses_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  addresses_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_addresses_organization.Code_Address FROM ERP_IMPLT_addresses_organization inner join addresses on ERP_IMPLT_addresses_organization.Code_Address = addresses.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_addresses_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = addresses_organization.Code_Address and ERP_IMPLT_addresses_organization.Code_Unit_Org = addresses_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_organization.Code_Sales_Org = addresses_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = addresses_organization.Code_Seller and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\addresses_organization CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="addresses_organization CI"
      DTS:DTSID="{CB58C717-6ABD-471C-8838-1363A3D497D2}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="addresses_organization CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE addresses_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  addresses_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_addresses_organization.Code_Address FROM ERP_IMPLT_addresses_organization inner join addresses on ERP_IMPLT_addresses_organization.Code_Address = addresses.Code_ofClient&#xA;        inner join sellers on ERP_IMPLT_addresses_organization.Code_Seller = sellers.Code_ofClient  &#xA;&#x9;&#x9;where addresses.code = addresses_organization.Code_Address and ERP_IMPLT_addresses_organization.Code_Unit_Org = addresses_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_addresses_organization.Code_Sales_Org = addresses_organization.Code_Sales_Org &#xA;&#x9;&#x9;and sellers.Code = addresses_organization.Code_Seller) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\collecting_type"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FF836825-2D56-48C3-B3AB-ECA18D311BFA}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="collecting_type"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO collecting_type (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date,&#xA;View_System_Fields_ERP.Platform,&#xA;      Code,&#xA;      Description,&#xA;      Orden&#xA;      )&#xA;SELECT &#xA;View_System_Fields_ERP.Create_User,&#xA;View_System_Fields_ERP.Create_Date,&#xA;View_System_Fields_ERP.Modify_User,&#xA;View_System_Fields_ERP.Modify_Date,&#xA;      NULL AS Delete_User,&#xA;      NULL AS Delete_Date,&#xA;      View_System_Fields_ERP.Platform,&#xA;      Code,&#xA;      cast(Description AS Varchar(20)) AS Description,&#xA;      1 as Orden&#xA;      FROM prj_payment_methods CROSS JOIN View_System_Fields_ERP&#xA;&#x9;  WHERE not exists (SELECT Code&#xA;    FROM collecting_type WHERE collecting_type.Code =prj_payment_methods.Code) &#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\collections_pending"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="collections_pending"
      DTS:DTSID="{68EF29C5-8EB6-488E-B8A6-7456E852FCCF}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="collections_pending"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="UPDATE ERP_IMPLT_collection_pending SET Code_Unit_Org = '01' WHERE Code_Unit_Org = '1'&#xA;&#xA;UPDATE ERP_IMPLT_collection_pending SET Code_Sales_Org = '0' + Code_Sales_Org&#xA;WHERE  len(Code_Sales_Org) = 1&#xA;&#xA;-- Al tener ua clave formada por dos campos de valor único que tenemos que generar, &#xA;--la forma de tratar esta tabla es diferente&#xA;-- Actualizamos la tabla temporal con los códigos de la maestra&#xA;UPDATE  ERP_IMPLT_collection_pending set Num_Invoice = collections_pending.Num_Invoice, ERP_IMPLT_collection_pending.NumDocum = collections_pending.NumDocum&#xA;FROM         ERP_IMPLT_collection_pending INNER JOIN&#xA;                      collections_pending ON ERP_IMPLT_collection_pending.Code_ofClient_Inv = collections_pending.Code_ofClient_Inv AND &#xA;                      ERP_IMPLT_collection_pending.Code_ofClient_Doc = collections_pending.Code_ofClient_Doc&#xA;GO&#xA;&#xA;-- Creamos el código del número de factura&#xA;UPDATE ERP_IMPLT_collection_pending set Num_Invoice = GenCode.Num_Invoice &#xA;from ERP_IMPLT_collection_pending inner join &#xA;(SELECT    convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','') + cast(ROW_NUMBER() OVER (order by Code_ofClient_Inv) + 100000 as varchar(8)) as  Num_Invoice,  Code_ofClient_Inv&#xA;FROM       (SELECT distinct  Code_ofClient_Inv  from ERP_IMPLT_collection_pending where Num_Invoice is null) as Gen1) as GenCode on GenCode.Code_ofClient_Inv = ERP_IMPLT_collection_pending.Code_ofClient_Inv&#xA;Where ERP_IMPLT_collection_pending.Num_Invoice is null&#xA;GO&#xA;&#xA;-- Creamos el código del número de documento&#xA;UPDATE ERP_IMPLT_collection_pending set NumDocum = GenCode.NumDocum from ERP_IMPLT_collection_pending &#xA;inner join &#xA;(SELECT     convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by Code_ofClient_Inv, Code_ofClient_Doc) + 100000 as varchar(8)) as  NumDocum,  Code_ofClient_Inv, Code_ofClient_Doc&#xA;FROM       (SELECT distinct  Code_ofClient_Inv, Code_ofClient_Doc  from ERP_IMPLT_collection_pending where NumDocum is null) as Gen1) as GenCode on GenCode.Code_ofClient_Inv = ERP_IMPLT_collection_pending.Code_ofClient_Inv and GenCode.Code_ofClient_Doc = ERP_IMPLT_collection_pending.Code_ofClient_Doc&#xA;Where ERP_IMPLT_collection_pending.NumDocum is null&#xA;GO&#xA;&#xA;-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO collections_pending (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Num_Invoice, NumDocum, Date_Doc, Code_ofClient_Inv, &#xA;                      Code_ofClient_Doc, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Type, Total_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Total_Collected, Total_Pending, Amount_Confirmed, Code_Seller, &#xA;                      Date_End, Locked, Unpaid, Observations,  Total_Divida)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;&#x9;&#x9;Num_Invoice, NumDocum, Date_Doc, Code_ofClient_Inv, Code_ofClient_Doc, accounts.Code as Code_Account, &#xA;&#x9;&#x9;&#x9;&#x9;Code_Unit_Org, Code_Sales_Org, ERP_IMPLT_collection_pending.Code_Type, Total_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN Total_Collected IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;THEN 0.000 ELSE Total_Collected END AS Total_Collected, &#xA;&#x9;&#x9;&#x9;&#x9;Total_Amount - CASE WHEN Total_Collected IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;THEN 0.000 ELSE Total_Collected END AS Total_Pending,&#xA;&#x9;&#x9;&#x9;&#x9;Amount_Confirmed, sellers.Code as Code_Seller, Date_End, Locked, Unpaid, ERP_IMPLT_collection_pending.Observations,  &#xA;&#x9;&#x9;&#x9;&#x9;Total_Divida&#xA;FROM        ERP_IMPLT_collection_pending inner join accounts on ERP_IMPLT_collection_pending.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_collection_pending.Code_Seller = sellers.Code_ofClient&#xA;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient_Inv, Code_ofClient_Doc FROM collections_pending where Code_ofClient_Inv = ERP_IMPLT_collection_pending.Code_ofClient_Inv and Code_ofClient_Doc = ERP_IMPLT_collection_pending.Code_ofClient_Doc) &#xA;GO&#xA;&#xA;&#xA;&#xA;-- Modificación&#xA;UPDATE collections_pending SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Date_Doc = MOD.Date_Doc, Code_Account = MOD.Code_Account, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, Code_Type = MOD.Code_Type, &#xA;&#x9;&#x9;Total_Amount = MOD.Total_Amount, Total_Collected = MOD.Total_Collected, Total_Pending = MOD.Total_Pending, Amount_Confirmed = MOD.Amount_Confirmed, &#xA;&#x9;&#x9;Code_Seller = MOD.Code_Seller, Date_End = MOD.Date_End, Locked = MOD.Locked, Unpaid = MOD.Unpaid, Observations = MOD.Observations, Total_Divida = MOD.Total_Divida&#xA;FROM&#xA;(SELECT distinct Num_Invoice, NumDocum, Date_Doc, Code_ofClient_Inv, Code_ofClient_Doc, accounts.Code as Code_Account, &#xA;Code_Unit_Org, Code_Sales_Org, ERP_IMPLT_collection_pending.Code_Type, Total_Amount, &#xA;&#xA;&#x9;&#x9;&#x9;&#x9;CASE WHEN Total_Collected IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;THEN 0.000 ELSE Total_Collected END AS Total_Collected, &#xA;&#x9;&#x9;&#x9;&#x9;Total_Amount - CASE WHEN Total_Collected IS NULL&#xA;&#x9;&#x9;&#x9;&#x9;THEN 0.000 ELSE Total_Collected END AS Total_Pending, &#xA;&#x9;&#x9;&#x9;&#x9;Amount_Confirmed, sellers.Code as Code_Seller, Date_End, Locked, Unpaid, ERP_IMPLT_collection_pending.Observations,  Total_Divida&#x9;  &#xA;FROM        ERP_IMPLT_collection_pending inner join accounts on ERP_IMPLT_collection_pending.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_collection_pending.Code_Seller = sellers.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Num_Invoice, NumDocum, Date_Doc, Code_ofClient_Inv, Code_ofClient_Doc, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Type, Total_Amount, &#xA;&#x9; Total_Collected, Total_Pending, Amount_Confirmed, Code_Seller, Date_End, Locked, Unpaid, Observations,  Total_Divida&#xA;FROM         collections_pending) as MOD INNER JOIN collections_pending ON MOD.Num_Invoice = collections_pending.Num_Invoice and MOD.NumDocum = collections_pending.NumDocum CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE collections_pending SET Delete_Date = View_System_Fields_ERP.Create_Date, &#xA;Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  collections_pending CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT Code_ofClient_Inv, Code_ofClient_Doc FROM ERP_IMPLT_collection_pending &#xA;&#x9;&#x9;where Code_ofClient_Inv = collections_pending.Code_ofClient_Inv &#xA;&#x9;&#x9;and Code_ofClient_Doc = collections_pending.Code_ofClient_Doc) --and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE collections_pending SET Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  collections_pending CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Num_Invoice, NumDocum &#xA;FROM ERP_IMPLT_collection_pending &#xA;&#x9;&#x9;where Num_Invoice = collections_pending.Num_Invoice &#xA;&#x9;&#x9;and NumDocum = collections_pending.NumDocum and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Por si volvemos a recibir cobros ya realizados, comprobamos que no estén cobrados y si lo están los marcamos como cobrados&#xA;UPDATE     collections_pending set Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, &#xA;Total_Collected = Collected.Total, Total_Pending = 0.000&#xA;FROM         collections_pending INNER JOIN&#xA;                          (SELECT     Num_Invoice, NumDocum, Code_ofClient_Inv, Code_ofClient_Doc, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  SUM(Total_Collected) AS Total&#xA;                            FROM          collections_received&#xA;                            WHERE      (Delete_Date IS NULL)&#xA;                            GROUP BY Num_Invoice, NumDocum, Code_ofClient_Inv, Code_ofClient_Doc) AS Collected &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON collections_pending.Num_Invoice = Collected.Num_Invoice AND &#xA;                      collections_pending.NumDocum = Collected.NumDocum &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  AND collections_pending.Total_Collected &lt;&gt; Collected.Total CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE     (collections_pending.Total_Pending &lt;&gt; 0)&#xA;GO&#xA;&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_collections_pending(Create_User, Create_Date, Modify_User, Modify_Date, Platform, Num_Invoice, NumDocum, Code_Payment, Total_Discount, &#xA;                      Num_Check, Amount_Gross)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;&#x9;&#x9;Num_Invoice, NumDocum, Code_Payment, Total_Discount, Num_Check, Amount_Gross&#xA;FROM        ERP_IMPLT_collection_pending CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Num_Invoice, NumDocum FROM prj_collections_pending where Num_Invoice = ERP_IMPLT_collection_pending.Num_Invoice and NumDocum = ERP_IMPLT_collection_pending.NumDocum) &#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_collections_pending SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Payment = MOD.Code_Payment, Total_Discount = MOD.Total_Discount, &#xA;&#x9;&#x9;Num_Check = MOD.Num_Check, Amount_Gross = MOD.Amount_Gross&#xA;FROM&#xA;(SELECT distinct Num_Invoice, NumDocum, Code_Payment, Total_Discount, Num_Check, Amount_Gross&#xA;FROM        ERP_IMPLT_collection_pending &#xA;     EXCEPT&#xA;     SELECT  Num_Invoice, NumDocum, Code_Payment, Total_Discount, Num_Check, Amount_Gross&#xA;FROM         prj_collections_pending) as MOD INNER JOIN prj_collections_pending &#xA;ON MOD.Num_Invoice = prj_collections_pending.Num_Invoice and MOD.NumDocum = prj_collections_pending.NumDocum &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_collections_pending SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_collections_pending CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Num_Invoice, NumDocum FROM ERP_IMPLT_collection_pending &#xA;&#x9;&#x9;where Num_Invoice = prj_collections_pending.Num_Invoice and NumDocum = prj_collections_pending.NumDocum and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_collections_pending SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_collections_pending CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Num_Invoice, NumDocum FROM ERP_IMPLT_collection_pending &#xA;&#x9;&#x9;where Num_Invoice = prj_collections_pending.Num_Invoice and NumDocum = prj_collections_pending.NumDocum and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\collections_pending CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="collections_pending CI"
      DTS:DTSID="{FF3608FC-0DD2-4505-B414-67226EFE3C64}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="collections_pending CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial. En lugar de borrar lo ponemos como cobrado&#xA;UPDATE collections_pending SET Modify_Date = View_System_Fields_ERP.Create_Date, Modify_User = View_System_Fields_ERP.Create_User, Total_Collected = Total_Amount, Total_Pending = 0.000&#xA;FROM  collections_pending CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Total_Pending &lt;&gt; 0.000 and not exists (SELECT Num_Invoice, NumDocum FROM ERP_IMPLT_collection_pending &#xA;&#x9;&#x9;where Num_Invoice = collections_pending.Num_Invoice and NumDocum = collections_pending.NumDocum) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial. No hay borrado ya que se pone como cobrado&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Complemento prj_orders_header"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{12ADD444-3BCF-4C45-85A6-B6298DE3A9E6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Complemento prj_orders_header"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Modificación (2)&#xA;UPDATE prj_orders_header SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code_Account = MOD.Code_Account, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, Order_Date = MOD.Order_Date, Order_Type = MOD.Order_Type, &#xA;Notes = MOD.Notes, Observations2 = MOD.Observations2, Code_Sales_Office = MOD.Code_Sales_Office, Assigned_Dispatch = MOD.Assigned_Dispatch, Dispatched = MOD.Dispatched, &#xA;Capacity_load = MOD.Capacity_load, Type_Document = MOD.Type_Document, Ordernum_Linked = MOD.Ordernum_Linked, Code_User_Del = MOD.Code_User_Del, Code_Seller_Del = MOD.Code_Seller_Del, &#xA;Code_Promotion = MOD.Code_Promotion, Blocked = MOD.Blocked, Code_User = MOD.Code_User, Code_Trademark = MOD.Code_Trademark, &#xA;Code_Seller = MOD.Code_Seller, Delivery_Date = MOD.Delivery_Date, Code_Currency = MOD.Code_Currency, Code_Paymentway = MOD.Code_Paymentway, Code_Price_List_default = MOD.Code_Price_List_default, &#xA;Code_Price_List = MOD.Code_Price_List, Brute_Amount = MOD.Brute_Amount, Net_Amount = MOD.Net_Amount, Taxes_Amount = MOD.Taxes_Amount, Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, &#xA;Total_Weight = MOD.Total_Weight, Order_Num_Cli = MOD.Order_Num_Cli, Observations = MOD.Observations, Code_Lock = MOD.Code_Lock, Code_ReturnCause = MOD.Code_ReturnCause, &#xA;Status = MOD.Status, Transfered = MOD.Transfered, Order_Num_Telynet = MOD.Order_Num_Telynet, Code_Account_Shipto = MOD.Code_Account_Shipto, Code_Address_Shipto = MOD.Code_Address_Shipto, &#xA; Code_Account_Billto = MOD.Code_Account_Billto, Code_Address_Billto = MOD.Code_Address_Billto, Code_Account_Payer = MOD.Code_Account_Payer, Code_Address_Payer = MOD.Code_Address_Payer, &#xA;Code_Ica = MOD.Code_Ica, Net_Amount2 = MOD.Net_Amount2, Invoiced = MOD.Invoiced, Grouped = MOD.Grouped, Taxes_Req = MOD.Taxes_Req, Special_discount = MOD.Special_discount, &#xA; Pp_discount = MOD.Pp_discount, Volume_discount = MOD.Volume_discount, Units_discount = MOD.Units_discount, Fiscal = MOD.Fiscal, Route = MOD.Route, Num_Order_Provider = MOD.Num_Order_Provider, &#xA;Notes_1 = MOD.Notes_1, Notes_2 = MOD.Notes_2, Notes_3 = MOD.Notes_3, Taxes_IVA = MOD.Taxes_IVA, Payment_Way_Changed = MOD.Payment_Way_Changed, Code_Wholesales = MOD.Code_Wholesales, &#xA;Code_Collaborator = MOD.Code_Collaborator, By_Phone = MOD.By_Phone, Code_Hash = MOD.Code_Hash, Charged = MOD.Charged, To_Charge = MOD.To_Charge, Name1 = MOD.Name1, Name2 = MOD.Name2, &#xA;Phone1 = MOD.Phone1, Population = MOD.Population, Code_Warehouse = MOD.Code_Warehouse, Amount_Surcharge = MOD.Amount_Surcharge, Date_Expired = MOD.Date_Expired&#xA;FROM&#xA;(SELECT ERP_IMPLT_orders_header.Order_Num, accounts.Code as Code_Account, ERP_IMPLT_orders_header.Code_Unit_Org, accounts_org.Code_Sales_Org, ERP_IMPLT_orders_header.Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, '1' AS Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;Ordernum_Linked, Code_User_Del, sellers.Code as Code_Seller_Del, ERP_IMPLT_orders_header.Code_Promotion, ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User, Order_Num_ofClient, Code_Trademark, sellers_1.Code as Code_Seller, &#xA;CASE WHEN Date_holiday IS NOT NULL AND format(convert(date, delivery_date), 'dddd') = 'sábado'&#xA;THEN replace(dateadd(day,2,(convert(date,Delivery_Date, 112))),'-','') &#xA;ELSE CASE WHEN Date_holiday IS NOT NULL AND format(convert(date, delivery_date), 'dddd') &lt;&gt; 'sábado'&#xA;THEN replace(dateadd(day,2,(convert(date,Delivery_Date, 112))),'-','') &#xA;ELSE Delivery_Date&#xA;END END AS Delivery_Date,&#xA;Code_Currency, Code_Paymentway, ERP_IMPLT_orders_header.Code_Price_List_default, ERP_IMPLT_orders_header.Code_Price_List, &#xA;sum(ERP_IMPLT_orders_lines.Brute_Amount) AS Brute_Amount, sum(ERP_IMPLT_orders_lines.Net_Amount) AS Net_Amount, sum(ERP_IMPLT_orders_lines.Taxes_Amount) AS Taxes_Amount,&#xA;sum(ERP_IMPLT_orders_lines.Total_Amount) AS Total_Amount,  ERP_IMPLT_orders_header.Total_Cost, ERP_IMPLT_orders_header.Total_Weight, &#xA;Order_Num_Cli, ERP_IMPLT_orders_header.Observations, ERP_IMPLT_orders_header.Code_Lock, ERP_IMPLT_orders_header.Code_ReturnCause, &#xA;'1' AS Status, '1' as Transfered, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, addresses.Code as Code_Address_Shipto, &#xA;accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, &#xA;Code_Ica, Net_Amount2, '1' AS Invoiced, Grouped, Taxes_Req, Special_discount, Pp_discount, Volume_discount, Units_discount, Fiscal, Route, &#xA;Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, accounts_4.Code as Code_Wholesales, accounts.Code as Code_Collaborator, By_Phone, &#xA;Code_Hash, Charged, To_Charge, ERP_IMPLT_orders_header.Name1, ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1, ERP_IMPLT_orders_header.Population, &#xA;warehouses.Code as Code_Warehouse, Amount_Surcharge, Date_Expired&#xA;FROM ERP_IMPLT_orders_header &#xA;INNER JOIN ERP_IMPLT_orders_lines ON ERP_IMPLT_orders_header.Order_Num = ERP_IMPLT_orders_lines.Order_Num&#xA;inner join accounts on ERP_IMPLT_orders_header.Code_Account = accounts.Code_ofClient &#xA;left join accounts as accounts_1 on ERP_IMPLT_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;left join addresses on ERP_IMPLT_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;left join accounts as accounts_2 on ERP_IMPLT_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;left join addresses as addresses_1 on ERP_IMPLT_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;left join accounts as accounts_3 on ERP_IMPLT_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;left join addresses as addresses_2 on ERP_IMPLT_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;left join sellers on ERP_IMPLT_orders_header.Code_Seller_Del = REPLACE(LTRIM(REPLACE(sellers.Code_ofClient,'0',' ')),' ','0')&#xA;left join sellers as sellers_1 on ERP_IMPLT_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;left join accounts as accounts_4 on ERP_IMPLT_orders_header.Code_Wholesales = accounts_4.Code_ofClient &#xA;left join accounts as accounts_5 on ERP_IMPLT_orders_header.Code_Collaborator = accounts_5.Code_ofClient&#xA;left join warehouses on ERP_IMPLT_orders_header.Code_Warehouse = warehouses.Code_ofClient&#xA;inner join accounts_org ON accounts.Code = accounts_org.Code_Account&#xA;LEFT JOIN calendar_holidays ON calendar_holidays.Date_holiday = Delivery_Date&#xA;WHERE &#x9;ERP_IMPLT_orders_header.Order_Num is not null&#xA;GROUP BY &#xA;ERP_IMPLT_orders_header.Order_Num, accounts.Code, ERP_IMPLT_orders_header.Code_Unit_Org,accounts_org.Code_Sales_Org, ERP_IMPLT_orders_header.Order_Date,&#xA;ERP_IMPLT_orders_header.Order_Type, ERP_IMPLT_orders_header.Notes,ERP_IMPLT_orders_header.Observations2, ERP_IMPLT_orders_header.Code_Sales_Office,&#xA;ERP_IMPLT_orders_header.Assigned_Dispatch, ERP_IMPLT_orders_header.Dispatched,ERP_IMPLT_orders_header.Capacity_load, ERP_IMPLT_orders_header.Type_Document,&#xA;ERP_IMPLT_orders_header.Ordernum_Linked, ERP_IMPLT_orders_header.Code_User_Del,sellers.Code, sellers_1.Code, ERP_IMPLT_orders_header.Code_Promotion, &#xA;ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User,ERP_IMPLT_orders_header.Order_Num_ofClient, ERP_IMPLT_orders_header.Code_Trademark,&#xA;ERP_IMPLT_orders_header.Delivery_Date, ERP_IMPLT_orders_header.Code_Currency,ERP_IMPLT_orders_header.Code_Paymentway, ERP_IMPLT_orders_header.Code_Price_List_default,&#xA;ERP_IMPLT_orders_header.Code_Price_List, ERP_IMPLT_orders_header.Total_Cost,ERP_IMPLT_orders_header.Total_Weight, ERP_IMPLT_orders_header.Order_Num_Cli,&#xA;ERP_IMPLT_orders_header.Observations, ERP_IMPLT_orders_header.Code_Lock, ERP_IMPLT_orders_header.Code_ReturnCause, ERP_IMPLT_orders_header.Status,&#xA;ERP_IMPLT_orders_header.Order_Num_Telynet, accounts.Code, accounts_1.Code,accounts_4.Code, accounts_3.Code, accounts_2.Code, accounts_5.Code,&#xA;addresses.Code, addresses_1.Code, addresses_2.Code, ERP_IMPLT_orders_header.Code_Ica,ERP_IMPLT_orders_header.Net_Amount2, ERP_IMPLT_orders_header.Grouped,ERP_IMPLT_orders_header.Taxes_Req, ERP_IMPLT_orders_header.Special_discount,&#xA;ERP_IMPLT_orders_header.Pp_discount, ERP_IMPLT_orders_header.Volume_discount,ERP_IMPLT_orders_header.Units_discount, ERP_IMPLT_orders_header.Fiscal,&#xA;ERP_IMPLT_orders_header.Route, ERP_IMPLT_orders_header.Num_Order_Provider,ERP_IMPLT_orders_header.Notes_1, ERP_IMPLT_orders_header.Notes_2,&#xA;ERP_IMPLT_orders_header.Notes_3, ERP_IMPLT_orders_header.Taxes_IVA,ERP_IMPLT_orders_header.Payment_Way_Changed, ERP_IMPLT_orders_header.By_Phone,&#xA;ERP_IMPLT_orders_header.Code_Hash, ERP_IMPLT_orders_header.Charged,ERP_IMPLT_orders_header.To_Charge, ERP_IMPLT_orders_header.Name1,&#xA;ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1,ERP_IMPLT_orders_header.Population, warehouses.Code, ERP_IMPLT_orders_header.Amount_Surcharge,&#xA;ERP_IMPLT_orders_header.Date_Expired, calendar_holidays.Date_holiday&#xA;     EXCEPT&#xA; SELECT  Order_Num, Code_Account, Code_Unit_Org,  Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA; Ordernum_Linked, Code_User_Del, Code_Seller_Del, Code_Promotion, Blocked, Code_User, Order_Num_ofClient, Code_Trademark, Code_Seller, Delivery_Date, &#xA;Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;Order_Num_Cli, Observations, Code_Lock, Code_ReturnCause, Status, '1' as Transfered, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, &#xA;Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Code_Ica, Net_Amount2, '1' AS Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;Code_Wholesales, Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, Name1, Name2, Phone1, Population, Code_Warehouse, Amount_Surcharge, &#xA;Date_Expired&#xA;FROM  prj_orders_header) as MOD INNER JOIN prj_orders_header ON MOD.Order_Num = prj_orders_header.Order_Num &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO&#xA;&#xA;-- Baja (1)&#xA;UPDATE prj_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_orders_header &#xA;where Order_Num = prj_orders_header.Order_Num and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Baja (2)&#xA;UPDATE prj_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_orders_header &#xA;where Order_Num_ofClient = prj_orders_header.Order_Num_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja (1)&#xA;UPDATE prj_orders_header SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_orders_header &#xA;where Order_Num = prj_orders_header.Order_Num and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Quitar Baja (2)&#xA;UPDATE prj_orders_header SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_orders_header &#xA;where Order_Num_ofClient = prj_orders_header.Order_Num_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts"
      DTS:DTSID="{B5E9DE33-046C-4D1C-AE4B-B450D94537F9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO contacts (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, Code_ofClient, Name1, Name2, NIF, Address, Street1,&#xA;                      Population, ZIP, Region, HouseNum, Code_Country, Phone1, Phone2, Phone3, Fax, E_mail, Code_Status, Code_ClassificationA, Code_ClassificationB, &#xA;                      Code_ClassificationC, Code_Manager, Code_Language, Principal, Gender, Code_Seller, Code_Team, Observations, Transfered, New_Account, Language_tr, &#xA;                      Description)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_contacts.Code_ofClient) + 100000 as varchar(8)) as Code,  ERP_IMPLT_contacts.Code_ofClient, Name1, Name2, NIF, Address, Street1,&#xA;                      Population, ZIP, Region, HouseNum, Code_Country, Phone1, Phone2, Phone3, Fax, E_mail, Code_Status, Code_ClassificationA, Code_ClassificationB, &#xA;                      Code_ClassificationC, Code_Manager, Code_Language, Principal, Gender, Code_Seller, Code_Team, Observations, '1' as Transfered, New_Account, Language_tr, &#xA;                      ERP_IMPLT_contacts.Description&#xA;FROM        ERP_IMPLT_contacts left join sellers on sellers.code_ofClient = ERP_IMPLT_contacts.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient from contacts where Code_ofClient = ERP_IMPLT_contacts.Code_ofClient)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE contacts SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Name1 = MOD.Name1, Name2 = MOD.Name2, NIF = MOD.NIF, Address = MOD.Address, Street1 = MOD.Street1, Population = MOD.Population, ZIP = MOD.ZIP, &#xA;&#x9;&#x9;Region = MOD.Region, HouseNum = MOD.HouseNum, Code_Country = MOD.Code_Country, Phone1 = MOD.Phone1, Phone2 = MOD.Phone2, Phone3 = MOD.Phone3, &#xA;&#x9;&#x9;Fax = MOD.Fax, E_mail = MOD.E_mail, Code_Status = MOD.Code_Status, Code_ClassificationA = MOD.Code_ClassificationA, &#xA;&#x9;&#x9;Code_ClassificationB = MOD.Code_ClassificationB, Code_ClassificationC = MOD.Code_ClassificationC, Code_Manager = MOD.Code_Manager, &#xA;&#x9;&#x9;Code_Language = MOD.Code_Language, Principal = MOD.Principal, Gender = MOD.Gender, Code_Seller = MOD.Code_Seller, Code_Team = MOD.Code_Team, &#xA;&#x9;&#x9;Observations = MOD.Observations, New_Account = MOD.New_Account, Language_tr = MOD.Language_tr, Description = MOD.Description&#xA;FROM&#xA;(SELECT    ERP_IMPLT_contacts.Code_ofClient, Name1, Name2, NIF, Address, Street1, Population, ZIP, Region, HouseNum, Code_Country, Phone1, Phone2, Phone3, Fax, E_mail, Code_Status, Code_ClassificationA, Code_ClassificationB, &#xA;                      Code_ClassificationC, Code_Manager, Code_Language, Principal, Gender, Code_Seller, Code_Team, Observations, '1' as Transfered, New_Account, Language_tr, &#xA;                      ERP_IMPLT_contacts.Description&#xA;FROM        ERP_IMPLT_contacts left join sellers on sellers.code_ofClient = ERP_IMPLT_contacts.Code_Seller &#xA;EXCEPT&#xA;SELECT     Code_ofClient, Name1, Name2, NIF, Address, Street1, Population, ZIP, Region, HouseNum, Code_Country, Phone1, Phone2, Phone3, Fax, E_mail, &#xA;           Code_Status, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_Manager, Code_Language, Principal, Gender, &#xA;&#x9;&#x9;   Code_Seller, Code_Team, Observations, Transfered, New_Account, Language_tr, Description&#xA;FROM         contacts) as MOD INNER JOIN contacts ON MOD.Code_ofClient = contacts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE contacts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_contacts where Code_ofClient = contacts.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE contacts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  contacts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_contacts where Code_ofClient = contacts.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts CI"
      DTS:DTSID="{D11FAC58-1CBC-4DC1-B037-7720CA9F52EE}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="6">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE contacts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_contacts where Code_ofClient = contacts.Code_ofClient) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts_accounts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts_accounts"
      DTS:DTSID="{11972DAF-EF93-4105-B44C-14D0FC8F1642}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts_accounts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO contacts_accounts (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Contact, Code_Unit_Org, Code_Sales_Org, Code_Account, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;contacts.Code as Code_Contact, ERP_IMPLT_contacts_accounts.Code_Unit_Org, ERP_IMPLT_contacts_accounts.Code_Sales_Org, accounts.Code as Code_Account, '1' as Transfered&#xA;FROM        ERP_IMPLT_contacts_accounts inner join contacts on ERP_IMPLT_contacts_accounts.Code_Contact = contacts.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_contacts_accounts.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Contact, Code_Unit_Org, Code_Sales_Org, Code_Account from contacts_accounts where Code_Contact = contacts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_contacts_accounts.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_contacts_accounts.Code_Sales_Org and Code_Account = accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación. No hay modificación ya que todos los campos forman parte de la clave&#xA;&#xA;-- Baja&#xA;UPDATE contacts_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_contacts_accounts.Code_Contact FROM ERP_IMPLT_contacts_accounts inner join contacts on ERP_IMPLT_contacts_accounts.Code_Contact = contacts.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_contacts_accounts.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where contacts.code = contacts_accounts.Code_Contact and ERP_IMPLT_contacts_accounts.Code_Unit_Org = contacts_accounts.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_accounts.Code_Sales_Org = contacts_accounts.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = contacts_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE contacts_accounts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  contacts_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_contacts_accounts.Code_Contact FROM ERP_IMPLT_contacts_accounts inner join contacts on ERP_IMPLT_contacts_accounts.Code_Contact = contacts.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_contacts_accounts.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where contacts.code = contacts_accounts.Code_Contact and ERP_IMPLT_contacts_accounts.Code_Unit_Org = contacts_accounts.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_accounts.Code_Sales_Org = contacts_accounts.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = contacts_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts_accounts CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts_accounts CI"
      DTS:DTSID="{4E91D57F-41B4-4556-ACC8-D868A4735B24}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts_accounts CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="7">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE contacts_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_contacts_accounts.Code_Contact FROM ERP_IMPLT_contacts_accounts inner join contacts on ERP_IMPLT_contacts_accounts.Code_Contact = contacts.Code_ofClient&#xA;        inner join accounts on ERP_IMPLT_contacts_accounts.Code_Account = accounts.Code_ofClient  &#xA;&#x9;&#x9;where contacts.code = contacts_accounts.Code_Contact and ERP_IMPLT_contacts_accounts.Code_Unit_Org = contacts_accounts.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_accounts.Code_Sales_Org = contacts_accounts.Code_Sales_Org &#xA;&#x9;&#x9;and accounts.Code = contacts_accounts.Code_Account) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts_organization"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts_organization"
      DTS:DTSID="{79991279-7E42-45D9-8E79-F0FFF6B4E316}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts_organization"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO contacts_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Contact, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Status, Code_ClassificationB, Code_ClassificationC, Code_Seller, Code_Team, Lock, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;contacts.Code as Code_Contact, ERP_IMPLT_contacts_organization.Code_Unit_Org, ERP_IMPLT_contacts_organization.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_contacts_organization.Code_Status, ERP_IMPLT_contacts_organization.Code_ClassificationB, ERP_IMPLT_contacts_organization.Code_ClassificationC, &#xA;&#x9;ERP_IMPLT_contacts_organization.Code_Seller, ERP_IMPLT_contacts_organization.Code_Team, ERP_IMPLT_contacts_organization.Lock, '1' as Transfered&#xA;FROM        ERP_IMPLT_contacts_organization inner join contacts on ERP_IMPLT_contacts_organization.Code_Contact = contacts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Contact, Code_Unit_Org, Code_Sales_Org from contacts_organization where Code_Contact = contacts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_contacts_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_contacts_organization.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE contacts_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Code_ClassificationB = MOD.Code_ClassificationB, Code_ClassificationC = MOD.Code_ClassificationC, &#xA;&#x9;&#x9;Code_Seller = MOD.Code_Seller, Code_Team = MOD.Code_Team, Lock = MOD.Lock, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT contacts.Code as Code_Contact, ERP_IMPLT_contacts_organization.Code_Unit_Org, ERP_IMPLT_contacts_organization.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_contacts_organization.Code_Status, ERP_IMPLT_contacts_organization.Code_ClassificationB, ERP_IMPLT_contacts_organization.Code_ClassificationC, &#xA;&#x9;ERP_IMPLT_contacts_organization.Code_Seller, ERP_IMPLT_contacts_organization.Code_Team, ERP_IMPLT_contacts_organization.Lock, '1' as Transfered&#xA;FROM        ERP_IMPLT_contacts_organization inner join contacts on ERP_IMPLT_contacts_organization.Code_Contact = contacts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Contact, Code_Unit_Org, Code_Sales_Org, Code_Status, Code_ClassificationB, Code_ClassificationC, Code_Seller, Code_Team, Lock, Transfered&#xA;FROM         contacts_organization) as MOD INNER JOIN contacts_organization ON MOD.Code_Contact = contacts_organization.Code_Contact and MOD.Code_Unit_Org = contacts_organization.Code_Unit_Org and MOD.Code_Sales_Org = contacts_organization.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE contacts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_contacts_organization.Code_Contact FROM ERP_IMPLT_contacts_organization inner join contacts on ERP_IMPLT_contacts_organization.Code_Contact = contacts.Code_ofClient &#xA;&#x9;&#x9;where contacts.code = contacts_organization.Code_Contact and ERP_IMPLT_contacts_organization.Code_Unit_Org = contacts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_organization.Code_Sales_Org = contacts_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE contacts_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  contacts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_contacts_organization.Code_Contact FROM ERP_IMPLT_contacts_organization inner join contacts on ERP_IMPLT_contacts_organization.Code_Contact = contacts.Code_ofClient &#xA;&#x9;&#x9;where contacts.code = contacts_organization.Code_Contact and ERP_IMPLT_contacts_organization.Code_Unit_Org = contacts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_organization.Code_Sales_Org = contacts_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\contacts_organization CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="contacts_organization CI"
      DTS:DTSID="{A7938970-BB95-4732-B9A5-B2BD7D37EB5B}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="contacts_organization CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE contacts_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  contacts_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_contacts_organization.Code_Contact FROM ERP_IMPLT_contacts_organization inner join contacts on ERP_IMPLT_contacts_organization.Code_Contact = contacts.Code_ofClient &#xA;&#x9;&#x9;where contacts.code = contacts_organization.Code_Contact and ERP_IMPLT_contacts_organization.Code_Unit_Org = contacts_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_contacts_organization.Code_Sales_Org = contacts_organization.Code_Sales_Org ) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\core_users"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="core_users"
      DTS:DTSID="{FBA5065C-2E4D-432A-AEAC-CBD479AC7C21}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="core_users"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="SELECT SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('MD5', 'developer')), 3, 32) AS MD5&#xA;&#xA;-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO core_users (Code, Description, Login, Password, User_Level, Code_Manager, Active, Start_Module, &#xA;User_Language, First_Name, Last_Name, Email, Code_Theme, &#xA;                      Desarrollador, Databox, Delegation, passwordL, Supplant, Code_Policy, Remain_Pass)&#xA;SELECT  Code, Description, Login, --Password, &#xA;SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('MD5', Login)), 3, 32)  as Password,&#xA;'5' AS User_Level, &#xA;Code_Manager, Active, Start_Module, 'es' AS User_Language, &#xA;First_Name, Last_Name, Email, Code_Theme, &#xA;                      Desarrollador, Databox, Delegation, passwordL, Supplant, Code_Policy, Remain_Pass&#xA;FROM         ERP_IMPLT_users WHERE ERP_IMPLT_users.Code not in (SELECT Code from core_users)&#xA;GO&#xA;&#xA;-- Modificación&#xA;-- Quitamos algunos campos que siempre se mantienen desde Hydra&#xA;UPDATE core_users SET Description = MOD.Description, Login = MOD.Login,&#xA;Password = MOD.password, &#xA; Active = MOD.Active, First_Name = MOD.First_Name, Last_Name = MOD.Last_Name, &#xA;&#x9;&#x9;Email = MOD.Email, Delegation = MOD.Delegation &#xA;FROM&#xA;(SELECT  Code, Login, &#xA;SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('MD5', Login)), 3, 32)  as Password,&#xA;Description, Active, First_Name, Last_Name, Email, Delegation&#xA;FROM         ERP_IMPLT_users&#xA;EXCEPT&#xA;SELECT     Code, Login, Password, Description, Active, First_Name, Last_Name, Email, Delegation&#xA;FROM         core_users) as MOD INNER JOIN core_users ON MOD.Code = core_users.Code&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE core_users SET Active = '0'&#xA;FROM  core_users &#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_users where Code = core_users.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE core_users SET Active = '1'&#xA;FROM  core_users &#xA;WHERE  Active = '0' and exists (SELECT Code FROM ERP_IMPLT_users where Code = core_users.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_users (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code_User, Login_PDA, Password_PDA, Active_PDA, &#xA;                      Code_Calendar, Code_Country, Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Latitude, Length, Technical, &#xA;                      Phone, Code_Type, Exp_Level, Code_User_Val, Code_Policy, Validation_Pass, Server_version, Code_Provider, Type_Ret, IVA_Comm, Allow_C_Prom, &#xA;                      Code_Prince_List1, Code_Prince_List2, Code_Prince_List3)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code as Code_User, &#xA;Login AS Login_PDA, &#xA;--Password_PDA, &#xA;SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('MD5', cast(Login AS varchar(250)))), 3, 32) AS Password_PDA,&#xA;Active_PDA, Code_Calendar, Code_Country, Code_Region, Code_Province, Code_Population, ZIP, &#xA;Address1, Address2, Province, Population, Hamlet, Latitude, Length, Technical, &#xA;                      Phone, Code_Type, Exp_Level, Code_User_Val, Code_Policy, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Validation_Pass, Server_version, '1' AS Code_Provider, Type_Ret, IVA_Comm, Allow_C_Prom, &#xA;                      Code_Prince_List1, Code_Prince_List2, Code_Prince_List3&#xA;FROM         ERP_IMPLT_users CROSS JOIN View_System_Fields_ERP&#xA;WHERE ERP_IMPLT_users.Code not in (SELECT Code_User from prj_users)&#xA;GO&#xA;&#xA;-- Modificación&#xA;-- No actualizamos algunos campos que se mantienen en Hydra&#xA;UPDATE prj_users SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;&#x9;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;Login_PDA = MOD.Login_PDA, Password_PDA = MOD.Password_PDA,&#xA;&#x9;Code_Country = MOD.Code_Country, Code_Region = MOD.Code_Region, Code_Province = MOD.Code_Province, Code_Population = MOD.Code_Population, &#xA;&#x9;ZIP = MOD.ZIP, Address1 = MOD.Address1, Address2 = MOD.Address2, Province = MOD.Province, Population = MOD.Population, Hamlet = MOD.Hamlet, &#xA;&#x9;Latitude = MOD.Latitude, Length = MOD.Length, Phone = MOD.Phone, Code_Type = MOD.Code_Type, &#xA;&#x9;--Code_Provider = MOD.Code_Provider, &#xA;&#x9;Type_Ret = MOD.Type_Ret, &#xA;&#x9;IVA_Comm = MOD.IVA_Comm, Allow_C_Prom = MOD.Allow_C_Prom, Code_Prince_List1 = MOD.Code_Prince_List1, Code_Prince_List2 = MOD.Code_Prince_List2, Code_Prince_List3 = MOD.Code_Prince_List3&#xA;FROM&#xA;(SELECT  Code as Code_User, Login AS Login_PDA,&#xA;SUBSTRING(master.dbo.fn_varbintohexstr(HashBytes('MD5', cast(Login AS varchar(250)))), 3, 32) AS Password_PDA,&#xA;Code_Country, Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Latitude, Length,  &#xA;                      Phone, Code_Type, --Code_Provider, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Type_Ret, IVA_Comm, Allow_C_Prom, Code_Prince_List1, Code_Prince_List2, Code_Prince_List3&#xA;FROM         ERP_IMPLT_users&#xA;EXCEPT&#xA;SELECT  Code_User, Login_PDA, Password_PDA,&#xA;Code_Country, Code_Region, Code_Province, Code_Population, ZIP, Address1, Address2, Province, Population, Hamlet, Latitude, Length,  &#xA;                      Phone, Code_Type, --Code_Provider, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Type_Ret, IVA_Comm, Allow_C_Prom, Code_Prince_List1, Code_Prince_List2, Code_Prince_List3&#xA;FROM         prj_users) as MOD INNER JOIN prj_users ON MOD.Code_User = prj_users.Code_User CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_users SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT code FROM ERP_IMPLT_users where code = prj_users.Code_User and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_users  SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_users CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT code FROM ERP_IMPLT_users where code = prj_users.Code_User and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\core_users CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="core_users CI"
      DTS:DTSID="{61501E6A-41CA-4F2C-B94B-BF948BBF44EC}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="core_users CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;-- Controlamos por si hemos creado manualmente el usuarios principales (admin, developer, pruebas y virtual)&#xA;UPDATE core_users SET Active = '0'&#xA;FROM  core_users &#xA;WHERE  Active = '0' and not exists (SELECT Code FROM ERP_IMPLT_users where Code = core_users.Code) and Code not in ('1','9','10','9999')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;-- Controlamos por si hemos creado manualmente el usuarios principales (admin, developer, pruebas y virtual)&#xA;UPDATE prj_users SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_sellers where code_ofClient = prj_users.Code_User ) and Code_User not in ('1','9','10','9999')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Corrige errores del cliente en pedidos y cargas"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C64FDA69-0739-42C3-BD74-8450EC16BE8D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Corrige errores del cliente en pedidos y cargas"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="DELETE FROM loads_detail&#xA;&#xA;DELETE FROM loads_orders&#xA;&#xA;delete from prj_loads_detail&#xA;&#xA;delete FROM prj_loads_head&#xA;&#xA;DELETE FROM loads_head" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\corrige hist_header"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7C8B3C1C-CE6D-4E73-A014-748BA835B3C5}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="corrige hist_header"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="UPDATE ERP_IMPLT_hist_orders_header set Code_Unit_Org = '0' + Code_Unit_Org &#xA;WHERE len(Code_Unit_Org) = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Corrige prj_orders_header"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{87AC0995-CD12-4E64-8D2A-BD118C2764AF}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Corrige prj_orders_header"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="UPDATE ERP_IMPLT_orders_header set Code_Unit_Org = '0' + Code_Unit_Org &#xA;WHERE len(Code_Unit_Org) = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Corrige ruta"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{DF3967CD-3D4C-4ABE-ADE2-59A4048EEDC4}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Corrige ruta"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="UPDATE ERP_IMPLT_route_header set Code_Sales_Org = '0' + Code_Sales_Org &#xA;WHERE len(Code_Sales_Org) = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Corrige Warehouses"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{39ED7057-1401-45CF-8AEA-7A9ACE505FDA}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Corrige Warehouses"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="UPDATE ERP_IMPLT_warehouses set Code_Sales_Org = '0' + Code_Sales_Org &#xA;WHERE len(Code_Sales_Org) = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\countries"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="countries"
      DTS:DTSID="{B88A8975-8ED9-4D3F-A67A-DF9669840527}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="countries"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_countries (Code, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Country as Code, Code_Country as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_countries where code = ERP_IMPLT_accounts.Code_Country) &#xA;and not exists (SELECT Code FROM countries where code = ERP_IMPLT_accounts.Code_Country) and Code_Country is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO countries (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_countries CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM countries where Code = ERP_IMPLT_countries.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE countries SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Description&#xA;FROM         ERP_IMPLT_countries&#xA;EXCEPT&#xA;SELECT     Code, Description&#xA;FROM         countries) as MOD INNER JOIN countries ON MOD.Code = countries.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE countries SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  countries CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_countries where Code = countries.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE countries SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  countries CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_countries where Code = countries.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\countries CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="countries CI"
      DTS:DTSID="{66C99272-D588-4A75-8DC5-C9FC81054D31}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="countries CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="15">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE countries SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  countries CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_countries where Code = countries.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\equipment_account"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="equipment_account"
      DTS:DTSID="{8D5DC3CE-2C3B-45BF-AB67-C80088B757F1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="equipment_account"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO equipment_account (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_User, Code_Product, Reference, Date_Request, Date_Delivery, Date_Recession, Quantity, Code_Status, Notes, Code_EAN, QR_Code)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_equipment_accounts.Code) + 100000 as varchar(6)) as Code, accounts.Code as Code_Account,&#xA;&#x9;Code_Unit_Org, Code_Sales_Org, Code_User, products.Code as Code_Product, left(ERP_IMPLT_equipment_accounts.Code,20) as Reference, Date_Request, Date_Delivery, Date_Recession, Quantity, ERP_IMPLT_equipment_accounts.Code_Status, &#xA;&#x9;Notes, Code_EAN, QR_Code&#xA;FROM        ERP_IMPLT_equipment_accounts inner join accounts on ERP_IMPLT_equipment_accounts.Code_Account = accounts.Code_ofClient &#xA;left join products on products.Code_ofClient = ERP_IMPLT_equipment_accounts.Code_Product CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code, Reference from equipment_account where Reference = ERP_IMPLT_equipment_accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE equipment_account SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, Code_User = MOD.Code_User, Code_Product = MOD.Code_Product, &#xA;&#x9;&#x9;Date_Request = MOD.Date_Request, Date_Delivery = MOD.Date_Delivery, Date_Recession = MOD.Date_Recession, Quantity = MOD.Quantity, Code_Status = MOD.Code_Status, &#xA;&#x9;&#x9;Notes = MOD.Notes, Code_EAN = MOD.Code_EAN, QR_Code = MOD.QR_Code&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, Code_Unit_Org, Code_Sales_Org, Code_User, products.Code as Code_Product, left(ERP_IMPLT_equipment_accounts.Code,20) as Reference, Date_Request, &#xA;       Date_Delivery, Date_Recession, Quantity, ERP_IMPLT_equipment_accounts.Code_Status, Notes, Code_EAN, QR_Code&#xA;FROM        ERP_IMPLT_equipment_accounts inner join accounts on ERP_IMPLT_equipment_accounts.Code_Account = accounts.Code_ofClient &#xA;left join products on products.Code_ofClient = ERP_IMPLT_equipment_accounts.Code_Product&#xA;     EXCEPT&#xA;     SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_User, Code_Product, Reference, Date_Request, Date_Delivery, Date_Recession, Quantity, Code_Status, Notes, Code_EAN, QR_Code&#xA;FROM         equipment_account) as MOD INNER JOIN equipment_account ON MOD.Reference = equipment_account.Reference CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE equipment_account SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  equipment_account CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_equipment_accounts.Code FROM ERP_IMPLT_equipment_accounts  &#xA;&#x9;&#x9;where ERP_IMPLT_equipment_accounts.Reference = equipment_account.Reference and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE equipment_account SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  equipment_account CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_equipment_accounts.Code FROM ERP_IMPLT_equipment_accounts  &#xA;&#x9;&#x9;where ERP_IMPLT_equipment_accounts.Reference = equipment_account.Reference and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\equipment_account CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="equipment_account CI"
      DTS:DTSID="{251D3F0C-FC2E-4B03-8F48-C2B90EFC4DE9}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="equipment_account CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="16">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE equipment_account SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  equipment_account CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_equipment_accounts.Code FROM ERP_IMPLT_equipment_accounts  &#xA;&#x9;&#x9;where ERP_IMPLT_equipment_accounts.Code = equipment_account.Reference) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\equipment_array"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="equipment_array"
      DTS:DTSID="{35409984-A0B2-43E8-BC5E-D803FE875332}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="equipment_array"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO equipment_array (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Type, Description, Orden, Active, Agrupation)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Type, Description, 1 as Orden, case when isnull(Status_SAP,'1') = '3' then '0' else '1' end Active, NULL as Agrupation&#xA;FROM         ERP_IMPLT_equipment_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM equipment_array where Code = ERP_IMPLT_equipment_array.Code and Type = ERP_IMPLT_equipment_array.Type)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE equipment_array SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description, Active = MOD.Active FROM&#xA;(SELECT  Code, Type, Description, case when isnull(Status_SAP,'1') = '3' then '0' else '1' end Active&#xA;FROM         ERP_IMPLT_equipment_array&#xA;EXCEPT&#xA;SELECT     Code, Type, Description, Active&#xA;FROM         equipment_array) as MOD INNER JOIN equipment_array ON MOD.Code = equipment_array.Code and MOD.Type = equipment_array.Type CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE equipment_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  equipment_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_equipment_array where Code = equipment_array.Code and Type = equipment_array.Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE equipment_array SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  equipment_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_equipment_array where Code = equipment_array.Code and Type = equipment_array.Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\equipment_array CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="equipment_array CI"
      DTS:DTSID="{8C21481C-1513-4D30-9C75-25B4F37886EC}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="equipment_array CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="17">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE equipment_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  equipment_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_equipment_array where Code = equipment_array.Code and Type = equipment_array.Type) &#xA;and type not in ('1')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0FFBA723-707F-4AB5-A140-694770607015}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE prj_promotions_tot&#xA;GO&#xA;&#xA;INSERT INTO prj_promotions_tot (Code_Promo, Code_User)&#xA;SELECT DISTINCT d.Code_Promo, uo.Code_User&#xA;FROM            dbo.prj_promotions_destiny AS d INNER JOIN&#xA;                         dbo.accounts AS a ON CONVERT(varchar, d.Code)&#xA;                         = CASE WHEN d .code_variable = '40' THEN Code_classificationC WHEN d .code_variable = '41' THEN Code_Agrupation1 WHEN d .code_variable = '14' THEN Code_ofClient WHEN d .code_variable = '09' THEN Code_ClassificationA&#xA;                          ELSE '' END AND a.Delete_Date IS NULL INNER JOIN&#xA;                         dbo.route_accounts AS r ON r.Code_Account = a.Code AND r.Delete_Date IS NULL INNER JOIN&#xA;                         dbo.route_sellers AS rs ON r.Code_Route = rs.Code_Route AND rs.Delete_Date IS NULL LEFT OUTER JOIN&#xA;                         dbo.users_organizations_sellers AS uo ON rs.Code_Seller = uo.Code_Seller AND uo.Code_User &lt;&gt; '10' AND uo.Delete_Date IS NULL&#xA;WHERE        (d.Delete_Date IS NULL) AND (d.Code_Promo IN&#xA;                             (SELECT DISTINCT Code&#xA;                               FROM            dbo.prj_promotions_head&#xA;                               WHERE        (Delete_Date IS NULL) AND (Date_End &gt;= CONVERT(varchar, GETDATE(), 112))))&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\loads_detail"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="loads_detail"
      DTS:DTSID="{EFBA905C-90BB-4D56-8375-714D45D8D5F6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="loads_detail"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- No existe caga inicial de las Cargas&#xA;&#xA;-- Alta&#xA;INSERT INTO loads_detail (Create_User, Create_Date, Modify_User, Modify_Date,  &#xA;Platform, Code, Num_Line, Code_Product, &#xA;                      Code_Product_Sus, Lot_Group, Quantity, Quantity_Real, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Unit_Type, Factor_Conversion, Prepared, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_loads_head.Code, Num_Line, products.Code as Code_Product, &#xA;&#x9;products_1.Code as Code_Product_Sus, &#xA;&#x9;'999999' AS Lot_Group, &#xA;&#x9;Quantity, Quantity_Real, Unit_Type, &#xA;&#x9;ERP_IMPLT_loads_detail.Factor_Conversion, Prepared, '1' as Transfered&#xA;FROM   ERP_IMPLT_loads_detail &#xA;inner join prj_loads_head on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient &#xA;INNER JOIN loads_head ON loads_head.Code = prj_loads_head.Code&#xA;inner join products on products.Code_ofClient = ERP_IMPLT_loads_detail.Code_product&#xA;left join products as products_1 &#xA;on products_1.Code_ofClient = ERP_IMPLT_loads_detail.Code_Product_Sus&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code, Num_Line from loads_detail &#xA;where Code = loads_detail.Code and Num_Line = ERP_IMPLT_loads_detail.Num_Line)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE loads_detail SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;&#x9;&#x9;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;&#x9;&#x9;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Product = MOD.Code_Product, Code_Product_Sus = MOD.Code_Product_Sus, &#xA;&#x9;&#x9;Lot_Group = MOD.Lot_Group, Quantity = MOD.Quantity, &#xA;&#x9;&#x9;Quantity_Real = MOD.Quantity_Real, &#xA;&#x9;&#x9;Unit_Type = MOD.Unit_Type, Factor_Conversion = MOD.Factor_Conversion, &#xA;&#x9;&#x9;Prepared = MOD.Prepared, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT prj_loads_head.Code, Num_Line, products.Code as Code_Product, &#xA;products_1.Code as Code_Product_Sus, &#xA;'999999' AS Lot_Group, &#xA;Quantity, Quantity_Real, Unit_Type, &#xA;&#x9;ERP_IMPLT_loads_detail.Factor_Conversion, Prepared, '1' as Transfered&#xA;FROM   ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient &#xA;inner join products &#xA;on products.Code_ofClient = ERP_IMPLT_loads_detail.Code_product&#xA;left join products as products_1 &#xA;on products_1.Code_ofClient = ERP_IMPLT_loads_detail.Code_Product_Sus&#xA;EXCEPT&#xA;SELECT  Code, Num_Line, Code_Product, Code_Product_Sus, Lot_Group, &#xA;Quantity, Quantity_Real, Unit_Type, Factor_Conversion, Prepared, Transfered&#xA;FROM         loads_detail) as MOD INNER JOIN loads_detail &#xA;ON MOD.Code = loads_detail.Code and MOD.Num_Line = loads_detail.Num_Line CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE loads_detail SET Delete_Date = View_System_Fields_ERP.Create_Date, &#xA;Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  loads_detail CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_loads_head.Code, ERP_IMPLT_loads_detail.Num_Line &#xA;FROM ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;where prj_loads_head.Code = loads_detail.Code &#xA;and ERP_IMPLT_loads_detail.Num_Line = loads_detail.Num_Line &#xA;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE loads_detail SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  loads_detail CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_loads_head.Code &#xA;FROM ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;where prj_loads_head.Code = loads_detail.Code &#xA;and ERP_IMPLT_loads_detail.Num_Line = loads_detail.Num_Line &#xA;and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_loads_detail (Create_User, Create_Date, Modify_User, &#xA;Modify_Date,  Platform, Code, Num_Line, Promotional--, Code_Route, Code_Sales_Org&#xA;)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_loads_head.Code, Num_Line, Promotional--, Code_Route, ERP_IMPLT_loads_detail.Code_Sales_Org&#xA;FROM   ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code, Num_Line from prj_loads_detail &#xA;where Code = prj_loads_head.Code and Num_Line = ERP_IMPLT_loads_detail.Num_Line)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_loads_detail SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;&#x9;&#x9;Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, &#xA;&#x9;&#x9;Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Promotional = MOD.Promotional--,&#xA;&#x9;&#x9;--Code_Route = MOD.Code_Route,&#xA;&#x9;&#x9;--Code_Sales_Org = MOD.Code_Sales_Org&#xA;FROM&#xA;(SELECT prj_loads_head.Code, Num_Line, Promotional--, Code_Route, ERP_IMPLT_loads_detail.Code_Sales_Org&#xA;FROM   ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;EXCEPT&#xA;SELECT  Code, Num_Line, Promotional--,Code_Route, Code_Sales_Org&#xA;FROM         prj_loads_detail) as MOD INNER JOIN prj_loads_detail &#xA;ON MOD.Code = prj_loads_detail.Code and MOD.Num_Line = prj_loads_detail.Num_Line &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_loads_detail SET Delete_Date = View_System_Fields_ERP.Create_Date, &#xA;Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_loads_detail CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_loads_head.Code, ERP_IMPLT_loads_detail.Num_Line &#xA;FROM ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;where prj_loads_head.Code = prj_loads_detail.Code &#xA;and ERP_IMPLT_loads_detail.Num_Line = prj_loads_detail.Num_Line &#xA;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_loads_detail SET Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_loads_detail CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_loads_head.Code, &#xA;ERP_IMPLT_loads_detail.Num_Line FROM ERP_IMPLT_loads_detail inner join prj_loads_head &#xA;on ERP_IMPLT_loads_detail.Code = prj_loads_head.Code_ofClient&#xA;where prj_loads_head.Code = prj_loads_detail.Code &#xA;and ERP_IMPLT_loads_detail.Num_Line = prj_loads_detail.Num_Line and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\loads_head"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="loads_head"
      DTS:DTSID="{C766D407-42F1-436E-BDF0-683A922343FF}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="loads_head"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA EXTENDIDA&#xA;-- En este caso empezamos por la Tabla extendida porque es donde se encuentra el Code_ofClient.&#xA;-- Por este motivo no existe una FK en el campo Code con LOADS_HEAD&#xA;&#xA;-- No hay carga inicial de Cargas&#xA;-- Alta&#xA;INSERT INTO prj_loads_head (Create_User, Create_Date, Modify_User, Modify_Date,  &#xA;Platform,  &#xA;Code_Warehouse2, Code_Type2, &#xA;Code,&#xA;Code_War, &#xA;Type_Mov,&#xA;Doc_Ref, &#xA; Order_Tras, Del_Number,&#xA;Date_Con, Code_ofClient, Code_Sales_Org)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA; View_System_Fields_ERP.Platform,   &#xA; Code_Warehouse2, Code_Type2,&#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;+ cast(ROW_NUMBER() OVER (order by ERP_IMPLT_loads_head.Code_ofClient) + 100000 as varchar(8)) as Code, &#xA;&#x9; Code_War, Type_Mov,&#xA;&#x9; Doc_Ref, Order_Tras, Del_Number, &#xA;&#x9; Date_Con, ERP_IMPLT_loads_head.Code as Code_ofClient, &#xA;&#x9; ERP_IMPLT_loads_head.Code_Sales_Org&#xA;FROM        ERP_IMPLT_loads_head left join warehouses &#xA;on warehouses.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse2 &#xA;AND warehouses.Code_Sales_Org = ERP_IMPLT_loads_head.Code_Sales_Org&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code, Date_load, Code_Sales_Org FROM prj_loads_head &#xA;where ERP_IMPLT_loads_head.Code = prj_loads_head.Code_ofClient) &#xA;GO&#xA;-- Modificación&#xA;--No debería haber update&#xA;/* &#xA;UPDATE prj_loads_head SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;&#x9;&#x9;Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, &#xA;&#x9;&#x9;Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code = MOD.Code,&#xA;&#x9;&#x9;Code_Warehouse2 = MOD.Code_Warehouse2, &#xA;&#x9;&#x9;Code_Type2 = MOD.Code_Type2, Date_Con = MOD.Date_Con, &#xA;&#x9;&#x9;Doc_Ref = MOD.Doc_Ref, Code_War = MOD.Code_War, Type_Mov = MOD.Type_Mov, &#xA;&#x9;&#x9;Order_Tras = MOD.Order_Tras, Del_Number = MOD.Del_Number,&#xA;&#x9;&#x9;Code_ofClient = MOD.Code_ofClient,&#xA;&#x9;&#x9;Code_Sales_Org = MOD.Code_Sales_Org&#xA;FROM&#xA;(SELECT ERP_IMPLT_loads_head.Code, Code_Warehouse2, Code_Type2, Date_Con, Doc_Ref, &#xA;Code_War, Type_Mov, Order_Tras, Del_Number, ERP_IMPLT_loads_head.Code as Code_ofClient,&#xA;ERP_IMPLT_loads_head.Code_Sales_Org&#xA;FROM       ERP_IMPLT_loads_head left join warehouses &#xA;on warehouses.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse2 &#xA;EXCEPT&#xA;SELECT   Code, Code_Warehouse2, Code_Type2,  &#xA;    Date_Con, Doc_Ref, Code_War, Type_Mov, Order_Tras, Del_Number, Code_ofClient, Code_Sales_Org&#xA;FROM         prj_loads_head) as MOD INNER JOIN prj_loads_head &#xA;ON MOD.Code = prj_loads_head.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;*/&#xA;&#xA;-- Baja&#xA;UPDATE prj_loads_head SET Delete_Date = View_System_Fields_ERP.Create_Date, &#xA;Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_loads_head CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_loads_head &#xA;where Code = prj_loads_head.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_loads_head SET Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, &#xA;Delete_User = NULL&#xA;FROM  prj_loads_head CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (&#xA;SELECT Code FROM ERP_IMPLT_loads_head where Code = prj_loads_head.Code&#xA; and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO loads_head (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, Code_Warehouse_Sou, Code_Warehouse_Des, Code_Type, Date_load, Code_Status,  Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_loads_head.Code, &#xA;CASE WHEN warehouses.Code IS NULL &#xA;THEN (SELECT warehouses.Code FROM warehouses WHERE Code_ofClient = '1000' AND Code_Sales_Org = '01')&#xA;ELSE warehouses.Code END as Code_Warehouse_Sou, &#xA;&#x9;warehouses_1.Code as Code_Warehouse_Des, &#xA;&#x9;ERP_IMPLT_loads_head.Code_Type, &#xA;&#x9;Date_load, Code_Status,  '1' as Transfered&#xA;FROM   ERP_IMPLT_loads_head&#xA;inner join prj_loads_head&#xA;on ERP_IMPLT_loads_head.Code = prj_loads_head.Code_ofClient&#xA;and prj_loads_head.Delete_Date IS NULL&#xA;left join warehouses &#xA;on warehouses.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse_Sou &#xA;AND warehouses.Code_Sales_Org = ERP_IMPLT_loads_head.Code_Sales_Org&#xA;inner join warehouses as warehouses_1 &#xA;on warehouses_1.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse_Des&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from loads_head where Code = prj_loads_head.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;--No debería modificarse&#xA;/*&#xA;UPDATE loads_head SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Warehouse_Sou = MOD.Code_Warehouse_Sou, Code_Warehouse_Des = MOD.Code_Warehouse_Des, Code_Type = MOD.Code_Type, Date_load = MOD.Date_load, Code_Status = MOD.Code_Status, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT prj_loads_head.Code, warehouses.Code as Code_Warehouse_Sou, warehouses_1.Code as Code_Warehouse_Des, ERP_IMPLT_loads_head.Code_Type, Date_load, Code_Status,  '1' as Transfered&#xA;FROM   ERP_IMPLT_loads_head inner join prj_loads_head on ERP_IMPLT_loads_head.Code = prj_loads_head.Code_ofClient&#xA;inner join warehouses on warehouses.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse_Sou&#xA;AND warehouses.Code_Sales_Org = ERP_IMPLT_loads_head.Code_Sales_Org&#xA;inner join warehouses as warehouses_1 on warehouses_1.Code_ofClient = ERP_IMPLT_loads_head.Code_Warehouse_Des &#xA;EXCEPT&#xA;SELECT  Code, Code_Warehouse_Sou, Code_Warehouse_Des, Code_Type, Date_load, Code_Status,  Transfered&#xA;FROM         loads_head) as MOD INNER JOIN loads_head ON MOD.Code = loads_head.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;*/&#xA;&#xA;-- Baja&#xA;UPDATE loads_head SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  loads_head CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT convert(varchar,prj_loads_head.Code) FROM ERP_IMPLT_loads_head &#xA;inner join prj_loads_head on ERP_IMPLT_loads_head.Code = convert(varchar,prj_loads_head.Code)&#xA;where prj_loads_head.Code = loads_head.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE loads_head SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  loads_head CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_loads_head.Code &#xA;FROM ERP_IMPLT_loads_head inner join prj_loads_head &#xA;on ERP_IMPLT_loads_head.Code = prj_loads_head.Code&#xA;where prj_loads_head.Code = loads_head.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\loads_orders"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="loads_orders"
      DTS:DTSID="{4DFFCB2A-4C48-45A1-8AF9-71407655FC33}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="loads_orders"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- No existe caga inicial de las Cargas&#xA;&#xA;-- Alta&#xA;INSERT INTO loads_orders (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code_Load, Order_Num)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_loads_head.Code as Code_Load, prj_orders_header.Order_Num &#xA;FROM   ERP_IMPLT_loads_orders inner join prj_loads_head &#xA;on ERP_IMPLT_loads_orders.Code_Load = prj_loads_head.Code_ofClient &#xA;inner join prj_orders_header &#xA;on prj_orders_header.Order_Num = REPLACE(LTRIM(REPLACE(ERP_IMPLT_loads_orders.Order_num,'0',' ')),' ','0') &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Load, Order_Num from loads_orders &#xA;where Code = prj_loads_head.Code and Order_Num = prj_orders_header.Order_Num)&#xA;GO&#xA;&#xA;-- Modificación&#xA;-- No exite modificación ya que todos los campos que no son de sistema son claves&#xA;&#xA;-- Baja&#xA;UPDATE loads_orders SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  loads_orders CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_loads_head.Code, prj_orders_header.Order_Num FROM ERP_IMPLT_loads_orders inner join prj_loads_head on ERP_IMPLT_loads_orders.Code_Load = prj_loads_head.Code_ofClient&#xA;inner join prj_orders_header on ERP_IMPLT_loads_orders.Order_Num = prj_orders_header.Order_Num_ofClient&#xA;where prj_loads_head.Code = loads_orders.Code_Load and prj_orders_header.Order_Num = loads_orders.Order_Num and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE loads_orders SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  loads_orders CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_loads_head.Code, prj_orders_header.Order_Num FROM ERP_IMPLT_loads_orders inner join prj_loads_head on ERP_IMPLT_loads_orders.Code_Load = prj_loads_head.Code_ofClient&#xA;inner join prj_orders_header on ERP_IMPLT_loads_orders.Order_Num = prj_orders_header.Order_Num_ofClient&#xA;where prj_loads_head.Code = loads_orders.Code_Load and prj_orders_header.Order_Num = loads_orders.Order_Num and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Modificación cliente"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Modificación cliente"
      DTS:DTSID="{41F4B4C2-4B7A-4C34-AF47-3B2780DE3FE1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Modificación cliente"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Para asegurar que toda la información de los clientes viaja a los terminales cuando se recibe una modificación actualizamos&#xA;-- el Modify_Date de las tablas relacionadas poniendo el más moderno&#xA;-- EN BASE A ACCOUNTS&#xA;UPDATE prj_accounts set Modify_Date = accounts.Modify_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         accounts ON prj_accounts.Code = accounts.Code AND prj_accounts.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = accounts.Modify_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         accounts ON accounts_org.Code_Account = accounts.Code AND accounts_org.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = accounts.Modify_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         accounts ON prj_accounts_organization.Code_Account = accounts.Code AND prj_accounts_organization.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = accounts.Modify_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         accounts ON accounts_organization.Code_Account = accounts.Code AND accounts_organization.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = accounts.Modify_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         accounts ON prj_accounts_tax.Code_Account = accounts.Code AND prj_accounts_tax.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = accounts.Modify_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         accounts ON route_accounts.Code_Account = accounts.Code AND route_accounts.Modify_Date &lt; accounts.Modify_Date&#xA;GO&#xA;&#xA;-- EN BASE A PRJ_ACCOUNTS&#xA;UPDATE accounts set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            accounts INNER JOIN&#xA;                         prj_accounts ON prj_accounts.Code = accounts.Code AND accounts.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         prj_accounts ON accounts_org.Code_Account = prj_accounts.Code AND accounts_org.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         prj_accounts ON prj_accounts_organization.Code_Account = prj_accounts.Code AND prj_accounts_organization.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         prj_accounts ON accounts_organization.Code_Account = prj_accounts.Code AND accounts_organization.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         prj_accounts ON prj_accounts_tax.Code_Account = prj_accounts.Code AND prj_accounts_tax.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = prj_accounts.Modify_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         prj_accounts ON route_accounts.Code_Account = prj_accounts.Code AND route_accounts.Modify_Date &lt; prj_accounts.Modify_Date&#xA;GO&#xA;&#xA;-- EN BASE A ACCOUNTS_ORG&#xA;UPDATE accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts.Code AND accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts.Code AND prj_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_organization.Code_Account AND prj_accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_organization.Code_Account AND accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_tax.Code_Account AND prj_accounts_tax.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_org group by Code_Account) as M_ACC ON M_ACC.Code_Account = route_accounts.Code_Account AND route_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;-- EN BASE A PRJ_ACCOUNTS_ORGANIZATION&#xA;UPDATE accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts.Code AND accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts.Code AND prj_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_org.Code_Account AND accounts_org.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_organization.Code_Account AND accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_tax.Code_Account AND prj_accounts_tax.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = route_accounts.Code_Account AND route_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;-- EN BASE A ACCOUNTS_ORGANIZATION&#xA;UPDATE accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts.Code AND accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts.Code AND prj_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_org.Code_Account AND accounts_org.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_organization.Code_Account AND prj_accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_tax.Code_Account AND prj_accounts_tax.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from accounts_organization group by Code_Account) as M_ACC ON M_ACC.Code_Account = route_accounts.Code_Account AND route_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;-- EN BASE A PRJ_ACCOUNTS_TAX&#xA;UPDATE accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts.Code AND accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts.Code AND prj_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_org.Code_Account AND accounts_org.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_organization.Code_Account AND prj_accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_organization.Code_Account AND accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE route_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            route_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from prj_accounts_tax group by Code_Account) as M_ACC ON M_ACC.Code_Account = route_accounts.Code_Account AND route_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;-- EN BASE A ROUTE_ACCOUNTS&#xA;UPDATE accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts.Code AND accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts.Code AND prj_accounts.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_org set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_org INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_org.Code_Account AND accounts_org.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_organization.Code_Account AND prj_accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE accounts_organization set Modify_Date = M_ACC.Mod_Date&#xA;FROM            accounts_organization INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = accounts_organization.Code_Account AND accounts_organization.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO&#xA;&#xA;UPDATE prj_accounts_tax set Modify_Date = M_ACC.Mod_Date&#xA;FROM            prj_accounts_tax INNER JOIN&#xA;                         (select Max(Modify_date) as Mod_Date, Code_Account from route_accounts group by Code_Account) as M_ACC ON M_ACC.Code_Account = prj_accounts_tax.Code_Account AND prj_accounts_tax.Modify_Date &lt; M_ACC.Mod_Date&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Precios Usuario"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Precios Usuario"
      DTS:Disabled="True"
      DTS:DTSID="{AF003132-F29E-4E52-BD14-76FD22DF05B3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Precios Usuario"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Creamos la tabla de trabajo prj_pricing_TW_tables_seller que es la tabla de precios por cada vendedor&#xA;-- Se crea para que el paquete de exportación sea más rápido y es por vendedor porque es algo que se recibe del ERP&#xA;-- Esto hay que modificarlo en cada proyecto, si se va a utilizar (en las exportaciones de datos)&#xA;-- Borrado de tabla de trabajo&#xA;Truncate table prj_pricing_TW_tables_seller&#xA;GO&#xA;&#xA;-- Carga de la tabla&#xA;INSERT INTO prj_pricing_TW_tables_seller (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Secuence, Code_Table, ValueKey, Code1, Code2, Code3, &#xA;                      Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_Fin, Price_Min, Price_Max, ID_ERP, Type_Based, Code_Currency, Unit_Measure, &#xA;                      Code_Seller)&#xA;SELECT     prj_pricing_tables.Create_User, prj_pricing_tables.Create_Date, prj_pricing_tables.Modify_User, prj_pricing_tables.Modify_Date, prj_pricing_tables.Delete_User, &#xA;                      prj_pricing_tables.Delete_Date, prj_pricing_tables.Platform, prj_pricing_tables.Secuence, prj_pricing_tables.Code_Table, prj_pricing_tables.ValueKey, &#xA;                      prj_pricing_tables.Code1, prj_pricing_tables.Code2, prj_pricing_tables.Code3, prj_pricing_tables.Code4, prj_pricing_tables.Code5, prj_pricing_tables.Code6, &#xA;                      prj_pricing_tables.Code7, prj_pricing_tables.Code8, prj_pricing_tables.Value, prj_pricing_tables.Base, prj_pricing_tables.Date_Ini, prj_pricing_tables.Date_Fin, &#xA;                      prj_pricing_tables.Price_Min, prj_pricing_tables.Price_Max, prj_pricing_tables.ID_ERP, prj_pricing_tables.Type_Based, prj_pricing_tables.Code_Currency, &#xA;                      prj_pricing_tables.Unit_Measure, Sel_Sale.Code_Seller&#xA;FROM         prj_pricing_tables CROSS JOIN&#xA;                          (SELECT     Code AS Code_Seller&#xA;                            FROM          sellers&#xA;                            WHERE      (Delete_Date IS NULL) AND (Code_Type IN ('02', '03', '04', '08', '09', '13'))) AS Sel_Sale&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\pre_prj_payment_accounts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{44A9D89E-AFE0-43E2-99A9-DAFEE5C01554}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="pre_prj_payment_accounts"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [dbo].[prj_accounts_payment_terms]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_accounts_credit"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_accounts_credit"
      DTS:DTSID="{7DE1B7C9-D902-4871-8089-18B4F69EA3AE}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_accounts_credit"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_accounts_credit (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Credit_Limit, Credit_Consum, Code_Plant)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, Credit_Limit, Credit_Consum, Code_Plant&#xA;FROM        ERP_IMPLT_accounts_credit inner join accounts on ERP_IMPLT_accounts_credit.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account from prj_accounts_credit where Code_Account = accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts_credit SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Credit_Limit = MOD.Credit_Limit, Credit_Consum = MOD.Credit_Consum, Code_Plant = MOD.Code_Plant&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, Credit_Limit, Credit_Consum, Code_Plant&#xA;     FROM   ERP_IMPLT_accounts_credit inner join accounts on ERP_IMPLT_accounts_credit.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Credit_Limit, Credit_Consum, Code_Plant&#xA;FROM         prj_accounts_credit) as MOD INNER JOIN prj_accounts_credit ON MOD.Code_Account = prj_accounts_credit.Code_Account CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_accounts_credit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_credit.Code_Account FROM ERP_IMPLT_accounts_credit inner join accounts on ERP_IMPLT_accounts_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_credit.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_accounts_credit SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_accounts_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_credit.Code_Account FROM ERP_IMPLT_accounts_credit inner join accounts on ERP_IMPLT_accounts_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_credit.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_accounts_organ_credit"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_accounts_organ_credit"
      DTS:DTSID="{9F969C56-EB29-417E-A631-95DE6B232578}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_accounts_organ_credit"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_accounts_organ_credit (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Credit_Limit, Credit_Consum, Code_Plant)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_organ_credit.Code_Unit_Org, ERP_IMPLT_accounts_organ_credit.Code_Sales_Org, &#xA;&#x9;Credit_Limit, Credit_Consum, NULL as Code_Plant&#xA;FROM        ERP_IMPLT_accounts_organ_credit inner join accounts on ERP_IMPLT_accounts_organ_credit.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org from prj_accounts_organ_credit where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_accounts_organ_credit.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_organ_credit.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts_organ_credit SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Credit_Limit = MOD.Credit_Limit, Credit_Consum = MOD.Credit_Consum&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_accounts_organ_credit.Code_Unit_Org, ERP_IMPLT_accounts_organ_credit.Code_Sales_Org, &#xA;&#x9;Credit_Limit, Credit_Consum&#xA;     FROM   ERP_IMPLT_accounts_organ_credit inner join accounts on ERP_IMPLT_accounts_organ_credit.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Unit_Org, Code_Sales_Org, Credit_Limit, Credit_Consum&#xA;FROM         prj_accounts_organ_credit) as MOD INNER JOIN prj_accounts_organ_credit ON MOD.Code_Account = prj_accounts_organ_credit.Code_Account and MOD.Code_Unit_Org = prj_accounts_organ_credit.Code_Unit_Org and MOD.Code_Sales_Org = prj_accounts_organ_credit.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_accounts_organ_credit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_organ_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_organ_credit.Code_Account FROM ERP_IMPLT_accounts_organ_credit inner join accounts on ERP_IMPLT_accounts_organ_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_organ_credit.Code_Account and ERP_IMPLT_accounts_organ_credit.Code_Unit_Org = prj_accounts_organ_credit.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organ_credit.Code_Sales_Org = prj_accounts_organ_credit.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_accounts_organ_credit SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_accounts_organ_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_organ_credit.Code_Account FROM ERP_IMPLT_accounts_organ_credit inner join accounts on ERP_IMPLT_accounts_organ_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_organ_credit.Code_Account and ERP_IMPLT_accounts_organ_credit.Code_Unit_Org = prj_accounts_organ_credit.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organ_credit.Code_Sales_Org = prj_accounts_organ_credit.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_accounts_organ_credit CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_accounts_organ_credit CI"
      DTS:DTSID="{E41A5038-AC3E-47D1-98A1-2F0DF1C45A73}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_accounts_organ_credit CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="18">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_accounts_organ_credit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_organ_credit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_organ_credit.Code_Account FROM ERP_IMPLT_accounts_organ_credit inner join accounts on ERP_IMPLT_accounts_organ_credit.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_organ_credit.Code_Account and ERP_IMPLT_accounts_organ_credit.Code_Unit_Org = prj_accounts_organ_credit.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_organ_credit.Code_Sales_Org = prj_accounts_organ_credit.Code_Sales_Org ) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_accounts_tax"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_accounts_tax"
      DTS:DTSID="{95B9FE72-9616-4E13-AB9A-52E099538320}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_accounts_tax"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_accounts_tax (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Country, Type, TaxClassification, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_tax.Code_Country, Type, TaxClassification, '1' as Transfered&#xA;FROM        ERP_IMPLT_accounts_tax inner join accounts on ERP_IMPLT_accounts_tax.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Country, Type from prj_accounts_tax where Code_Account = accounts.Code and &#xA;Code_Country = ERP_IMPLT_accounts_tax.Code_Country and Type = ERP_IMPLT_accounts_tax.Type)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_accounts_tax SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;TaxClassification = MOD.TaxClassification, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_accounts_tax.Code_Country, Type, TaxClassification, '1' as Transfered&#xA;     FROM   ERP_IMPLT_accounts_tax inner join accounts on ERP_IMPLT_accounts_tax.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Code_Country, Type, TaxClassification, Transfered&#xA;FROM         prj_accounts_tax) as MOD INNER JOIN prj_accounts_tax ON MOD.Code_Account = prj_accounts_tax.Code_Account and MOD.Code_Country = prj_accounts_tax.Code_Country and MOD.Type = prj_accounts_tax.Type&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_accounts_tax SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_tax.Code_Account FROM ERP_IMPLT_accounts_tax inner join accounts on ERP_IMPLT_accounts_tax.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_tax.Code_Account and ERP_IMPLT_accounts_tax.Code_Country = prj_accounts_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_tax.Type = prj_accounts_tax.Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_accounts_tax SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_accounts_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_tax.Code_Account FROM ERP_IMPLT_accounts_tax inner join accounts on ERP_IMPLT_accounts_tax.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_tax.Code_Account and ERP_IMPLT_accounts_tax.Code_Country = prj_accounts_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_tax.Type = prj_accounts_tax.Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_accounts_tax CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_accounts_tax CI"
      DTS:DTSID="{C87FC640-5AAE-4C5D-A24A-B9C39668E0F5}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_accounts_tax CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="19">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_accounts_tax SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_accounts_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_tax.Code_Account FROM ERP_IMPLT_accounts_tax inner join accounts on ERP_IMPLT_accounts_tax.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_accounts_tax.Code_Account and ERP_IMPLT_accounts_tax.Code_Country = prj_accounts_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_accounts_tax.Type = prj_accounts_tax.Type) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_account_control"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_account_control"
      DTS:DTSID="{A8B6BE65-A2EC-469A-99D3-ACEC9883635F}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_account_control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_account_control (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, &#xA;&#x9;Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_accounts_control.Control1, &#xA;&#x9;ERP_IMPLT_accounts_control.Control2, &#xA;&#x9;ERP_IMPLT_accounts_control.Control3, &#xA;&#x9;ERP_IMPLT_accounts_control.Control4, ERP_IMPLT_accounts_control.Control5, &#xA;&#x9;ERP_IMPLT_accounts_control.Control6, ERP_IMPLT_accounts_control.Control7, &#xA;&#x9;ERP_IMPLT_accounts_control.Control8&#xA;FROM        ERP_IMPLT_accounts_control &#xA;inner join accounts on ERP_IMPLT_accounts_control.Code_Account = accounts.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account from prj_account_control where Code_Account = accounts.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_account_control SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;&#x9;&#x9;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Control1 = MOD.Control1, Control2 = MOD.Control2, Control3 = MOD.Control3, Control4 = MOD.Control4, &#xA;&#x9;&#x9;Control5 = MOD.Control5, Control6 = MOD.Control6, Control7 = MOD.Control7--, Control8 = MOD.Control8&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_accounts_control.Control1, ERP_IMPLT_accounts_control.Control2, ERP_IMPLT_accounts_control.Control3, ERP_IMPLT_accounts_control.Control4, ERP_IMPLT_accounts_control.Control5, ERP_IMPLT_accounts_control.Control6, ERP_IMPLT_accounts_control.Control7--, ERP_IMPLT_accounts_control.Control8&#xA;     FROM   ERP_IMPLT_accounts_control inner join accounts on ERP_IMPLT_accounts_control.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Account, Control1, Control2, Control3, Control4, Control5, Control6, Control7--, Control8&#xA;FROM         prj_account_control) as MOD INNER JOIN prj_account_control ON MOD.Code_Account = prj_account_control.Code_Account CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_account_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_account_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_accounts_control.Code_Account FROM ERP_IMPLT_accounts_control inner join accounts on ERP_IMPLT_accounts_control.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_account_control.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_account_control SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_account_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_accounts_control.Code_Account FROM ERP_IMPLT_accounts_control inner join accounts on ERP_IMPLT_accounts_control.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_account_control.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;UPDATE prj_account_control set Control3 = '1' WHERE Control3 = '100'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_account_control CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_account_control CI"
      DTS:DTSID="{93C20E7D-7894-468F-A935-7209D02AC121}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_account_control CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="24">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_account_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_account_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_accounts_control.Code_Account FROM ERP_IMPLT_accounts_control inner join accounts on ERP_IMPLT_accounts_control.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;where accounts.code = prj_account_control.Code_Account) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_configuration"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_configuration"
      DTS:DTSID="{6976B616-85D3-47AB-9DFD-1847295C49E7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_configuration"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- No hay baja, siempre tiene que existir la configuración por organización&#xA;-- Alta&#xA;INSERT INTO prj_configuration (Create_User, Create_Date, Modify_User, Modify_Date, Platform,  Code_Unit_Org, Code_Sales_Org, &#xA;Time_Location, SB_1, SB_2, SB_3, Header1, Header2, Header3, Header4, Foot1, Foot2, Foot3, Foot4, Inv_to_Return, &#xA;                      Print_Funct_Ord, Print_Funct_Inv, Dep_Del, Amount_Dep, Amount_Dep_Flex, Change_Cash, A_Del_Col, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  A_Del_Col_Print, A_Del_Col_Last, A_Del_Col_Last_P, &#xA;                      Account_Gen_NI, Account_Gen_Amount, Act_DDP, ColL_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Man_Print_Col, Mod_Promo_Dis, Mod_Promo, &#xA;                      Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, Coll_Dep, Man_Print_Dep, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Manage_Less, Range_Col1, Range_Col2, &#xA;                      Range_Col3, Range_Col4, Max_Pen_Lock, Max_Check_Lock, Doc_Pending, Future_check)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code_Unit_Org, Code_Sales_Org, Time_Location, SB_1, SB_2, SB_3, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Header1, Header2, Header3, Header4, Foot1, Foot2, Foot3, Foot4, Inv_to_Return, &#xA;                      Print_Funct_Ord, Print_Funct_Inv, Dep_Del, Amount_Dep, Amount_Dep_Flex, Change_Cash, A_Del_Col, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  A_Del_Col_Print, A_Del_Col_Last, A_Del_Col_Last_P, &#xA;                      Account_Gen_NI, Account_Gen_Amount, Act_DDP, ColL_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Man_Print_Col, Mod_Promo_Dis, Mod_Promo, &#xA;                      Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, Coll_Dep, Man_Print_Dep, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Manage_Less, Range_Col1, Range_Col2, &#xA;                      Range_Col3, Range_Col4, Max_Pen_Lock, Max_Check_Lock, Doc_Pending, '1' AS Future_check&#xA;FROM         ERP_IMPLT_configuration CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Unit_Org, Code_Sales_Org FROM prj_configuration &#xA;where Code_Unit_Org = ERP_IMPLT_configuration.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_configuration.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;----Se desactivan todos los controles a petición del cliente, solo se permite insertar&#xA;----3 semanas después de salida a PRD&#xA;/*&#xA;UPDATE prj_configuration SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Time_Location = MOD.Time_Location, SB_1 = MOD.SB_1, SB_2 = MOD.SB_2, &#xA;SB_3 = MOD.SB_3, Inv_to_Return = MOD.Inv_to_Return, Print_Funct_Ord = MOD.Print_Funct_Ord, &#xA;Print_Funct_Inv = MOD.Print_Funct_Inv, Dep_Del = MOD.Dep_Del, &#xA;Amount_Dep = MOD.Amount_Dep, Amount_Dep_Flex = MOD.Amount_Dep_Flex, Change_Cash = MOD.Change_Cash, &#xA;A_Del_Col = MOD.A_Del_Col, A_Del_Col_Print = MOD.A_Del_Col_Print, &#xA;A_Del_Col_Last = MOD.A_Del_Col_Last, A_Del_Col_Last_P = MOD.A_Del_Col_Last_P, &#xA;Account_Gen_NI = MOD.Account_Gen_NI, Account_Gen_Amount = MOD.Account_Gen_Amount, &#xA;Act_DDP = MOD.Act_DDP, ColL_Print_NFC = MOD.ColL_Print_NFC, &#xA;A_Prod_Price0 = MOD.A_Prod_Price0, A_Mod_Price = MOD.A_Mod_Price, &#xA;Max_Doc_Lock = MOD.Max_Doc_Lock, Man_Print_Col = MOD.Man_Print_Col, &#xA;Mod_Promo_Dis = MOD.Mod_Promo_Dis, &#xA;Mod_Promo = MOD.Mod_Promo, Con_Check_Return = MOD.Con_Check_Return, &#xA;Check_Return_Cred = MOD.Check_Return_Cred, &#xA;Check_Return_Cash = MOD.Check_Return_Cash, &#xA;Doc_Pen_Cred = MOD.Doc_Pen_Cred, DDP_Doc_neg = MOD.DDP_Doc_neg, &#xA;Coll_Dep = MOD.Coll_Dep, Man_Print_Dep = MOD.Man_Print_Dep, &#xA;Man_Stock_Acc = MOD.Man_Stock_Acc, &#xA;Cop_Prin_Order = MOD.Cop_Prin_Order, Stock_Liq = MOD.Stock_Liq, &#xA;Del_Route_Acc_Order = MOD.Del_Route_Acc_Order, &#xA;Del_Route_Acc_Today = MOD.Del_Route_Acc_Today, &#xA;Del_Route_Acc_All = MOD.Del_Route_Acc_All, &#xA;Print_NFC = MOD.Print_NFC, Mod_Date_Delivery = MOD.Mod_Date_Delivery, &#xA;Manage_More = MOD.Manage_More, &#xA;Manage_Less = MOD.Manage_Less, Range_Col1 = MOD.Range_Col1, &#xA;Range_Col2 = MOD.Range_Col2, Range_Col3 = MOD.Range_Col3, &#xA;Range_Col4 = MOD.Range_Col4, &#xA;Max_Pen_Lock = MOD.Max_Pen_Lock, &#xA;Max_Check_Lock = MOD.Max_Check_Lock, &#xA;Doc_Pending = MOD.Doc_Pending&#xA;FROM&#xA;(SELECT   Code_Unit_Org, Code_Sales_Org, Time_Location, SB_1, SB_2, SB_3, Inv_to_Return, &#xA;                      Print_Funct_Ord, Print_Funct_Inv, Dep_Del, Amount_Dep, Amount_Dep_Flex, Change_Cash, A_Del_Col, A_Del_Col_Print, A_Del_Col_Last, A_Del_Col_Last_P, &#xA;                      Account_Gen_NI, Account_Gen_Amount, Act_DDP, ColL_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, Man_Print_Col, Mod_Promo_Dis, Mod_Promo, &#xA;                      Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, Coll_Dep, Man_Print_Dep, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less, Range_Col1, Range_Col2, &#xA;                      Range_Col3, Range_Col4, Max_Pen_Lock, Max_Check_Lock, Doc_Pending&#xA;FROM         ERP_IMPLT_configuration&#xA;EXCEPT&#xA;SELECT      Code_Unit_Org, Code_Sales_Org, Time_Location, SB_1, SB_2, SB_3, Inv_to_Return, &#xA;                      Print_Funct_Ord, Print_Funct_Inv, Dep_Del, Amount_Dep, Amount_Dep_Flex, Change_Cash, A_Del_Col, A_Del_Col_Print, A_Del_Col_Last, A_Del_Col_Last_P, &#xA;                      Account_Gen_NI, Account_Gen_Amount, Act_DDP, ColL_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, Man_Print_Col, Mod_Promo_Dis, Mod_Promo, &#xA;                      Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, Coll_Dep, Man_Print_Dep, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less, Range_Col1, Range_Col2, &#xA;                      Range_Col3, Range_Col4, Max_Pen_Lock, Max_Check_Lock, Doc_Pending&#xA;FROM         prj_configuration) as MOD INNER JOIN prj_configuration ON MOD.Code_Unit_Org = prj_configuration.Code_Unit_Org and MOD.Code_Sales_Org = prj_configuration.Code_Sales_Org CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;*/" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_currency"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_currency"
      DTS:DTSID="{1E6CB7EA-6063-4B87-A8CB-7347BEFA6C13}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_currency"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_currency (Code, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT Code, Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP FROM&#xA;(SELECT     Code_Currency AS Code, Code_Currency AS Description&#xA;FROM         ERP_IMPLT_hist_orders_header&#xA;UNION&#xA;SELECT     Code_Currency AS Code, Code_Currency AS Description&#xA;FROM         ERP_IMPLT_orders_header&#xA;UNION&#xA;SELECT     Code_Currency AS Code, Code_Currency AS Description&#xA;FROM         ERP_IMPLT_pricing_tables&#xA;UNION&#xA;SELECT     Code_Currency AS Code, Code_Currency AS Description&#xA;FROM         ERP_IMPLT_accounts) as CU&#xA;where not exists (SELECT Code FROM ERP_IMPLT_currency where code = CU.Code) &#xA;and not exists (SELECT Code FROM prj_currency where code = CU.Code) and Code is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO prj_currency (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_currency CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM prj_currency where Code = ERP_IMPLT_currency.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_currency SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Description&#xA;FROM         ERP_IMPLT_currency&#xA;EXCEPT&#xA;SELECT     Code, Description&#xA;FROM         prj_currency) as MOD INNER JOIN prj_currency ON MOD.Code = prj_currency.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_currency SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_currency CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_currency where Code = prj_currency.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_currency SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_currency CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_currency where Code = prj_currency.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_currency CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_currency CI"
      DTS:DTSID="{E9FE966A-087F-4631-B75E-F85FA76B77E8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_currency CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="25">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE accounts_agrupation1 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  accounts_agrupation1 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_currency where Code = accounts_agrupation1.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_des_array"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FA5E6D54-B221-4BE7-BC43-88D15712286D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_des_array"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO [dbo].[prj_des_array]&#xA;           ([Create_User]&#xA;           ,[Create_Date]&#xA;           ,[Modify_User]&#xA;           ,[Modify_Date]&#xA;           &#xA;           ,[Platform]&#xA;           ,[Code]&#xA;           ,[Type]&#xA;           ,[Description]&#xA;           ,[Orden]&#xA;           ,[Extra_Type])&#xA;  SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;  View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,    &#xA;  [Code]&#xA;           ,'22' AS [Type]&#xA;           ,[Description]&#xA;           ,'1' AS [Orden]&#xA;           ,NULL AS [Extra_Type]&#xA;  FROM ERP_IMPLT_des_array &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE ERP_IMPLT_des_array.Code not in (SELECT Code from [prj_des_array])&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_header"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_header"
      DTS:DTSID="{835CC803-6397-479E-BC90-101CCFA9077F}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_header"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- (1) Recibimos el número de pedido de Telynet. Puede que exista o no el pedido en el histórico. Las comparaciones se hacen usando Order_Num&#xA;-- (2) No recibimos el número de pedido de Telynet. Puede que exista o no el pedido en el histórico. &#xA;--     Las comparaciones se hacen usando Order_Num_ofClient y hay que generar el Order_Num&#xA;&#xA;-- Alta (1)&#xA;INSERT INTO prj_hist_orders_header (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Code_User, &#xA;Code_Price_List_default, Brute_Amount, Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, Code_Account_Billto, &#xA;Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Taxes_Req, Special_discount, Pp_discount, Volume_discount, Units_discount, Taxes_IVA, &#xA;Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, Code_User_Del, Code_Seller_Del, Dispatched, &#xA;Order_Num_ofClient, Code_Account, Code_Unit_Org, Code_Sales_Org, Order_Type, Code_Trademark, Code_Seller, Order_Date, Delivery_Date, Code_Address, &#xA;Code_Type_Address, Code_Currency, Code_Paymentway, Total_Amount, Total_Cost, Total_Weight, Code_Status, Net_Amount, Observations, Code_Price_List, &#xA;Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Num, prj_users.Code_User AS Code_User, ERP_IMPLT_hist_orders_header.Code_Price_List_default, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  sum(ERP_IMPLT_hist_orders_lines.Brute_Amount) AS Brute_Amount,  sum(ERP_IMPLT_hist_orders_lines.Taxes_Amount) AS Taxes_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Num_Cli, ERP_IMPLT_hist_orders_header.Code_Lock, Status, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses.Code as Code_Address_Shipto, accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, &#xA;accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Taxes_Req, Special_discount, Pp_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Volume_discount, Units_discount, Taxes_IVA, ERP_IMPLT_hist_orders_header.Code_ReturnCause, Code_Ica, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Invoiced, Grouped, OrderNum_Linked, Type_Document, Code_User_Del, sellers.Code as Code_Seller_Del, '1' as Dispatched, Order_Num_ofClient, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  accounts.Code as Code_Account, ERP_IMPLT_hist_orders_header.Code_Unit_Org, route_sellers.Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, sellers_1.Code as Code_Seller, ERP_IMPLT_hist_orders_header.Order_Date, Delivery_Date, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses_3.Code as Code_Address, Code_Type_Address, Code_Currency, Code_Paymentway, sum(ERP_IMPLT_hist_orders_lines.Total_Amount) AS Total_Amount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Total_Cost, ERP_IMPLT_hist_orders_header.Total_Weight, ERP_IMPLT_hist_orders_header.Code_Status, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  sum(ERP_IMPLT_hist_orders_lines.Net_Amount) AS Net_Amount, ERP_IMPLT_hist_orders_header.Observations, ERP_IMPLT_hist_orders_header.Code_Price_List, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM ERP_IMPLT_hist_orders_header &#xA;INNER JOIN ERP_IMPLT_hist_orders_lines ON ERP_IMPLT_hist_orders_header.Order_Num = ERP_IMPLT_hist_orders_lines.Order_Num&#xA;inner join accounts on ERP_IMPLT_hist_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_hist_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_hist_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_hist_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_hist_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_hist_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_hist_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_hist_orders_header.Code_Seller_Del = sellers.Code&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_hist_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join addresses as addresses_3 on ERP_IMPLT_hist_orders_header.Code_Address = addresses_3.Code_ofClient&#xA;&#x9;&#x9;&#x9;LEFT JOIN prj_users ON prj_users.Code_User = ERP_IMPLT_hist_orders_header.Code_Seller&#xA;&#x9;&#x9;&#x9;LEFT JOIN route_sellers ON route_sellers.Code_Seller =  sellers.Code&#xA;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num FROM prj_hist_orders_header where Order_Num = ERP_IMPLT_hist_orders_header.Order_Num) &#xA;and ERP_IMPLT_hist_orders_header.Order_Num is NOT NULL&#xA;GROUP BY View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform, ERP_IMPLT_hist_orders_header.Order_Num, accounts.Code, ERP_IMPLT_hist_orders_header.Code_Unit_Org,&#xA;ERP_IMPLT_hist_orders_header.Order_Date,ERP_IMPLT_hist_orders_header.Order_Type, ERP_IMPLT_hist_orders_header.Notes,&#xA;ERP_IMPLT_hist_orders_header.Type_Document,ERP_IMPLT_hist_orders_header.Ordernum_Linked, ERP_IMPLT_hist_orders_header.Code_User_Del,&#xA;sellers.Code, sellers_1.Code,  ERP_IMPLT_hist_orders_header.Code_User,ERP_IMPLT_hist_orders_header.Order_Num_ofClient, ERP_IMPLT_hist_orders_header.Code_Trademark,&#xA;ERP_IMPLT_hist_orders_header.Delivery_Date, ERP_IMPLT_hist_orders_header.Code_Currency,ERP_IMPLT_hist_orders_header.Code_Paymentway, ERP_IMPLT_hist_orders_header.Code_Price_List_default,&#xA;ERP_IMPLT_hist_orders_header.Code_Price_List, ERP_IMPLT_hist_orders_header.Total_Cost,ERP_IMPLT_hist_orders_header.Total_Weight, ERP_IMPLT_hist_orders_header.Order_Num_Cli,&#xA;ERP_IMPLT_hist_orders_header.Observations, ERP_IMPLT_hist_orders_header.Code_Lock,ERP_IMPLT_hist_orders_header.Code_ReturnCause, ERP_IMPLT_hist_orders_header.Status,&#xA;ERP_IMPLT_hist_orders_header.Order_Num_Telynet, accounts.Code, accounts_1.Code,accounts_3.Code, accounts_2.Code, &#xA;addresses.Code, addresses_1.Code, addresses_2.Code, ERP_IMPLT_hist_orders_header.Code_Ica,&#xA;ERP_IMPLT_hist_orders_header.Net_Amount2, ERP_IMPLT_hist_orders_header.Grouped,ERP_IMPLT_hist_orders_header.Taxes_Req, ERP_IMPLT_hist_orders_header.Special_discount,&#xA;ERP_IMPLT_hist_orders_header.Pp_discount, ERP_IMPLT_hist_orders_header.Volume_discount,&#xA;ERP_IMPLT_hist_orders_header.Units_discount, ERP_IMPLT_hist_orders_header.Notes_3, ERP_IMPLT_hist_orders_header.Taxes_IVA, prj_users.Code_User,&#xA;ERP_IMPLT_hist_orders_header.Invoiced,route_sellers.Code_Sales_Org, addresses_3.Code,&#xA;ERP_IMPLT_hist_orders_header.Code_Type_Address, ERP_IMPLT_hist_orders_header.Code_Status,&#xA;ERP_IMPLT_hist_orders_header.Type_Doc, ERP_IMPLT_hist_orders_header.Type_Order&#xA;&#xA;-- Alta (2)&#xA;INSERT INTO prj_hist_orders_header (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Code_User, &#xA;Code_Price_List_default, Brute_Amount, &#xA;Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Address_Shipto, Code_Account_Billto, &#xA;Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Taxes_Req, Special_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Pp_discount, Volume_discount, Units_discount, Taxes_IVA, &#xA;Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, Code_User_Del, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Seller_Del, Dispatched, &#xA;Order_Num_ofClient, Code_Account, Code_Unit_Org, Code_Sales_Org, Order_Type, Code_Trademark, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Seller, Order_Date, Delivery_Date, Code_Address, &#xA;Code_Type_Address, Code_Currency, Code_Paymentway, Total_Amount, Total_Cost, Total_Weight, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Status, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Observations, Code_Price_List, &#xA;Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  + cast(ROW_NUMBER() OVER (order by Order_Num_ofClient) + 100000 as varchar(8)) as Order_Num, &#xA;prj_users.Code_User AS Code_User, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Price_List_default, &#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  sum(ERP_IMPLT_hist_orders_lines.Brute_Amount) AS Brute_Amount,  &#xA;sum(ERP_IMPLT_hist_orders_lines.Taxes_Amount) AS Taxes_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Num_Cli, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Lock, Status, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses.Code as Code_Address_Shipto, accounts_1.Code as Code_Account_Billto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses_1.Code as Code_Address_Billto, &#xA;accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Taxes_Req, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Special_discount, Pp_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Volume_discount, Units_discount, Taxes_IVA, ERP_IMPLT_hist_orders_header.Code_ReturnCause, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Ica, ERP_IMPLT_hist_orders_header.Invoiced, Grouped, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  OrderNum_Linked, Type_Document, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User_Del, sellers.Code as Code_Seller_Del, '1' as Dispatched, Order_Num_ofClient, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  accounts.Code as Code_Account, ERP_IMPLT_hist_orders_header.Code_Unit_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  route_sellers.Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, sellers_1.Code as Code_Seller, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Date, Delivery_Date, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses_3.Code as Code_Address, &#xA;Code_Type_Address, Code_Currency, Code_Paymentway, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  sum(ERP_IMPLT_hist_orders_lines.Total_Amount) AS Total_Amount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Total_Cost, ERP_IMPLT_hist_orders_header.Total_Weight, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Status, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  sum(ERP_IMPLT_hist_orders_lines.Net_Amount) AS Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Observations, ERP_IMPLT_hist_orders_header.Code_Price_List, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Net_Amount2, Notes_3, Type_Doc, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Type_Order, Notes&#xA;FROM ERP_IMPLT_hist_orders_header &#xA;INNER JOIN ERP_IMPLT_hist_orders_lines ON ERP_IMPLT_hist_orders_header.Order_Num = ERP_IMPLT_hist_orders_lines.Order_Num&#xA;inner join accounts on ERP_IMPLT_hist_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_hist_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_hist_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_hist_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_hist_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_hist_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_hist_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_hist_orders_header.Code_Seller_Del = sellers.Code&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_hist_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join addresses as addresses_3 on ERP_IMPLT_hist_orders_header.Code_Address = addresses_3.Code_ofClient&#xA;&#x9;&#x9;&#x9;LEFT JOIN prj_users ON prj_users.Code_User = ERP_IMPLT_hist_orders_header.Code_Seller&#xA;&#x9;&#x9;&#x9;LEFT JOIN route_sellers ON route_sellers.Code_Seller =  sellers.Code&#xA;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num_ofClient FROM prj_hist_orders_header &#xA;where Order_Num_ofClient = ERP_IMPLT_hist_orders_header.Order_Num_ofClient) and ERP_IMPLT_hist_orders_header.Order_Num is NULL&#xA;GROUP BY View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,&#xA;ERP_IMPLT_hist_orders_header.Order_Num, accounts.Code, ERP_IMPLT_hist_orders_header.Code_Unit_Org,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Date,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Type, ERP_IMPLT_hist_orders_header.Notes,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   ERP_IMPLT_hist_orders_header.Type_Document,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Ordernum_Linked, ERP_IMPLT_hist_orders_header.Code_User_Del,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  sellers.Code, sellers_1.Code,  ERP_IMPLT_hist_orders_header.Code_User,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Num_ofClient, ERP_IMPLT_hist_orders_header.Code_Trademark,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Delivery_Date, ERP_IMPLT_hist_orders_header.Code_Currency,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Paymentway, ERP_IMPLT_hist_orders_header.Code_Price_List_default,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Price_List, ERP_IMPLT_hist_orders_header.Total_Cost,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Total_Weight, ERP_IMPLT_hist_orders_header.Order_Num_Cli,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Observations, ERP_IMPLT_hist_orders_header.Code_Lock,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_ReturnCause, ERP_IMPLT_hist_orders_header.Status,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Num_Telynet, accounts.Code, accounts_1.Code,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   accounts_3.Code, accounts_2.Code, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses.Code, addresses_1.Code, addresses_2.Code, ERP_IMPLT_hist_orders_header.Code_Ica,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Net_Amount2, ERP_IMPLT_hist_orders_header.Grouped,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Taxes_Req, ERP_IMPLT_hist_orders_header.Special_discount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Pp_discount, ERP_IMPLT_hist_orders_header.Volume_discount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Units_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Notes_3, ERP_IMPLT_hist_orders_header.Taxes_IVA, prj_users.Code_User,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Invoiced,route_sellers.Code_Sales_Org, addresses_3.Code,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Type_Address, ERP_IMPLT_hist_orders_header.Code_Status,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Type_Doc, ERP_IMPLT_hist_orders_header.Type_Order&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xA;-- Modificación (1)&#xA;UPDATE prj_hist_orders_header SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_User = MOD.Code_User, Code_Price_List_default = MOD.Code_Price_List_default, Brute_Amount = MOD.Brute_Amount, Taxes_Amount = MOD.Taxes_Amount, &#xA;&#x9;&#x9;Order_Num_Cli = MOD.Order_Num_Cli, Code_Lock = MOD.Code_Lock, Status = MOD.Status, Order_Num_Telynet = MOD.Order_Num_Telynet, &#xA;&#x9;&#x9;Code_Account_Shipto = MOD.Code_Account_Shipto, Code_Address_Shipto = MOD.Code_Address_Shipto, Code_Account_Billto = MOD.Code_Account_Billto, &#xA; Code_Address_Billto = MOD.Code_Address_Billto, Code_Account_Payer = MOD.Code_Account_Payer, Code_Address_Payer = MOD.Code_Address_Payer, &#xA;&#x9;&#x9;Taxes_Req = MOD.Taxes_Req, Special_discount = MOD.Special_discount, Pp_discount = MOD.Pp_discount, Volume_discount = MOD.Volume_discount, &#xA;&#x9;&#x9;Units_discount = MOD.Units_discount, Taxes_IVA = MOD.Taxes_IVA, Code_ReturnCause = MOD.Code_ReturnCause, Code_Ica = MOD.Code_Ica, Invoiced = MOD.Invoiced, &#xA;&#x9;&#x9;Grouped = MOD.Grouped, OrderNum_Linked = MOD.OrderNum_Linked, Type_Document = MOD.Type_Document, Code_User_Del = MOD.Code_User_Del, &#xA;&#x9;&#x9;Code_Seller_Del = MOD.Code_Seller_Del, Dispatched = MOD.Dispatched, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, &#xA;&#x9;&#x9;Order_Type = MOD.Order_Type, Code_Trademark = MOD.Code_Trademark, Code_Seller = MOD.Code_Seller, Order_Date = MOD.Order_Date, Delivery_Date = MOD.Delivery_Date, &#xA;&#x9;&#x9;Code_Address = MOD.Code_Address, Code_Type_Address = MOD.Code_Type_Address, Code_Currency = MOD.Code_Currency, Code_Paymentway = MOD.Code_Paymentway, &#xA;&#x9;&#x9;Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, Total_Weight = MOD.Total_Weight, Code_Status = MOD.Code_Status, Net_Amount = MOD.Net_Amount, &#xA;&#x9;&#x9;Observations = MOD.Observations, Code_Price_List = MOD.Code_Price_List, Net_Amount2 = MOD.Net_Amount2, Notes_3 = MOD.Notes_3, Type_Doc = MOD.Type_Doc, &#xA;&#x9;&#x9;Type_Order = MOD.Type_Order, Notes = MOD.Notes&#xA;FROM&#xA;(SELECT ERP_IMPLT_hist_orders_header.Order_Num, &#xA;prj_users.Code_User AS Code_User,  &#xA;ERP_IMPLT_hist_orders_header.Code_Price_List_default, &#xA;sum(ERP_IMPLT_hist_orders_lines.Brute_Amount) AS Brute_Amount,  &#xA;sum(ERP_IMPLT_hist_orders_lines.Taxes_Amount) AS Taxes_Amount, &#xA;Order_Num_Cli, ERP_IMPLT_hist_orders_header.Code_Lock, Status, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, addresses.Code as Code_Address_Shipto, accounts_1.Code as Code_Account_Billto, &#xA;addresses_1.Code as Code_Address_Billto, accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, &#xA;Taxes_Req, Special_discount, Pp_discount, Volume_discount, Units_discount, Taxes_IVA, ERP_IMPLT_hist_orders_header.Code_ReturnCause, Code_Ica, &#xA;ERP_IMPLT_hist_orders_header.Invoiced, Grouped, OrderNum_Linked, Type_Document, &#xA;Code_User_Del, sellers.Code as Code_Seller_Del, '1' as Dispatched, Order_Num_ofClient, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  accounts.Code as Code_Account, ERP_IMPLT_hist_orders_header.Code_Unit_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  route_sellers.Code_Sales_Org, Order_Type, Code_Trademark, sellers_1.Code as Code_Seller, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Date, Delivery_Date, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses_3.Code as Code_Address, Code_Type_Address, Code_Currency, Code_Paymentway, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   sum(ERP_IMPLT_hist_orders_lines.Total_Amount) AS Total_Amount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Total_Cost, ERP_IMPLT_hist_orders_header.Total_Weight, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Status, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  sum(ERP_IMPLT_hist_orders_lines.Net_Amount) AS Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Observations, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Price_List, Net_Amount2, Notes_3, Type_Doc, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Type_Order, Notes&#xA;FROM ERP_IMPLT_hist_orders_header &#xA;INNER JOIN ERP_IMPLT_hist_orders_lines ON ERP_IMPLT_hist_orders_header.Order_Num = ERP_IMPLT_hist_orders_lines.Order_Num&#xA;inner join accounts on ERP_IMPLT_hist_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_hist_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_hist_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_hist_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_hist_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_hist_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_hist_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_hist_orders_header.Code_Seller_Del = sellers.Code&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_hist_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join addresses as addresses_3 on ERP_IMPLT_hist_orders_header.Code_Address = addresses_3.Code_ofClient&#xA;LEFT JOIN prj_users ON prj_users.Code_User = ERP_IMPLT_hist_orders_header.Code_Seller&#xA;LEFT JOIN route_sellers ON route_sellers.Code_Seller =  sellers.Code&#xA;WHERE &#x9;ERP_IMPLT_hist_orders_header.Order_Num is not null&#x9;&#x9;&#xA;GROUP BY &#xA;ERP_IMPLT_hist_orders_header.Order_Num, accounts.Code, ERP_IMPLT_hist_orders_header.Code_Unit_Org,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Date,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Type, ERP_IMPLT_hist_orders_header.Notes,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   ERP_IMPLT_hist_orders_header.Type_Document,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Ordernum_Linked, ERP_IMPLT_hist_orders_header.Code_User_Del,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  sellers.Code, sellers_1.Code,  ERP_IMPLT_hist_orders_header.Code_User,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Num_ofClient, ERP_IMPLT_hist_orders_header.Code_Trademark,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Delivery_Date, ERP_IMPLT_hist_orders_header.Code_Currency,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Paymentway, ERP_IMPLT_hist_orders_header.Code_Price_List_default,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Price_List, ERP_IMPLT_hist_orders_header.Total_Cost,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Total_Weight, ERP_IMPLT_hist_orders_header.Order_Num_Cli,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Observations, ERP_IMPLT_hist_orders_header.Code_Lock,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_ReturnCause, ERP_IMPLT_hist_orders_header.Status,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Num_Telynet, accounts.Code, accounts_1.Code,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   accounts_3.Code, accounts_2.Code, addresses.Code, addresses_1.Code, addresses_2.Code, ERP_IMPLT_hist_orders_header.Code_Ica,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Net_Amount2, ERP_IMPLT_hist_orders_header.Grouped,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Taxes_Req, ERP_IMPLT_hist_orders_header.Special_discount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Pp_discount, ERP_IMPLT_hist_orders_header.Volume_discount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Units_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Notes_3, ERP_IMPLT_hist_orders_header.Taxes_IVA, prj_users.Code_User,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Invoiced,route_sellers.Code_Sales_Org, addresses_3.Code,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Type_Address, ERP_IMPLT_hist_orders_header.Code_Status,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Type_Doc, ERP_IMPLT_hist_orders_header.Type_Order&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;      EXCEPT&#xA;     SELECT  Order_Num, Code_User, Code_Price_List_default, Brute_Amount, &#xA;Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Address_Shipto, Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Taxes_Req, Special_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Pp_discount, Volume_discount, Units_discount, Taxes_IVA, Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User_Del, Code_Seller_Del, Dispatched, Order_Num_ofClient, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, Code_Seller, Order_Date, Delivery_Date, Code_Address, Code_Type_Address, Code_Currency, Code_Paymentway, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Total_Amount, Total_Cost, Total_Weight, Code_Status, Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Observations, Code_Price_List, Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes&#xA;FROM  prj_hist_orders_header) as MOD INNER JOIN prj_hist_orders_header ON MOD.Order_Num = prj_hist_orders_header.Order_Num CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Modificación (2)&#xA;UPDATE prj_hist_orders_header SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_User = MOD.Code_User, Code_Price_List_default = MOD.Code_Price_List_default, Brute_Amount = MOD.Brute_Amount, Taxes_Amount = MOD.Taxes_Amount, &#xA;&#x9;&#x9;Order_Num_Cli = MOD.Order_Num_Cli, Code_Lock = MOD.Code_Lock, Status = MOD.Status, Order_Num_Telynet = MOD.Order_Num_Telynet, &#xA;&#x9;&#x9;Code_Account_Shipto = MOD.Code_Account_Shipto, Code_Address_Shipto = MOD.Code_Address_Shipto, Code_Account_Billto = MOD.Code_Account_Billto, &#xA; Code_Address_Billto = MOD.Code_Address_Billto, Code_Account_Payer = MOD.Code_Account_Payer, Code_Address_Payer = MOD.Code_Address_Payer, &#xA;&#x9;&#x9;Taxes_Req = MOD.Taxes_Req, Special_discount = MOD.Special_discount, Pp_discount = MOD.Pp_discount, Volume_discount = MOD.Volume_discount, &#xA;&#x9;&#x9;Units_discount = MOD.Units_discount, Taxes_IVA = MOD.Taxes_IVA, Code_ReturnCause = MOD.Code_ReturnCause, Code_Ica = MOD.Code_Ica, Invoiced = MOD.Invoiced, &#xA;&#x9;&#x9;Grouped = MOD.Grouped, OrderNum_Linked = MOD.OrderNum_Linked, Type_Document = MOD.Type_Document, Code_User_Del = MOD.Code_User_Del, &#xA;&#x9;&#x9;Code_Seller_Del = MOD.Code_Seller_Del, Dispatched = MOD.Dispatched, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, &#xA;&#x9;&#x9;Order_Type = MOD.Order_Type, Code_Trademark = MOD.Code_Trademark, Code_Seller = MOD.Code_Seller, Order_Date = MOD.Order_Date, Delivery_Date = MOD.Delivery_Date, &#xA;&#x9;&#x9;Code_Address = MOD.Code_Address, Code_Type_Address = MOD.Code_Type_Address, Code_Currency = MOD.Code_Currency, Code_Paymentway = MOD.Code_Paymentway, &#xA;&#x9;&#x9;Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, Total_Weight = MOD.Total_Weight, Code_Status = MOD.Code_Status, Net_Amount = MOD.Net_Amount, &#xA;&#x9;&#x9;Observations = MOD.Observations, Code_Price_List = MOD.Code_Price_List, Net_Amount2 = MOD.Net_Amount2, Notes_3 = MOD.Notes_3, Type_Doc = MOD.Type_Doc, &#xA;&#x9;&#x9;Type_Order = MOD.Type_Order, Notes = MOD.Notes&#xA;FROM&#xA;(SELECT prj_users.Code_User AS Code_User, ERP_IMPLT_hist_orders_header.Code_Price_List_default, &#xA;sum(ERP_IMPLT_hist_orders_lines.Brute_Amount) AS Brute_Amount,  sum(ERP_IMPLT_hist_orders_lines.Taxes_Amount) AS Taxes_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Num_Cli, ERP_IMPLT_hist_orders_header.Code_Lock, Status, Order_Num_Telynet, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  accounts_1.Code as Code_Account_Shipto, &#x9;addresses.Code as Code_Address_Shipto, accounts_1.Code as Code_Account_Billto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses_1.Code as Code_Address_Billto, accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Taxes_Req, Special_discount, Pp_discount,  Volume_discount, Units_discount, Taxes_IVA, ERP_IMPLT_hist_orders_header.Code_ReturnCause, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Ica, ERP_IMPLT_hist_orders_header.Invoiced, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Grouped, OrderNum_Linked, Type_Document, Code_User_Del, sellers.Code as Code_Seller_Del, '1' as Dispatched, Order_Num_ofClient, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  accounts.Code as Code_Account, ERP_IMPLT_hist_orders_header.Code_Unit_Org, route_sellers.Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, sellers_1.Code as Code_Seller, ERP_IMPLT_hist_orders_header.Order_Date, Delivery_Date, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses_3.Code as Code_Address, Code_Type_Address, Code_Currency, Code_Paymentway, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;sum(ERP_IMPLT_hist_orders_lines.Total_Amount) AS Total_Amount, ERP_IMPLT_hist_orders_header.Total_Cost, ERP_IMPLT_hist_orders_header.Total_Weight,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   ERP_IMPLT_hist_orders_header.Code_Status, sum(ERP_IMPLT_hist_orders_lines.Net_Amount) AS Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Observations, ERP_IMPLT_hist_orders_header.Code_Price_List, Net_Amount2, Notes_3, Type_Doc, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Type_Order, Notes&#xA;FROM ERP_IMPLT_hist_orders_header &#xA;INNER JOIN ERP_IMPLT_hist_orders_lines ON ERP_IMPLT_hist_orders_header.Order_Num = ERP_IMPLT_hist_orders_lines.Order_Num&#xA;inner join accounts on ERP_IMPLT_hist_orders_header.Code_Account = accounts.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join accounts as accounts_1 on ERP_IMPLT_hist_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses on ERP_IMPLT_hist_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_2 on ERP_IMPLT_hist_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_1 on ERP_IMPLT_hist_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join accounts as accounts_3 on ERP_IMPLT_hist_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;&#x9;&#x9;&#x9;left join addresses as addresses_2 on ERP_IMPLT_hist_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join sellers on ERP_IMPLT_hist_orders_header.Code_Seller_Del = sellers.Code&#xA;&#x9;&#x9;&#x9;left join sellers as sellers_1 on ERP_IMPLT_hist_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;&#x9;&#x9;&#x9;left join addresses as addresses_3 on ERP_IMPLT_hist_orders_header.Code_Address = addresses_3.Code_ofClient&#xA;LEFT JOIN prj_users ON prj_users.Code_User = ERP_IMPLT_hist_orders_header.Code_Seller&#xA;LEFT JOIN route_sellers ON route_sellers.Code_Seller =  sellers.Code&#xA;WHERE &#x9;ERP_IMPLT_hist_orders_header.Order_Num is null&#x9;&#x9;&#xA;GROUP BY &#xA;ERP_IMPLT_hist_orders_header.Order_Num, accounts.Code, ERP_IMPLT_hist_orders_header.Code_Unit_Org,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Date,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Type, ERP_IMPLT_hist_orders_header.Notes,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   ERP_IMPLT_hist_orders_header.Type_Document,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Ordernum_Linked, ERP_IMPLT_hist_orders_header.Code_User_Del,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  sellers.Code, sellers_1.Code,  ERP_IMPLT_hist_orders_header.Code_User,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Num_ofClient, ERP_IMPLT_hist_orders_header.Code_Trademark,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Delivery_Date, ERP_IMPLT_hist_orders_header.Code_Currency,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Paymentway, ERP_IMPLT_hist_orders_header.Code_Price_List_default,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Price_List, ERP_IMPLT_hist_orders_header.Total_Cost,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Total_Weight, ERP_IMPLT_hist_orders_header.Order_Num_Cli,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Observations, ERP_IMPLT_hist_orders_header.Code_Lock,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_ReturnCause, ERP_IMPLT_hist_orders_header.Status,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Order_Num_Telynet, accounts.Code, accounts_1.Code,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;   accounts_3.Code, accounts_2.Code, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  addresses.Code, addresses_1.Code, addresses_2.Code, ERP_IMPLT_hist_orders_header.Code_Ica,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Net_Amount2, ERP_IMPLT_hist_orders_header.Grouped,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Taxes_Req, ERP_IMPLT_hist_orders_header.Special_discount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Pp_discount, ERP_IMPLT_hist_orders_header.Volume_discount,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Units_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Notes_3, ERP_IMPLT_hist_orders_header.Taxes_IVA, prj_users.Code_User,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Invoiced,route_sellers.Code_Sales_Org, addresses_3.Code,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Code_Type_Address, ERP_IMPLT_hist_orders_header.Code_Status,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ERP_IMPLT_hist_orders_header.Type_Doc, ERP_IMPLT_hist_orders_header.Type_Order&#xA;EXCEPT&#xA;     SELECT  Code_User, Code_Price_List_default, Brute_Amount, &#xA;Taxes_Amount, Order_Num_Cli, Code_Lock, Status, Order_Num_Telynet, Code_Account_Shipto, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_Address_Shipto, Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Taxes_Req, Special_discount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Pp_discount, Volume_discount, Units_discount, Taxes_IVA, Code_ReturnCause, Code_Ica, Invoiced, Grouped, OrderNum_Linked, Type_Document, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User_Del, Code_Seller_Del, Dispatched, Order_Num_ofClient, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Order_Type, Code_Trademark, Code_Seller, Order_Date, Delivery_Date, Code_Address, Code_Type_Address, Code_Currency, Code_Paymentway, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Total_Amount, Total_Cost, Total_Weight, Code_Status, Net_Amount, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Observations, Code_Price_List, Net_Amount2, Notes_3, Type_Doc, Type_Order, Notes&#xA;FROM  prj_hist_orders_header) as MOD INNER JOIN prj_hist_orders_header &#xA;ON MOD.Order_Num_ofClient = prj_hist_orders_header.Order_Num_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;-- Baja (1)&#xA;UPDATE prj_hist_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;View_System_Fields_ERP&#xA;WHERE  exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num = prj_hist_orders_header.Order_Num and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;-- Baja (2)&#xA;UPDATE prj_hist_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;View_System_Fields_ERP&#xA;WHERE  exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num_ofClient = prj_hist_orders_header.Order_Num_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;-- Quitar Baja (1)&#xA;UPDATE prj_hist_orders_header SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num = prj_hist_orders_header.Order_Num and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;-- Quitar Baja (2)&#xA;UPDATE prj_hist_orders_header SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num_ofClient = prj_hist_orders_header.Order_Num_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_header CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_header CI"
      DTS:DTSID="{9CE1A840-D7C3-48ED-8DEA-2BE52D426DBB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_header CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="39">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial (1)&#xA;UPDATE prj_hist_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num = prj_hist_orders_header.Order_Num ) &#xA;GO&#xA;&#xA;-- Borrado por carga inicial (2)&#xA;UPDATE prj_hist_orders_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Order_Num, Order_Num_ofClient FROM ERP_IMPLT_hist_orders_header &#xA;&#x9;&#x9;where Order_Num_ofClient = prj_hist_orders_header.Order_Num_ofClient) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_lines"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_lines"
      DTS:DTSID="{571BDA81-5880-46CA-93D1-F8BF829BDECA}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_lines"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_hist_orders_lines (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Num_Line, Code_Account, Order_Date, Code_Product,  Factor_Conversion, Br_Price, Price_N_Promo, Manual, &#xA;                      Brute_Amount, Taxes_Amount, Quantity_Unit, Code_Promotion, Quantity_Promotion, Code_Price_List_default, Code_Price_List, Code_ReturnCause, Code_Lock, &#xA;                      Observations, Transfered, Quantity_promo_def, Quantity_promo_def_gif, Discount_promo_def, Price_promo_def, Invoiced, Quantity_Order, Quantity_Order_Gift, &#xA;                      TaxClassification, Quantity_Gift, IVA_Amount, Req_Amount, Unit_Type_Sel, Price, Total_Discount, &#xA;                      Total_Amount, Total_Cost, Total_Weight, Quantity, Sale_Type, Code_Status, Unit_Type_Inv, Net_Amount, Total_Com, Per_Com)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_hist_orders_header.Order_Num, Num_Line, accounts.code as Code_Account, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Order_Date,&#xA;&#x9; products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Factor_Conversion, Br_Price, Price_N_Promo, Manual, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Brute_Amount, ERP_IMPLT_hist_orders_lines.Taxes_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_Unit, ERP_IMPLT_hist_orders_lines.Code_Promotion, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_Promotion, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Code_Price_List_default, ERP_IMPLT_hist_orders_lines.Code_Price_List, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Code_ReturnCause, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Code_Lock, ERP_IMPLT_hist_orders_lines.Observations, '1' as Transfered, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_promo_def, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_promo_def_gif, ERP_IMPLT_hist_orders_lines.Discount_promo_def, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Price_promo_def, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Invoiced, ERP_IMPLT_hist_orders_lines.Quantity_Order, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_Order_Gift, &#xA;    ERP_IMPLT_hist_orders_lines.TaxClassification, ERP_IMPLT_hist_orders_lines.Quantity_Gift, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.IVA_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Req_Amount, ERP_IMPLT_hist_orders_lines.Unit_Type_Sel, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Price, ERP_IMPLT_hist_orders_lines.Total_Discount, &#xA;    ERP_IMPLT_hist_orders_lines.Total_Amount, ERP_IMPLT_hist_orders_lines.Total_Cost, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Total_Weight, ERP_IMPLT_hist_orders_lines.Quantity, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Sale_Type, ERP_IMPLT_hist_orders_lines.Code_Status, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Unit_Type_Inv, ERP_IMPLT_hist_orders_lines.Net_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Total_Com, ERP_IMPLT_hist_orders_lines.Per_Com&#xA;FROM        ERP_IMPLT_hist_orders_lines inner join prj_hist_orders_header &#xA;on ERP_IMPLT_hist_orders_lines.Order_Num = prj_hist_orders_header.Order_Num&#xA; inner join Products on REPLACE(LTRIM(REPLACE(ERP_IMPLT_hist_orders_lines.Code_Product,'0',' ')),' ','0')&#xA; = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_hist_orders_lines.Code_Account = accounts.Code_ofClient&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num, Num_Line from prj_hist_orders_lines where Order_Num = prj_hist_orders_header.Order_Num and &#xA;Num_Line = ERP_IMPLT_hist_orders_lines.Num_Line)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_hist_orders_lines SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Order_Date = MOD.Order_Date, Code_Product = MOD.Code_Product, Factor_Conversion = MOD.Factor_Conversion, Br_Price = MOD.Br_Price, &#xA;&#x9;&#x9;Price_N_Promo = MOD.Price_N_Promo, Manual = MOD.Manual, Brute_Amount = MOD.Brute_Amount, Taxes_Amount = MOD.Taxes_Amount, Quantity_Unit = MOD.Quantity_Unit, &#xA;&#x9;&#x9;Code_Promotion = MOD.Code_Promotion, Quantity_Promotion = MOD.Quantity_Promotion, Code_Price_List_default = MOD.Code_Price_List_default, &#xA;&#x9;&#x9;Code_Price_List = MOD.Code_Price_List, Code_ReturnCause = MOD.Code_ReturnCause, Code_Lock = MOD.Code_Lock, Observations = MOD.Observations, &#xA;&#x9;&#x9;Quantity_promo_def = MOD.Quantity_promo_def, Quantity_promo_def_gif = MOD.Quantity_promo_def_gif, Discount_promo_def = MOD.Discount_promo_def, &#xA;&#x9;&#x9;Price_promo_def = MOD.Price_promo_def, Invoiced = MOD.Invoiced, Quantity_Order = MOD.Quantity_Order, Quantity_Order_Gift = MOD.Quantity_Order_Gift, &#xA;        TaxClassification = MOD.TaxClassification, Quantity_Gift = MOD.Quantity_Gift, IVA_Amount = MOD.IVA_Amount, Req_Amount = MOD.Req_Amount, &#xA;&#x9;&#x9;Unit_Type_Sel = MOD.Unit_Type_Sel, Price = MOD.Price, Total_Discount = MOD.Total_Discount, Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, &#xA;&#x9;&#x9;Total_Weight = MOD.Total_Weight, Quantity = MOD.Quantity, Sale_Type = MOD.Sale_Type, Code_Status = MOD.Code_Status, Unit_Type_Inv = MOD.Unit_Type_Inv, &#xA;&#x9;&#x9;Net_Amount = MOD.Net_Amount, Total_Com = MOD.Total_Com, Per_Com = MOD.Per_Com&#xA;FROM&#xA;(SELECT distinct prj_hist_orders_header.Order_Num, Num_Line, accounts.code as Code_Account, &#xA;ERP_IMPLT_hist_orders_lines.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Factor_Conversion, Br_Price, Price_N_Promo, Manual, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Brute_Amount, ERP_IMPLT_hist_orders_lines.Taxes_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_Unit, ERP_IMPLT_hist_orders_lines.Code_Promotion, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_Promotion, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Code_Price_List_default, ERP_IMPLT_hist_orders_lines.Code_Price_List, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Code_ReturnCause, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Code_Lock, ERP_IMPLT_hist_orders_lines.Observations, '1' as Transfered, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_promo_def, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_promo_def_gif, ERP_IMPLT_hist_orders_lines.Discount_promo_def, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Price_promo_def, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Invoiced, ERP_IMPLT_hist_orders_lines.Quantity_Order, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Quantity_Order_Gift, &#xA;    ERP_IMPLT_hist_orders_lines.TaxClassification, ERP_IMPLT_hist_orders_lines.Quantity_Gift, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.IVA_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Req_Amount, ERP_IMPLT_hist_orders_lines.Unit_Type_Sel, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Price, ERP_IMPLT_hist_orders_lines.Total_Discount, &#xA;    ERP_IMPLT_hist_orders_lines.Total_Amount, ERP_IMPLT_hist_orders_lines.Total_Cost, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Total_Weight, ERP_IMPLT_hist_orders_lines.Quantity, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Sale_Type, ERP_IMPLT_hist_orders_lines.Code_Status, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Unit_Type_Inv, ERP_IMPLT_hist_orders_lines.Net_Amount, &#xA;&#x9;ERP_IMPLT_hist_orders_lines.Total_Com, ERP_IMPLT_hist_orders_lines.Per_Com&#xA;FROM        ERP_IMPLT_hist_orders_lines inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_lines.Order_Num = prj_hist_orders_header.Order_Num&#xA; inner join Products on REPLACE(LTRIM(REPLACE(ERP_IMPLT_hist_orders_lines.Code_Product,'0',' ')),' ','0')&#xA; = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_hist_orders_lines.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Num_Line, Code_Account, Order_Date, Code_Product,  Factor_Conversion, Br_Price, Price_N_Promo, Manual, &#xA;&#x9;&#x9;Brute_Amount, Taxes_Amount, Quantity_Unit, Code_Promotion, Quantity_Promotion, Code_Price_List_default, Code_Price_List, Code_ReturnCause, Code_Lock, &#xA;        Observations, Transfered, Quantity_promo_def, Quantity_promo_def_gif, Discount_promo_def, Price_promo_def, Invoiced, Quantity_Order, Quantity_Order_Gift, &#xA;        TaxClassification, Quantity_Gift, IVA_Amount, Req_Amount, Unit_Type_Sel, Price, Total_Discount, &#xA;        Total_Amount, Total_Cost, Total_Weight, Quantity, Sale_Type, Code_Status, Unit_Type_Inv, Net_Amount, Total_Com, Per_Com&#xA;     FROM prj_hist_orders_lines) as MOD &#xA;&#x9;&#x9;INNER JOIN prj_hist_orders_lines ON MOD.Order_Num = prj_hist_orders_lines.Order_Num and MOD.Num_Line = prj_hist_orders_lines.Num_Line &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_hist_orders_lines SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_lines CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_hist_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_hist_orders_lines inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_lines.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_lines.Order_Num and ERP_IMPLT_hist_orders_lines.Num_Line = prj_hist_orders_lines.Num_Line&#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_hist_orders_lines SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_hist_orders_lines CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_hist_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_hist_orders_lines inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_lines.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_lines.Order_Num and ERP_IMPLT_hist_orders_lines.Num_Line = prj_hist_orders_lines.Num_Line and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_lines CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_lines CI"
      DTS:DTSID="{3737E6E4-E09D-4C99-B573-357B14CC8468}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_lines CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="40">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_hist_orders_lines SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_lines CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT prj_hist_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_hist_orders_lines inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_lines.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_lines.Order_Num and ERP_IMPLT_hist_orders_lines.Num_Line = prj_hist_orders_lines.Num_Line) &#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_sec"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_sec"
      DTS:DTSID="{49FA6527-AAD7-4A99-86C7-B8C26212ED79}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_sec"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_hist_orders_sec (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Num_Line, Secuence, Code_Table, Value,  Code_Account, &#xA;                      Code_Product, Orden, Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_hist_orders_header.Order_Num, &#xA;&#x9;&#xA;&#x9;ERP_IMPLT_hist_orders_sec.Num_Line, Secuence, Code_Table, &#xA;&#x9;--CASE WHEN prj_hist_orders_lines.net_amount = 0.00 THEN 0.00 ELSE&#xA;&#x9; --round((prj_hist_orders_lines.taxes_amount / prj_hist_orders_lines.net_amount) * 100,2) END AS Value, &#xA;&#x9; Value,&#xA;&#x9;accounts.code as Code_Account, products.Code as Code_Product,  &#xA;&#x9;Orden, ERP_IMPLT_hist_orders_sec.Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based&#xA;FROM        ERP_IMPLT_hist_orders_sec &#xA;inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_header.Order_Num&#xA; inner join Products on REPLACE(LTRIM(REPLACE(ERP_IMPLT_hist_orders_sec.Code_Product,'0',' ')),' ','0')&#xA; = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_hist_orders_sec.Code_Account = accounts.Code_ofClient&#xA;--INNER JOIN prj_hist_orders_lines ON ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_lines.Order_Num&#xA;--AND ERP_IMPLT_hist_orders_sec.Num_Line = prj_hist_orders_lines.Num_Line&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num, Num_Line, Secuence from prj_hist_orders_sec where Order_Num = prj_hist_orders_header.Order_Num and &#xA;Num_Line = ERP_IMPLT_hist_orders_sec.Num_Line and Secuence = ERP_IMPLT_hist_orders_sec.Secuence and Code_Table = ERP_IMPLT_hist_orders_sec.Code_Table)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_hist_orders_sec SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Value = MOD.Value, Code_Account = MOD.Code_Account, Code_Product = MOD.Code_Product, Orden = MOD.Orden, Code_Currency = MOD.Code_Currency, Unit_Measure = MOD.Unit_Measure, &#xA;&#x9;&#x9;Exclusive = MOD.Exclusive, On_Base = MOD.On_Base, Amount_Line = MOD.Amount_Line, Type_Based = MOD.Type_Based&#xA;FROM&#xA;(SELECT distinct prj_hist_orders_header.Order_Num, Num_Line, Secuence, Code_Table, Value, accounts.code as Code_Account, products.Code as Code_Product,  &#xA;&#x9;Orden, ERP_IMPLT_hist_orders_sec.Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based&#xA;FROM        ERP_IMPLT_hist_orders_sec inner join prj_hist_orders_header &#xA;on ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_header.Order_Num&#xA; inner join Products on REPLACE(LTRIM(REPLACE(ERP_IMPLT_hist_orders_sec.Code_Product,'0',' ')),' ','0')&#xA; = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_hist_orders_sec.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Num_Line, Secuence, Code_Table, Value,  Code_Account, Code_Product, Orden, Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based&#xA;     FROM prj_hist_orders_sec) as MOD &#xA;&#x9;&#x9;INNER JOIN prj_hist_orders_sec ON MOD.Order_Num = prj_hist_orders_sec.Order_Num and MOD.Num_Line = prj_hist_orders_sec.Num_Line and MOD.Secuence = prj_hist_orders_sec.Secuence&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_hist_orders_sec SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_sec CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_hist_orders_header.Order_Num, Num_Line, Secuence FROM ERP_IMPLT_hist_orders_sec inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_sec.Order_Num and ERP_IMPLT_hist_orders_sec.Num_Line = prj_hist_orders_sec.Num_Line and ERP_IMPLT_hist_orders_sec.Secuence = prj_hist_orders_sec.Secuence&#xA;&#x9;&#x9;and ERP_IMPLT_hist_orders_sec.Code_Table = prj_hist_orders_sec.Code_Table and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_hist_orders_sec SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_hist_orders_sec CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_hist_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_hist_orders_sec inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_sec.Order_Num and ERP_IMPLT_hist_orders_sec.Num_Line = prj_hist_orders_sec.Num_Line and ERP_IMPLT_hist_orders_sec.Secuence = prj_hist_orders_sec.Secuence &#xA;&#x9;&#x9;and ERP_IMPLT_hist_orders_sec.Code_Table = prj_hist_orders_sec.Code_Table and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_sec CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_hist_orders_sec CI"
      DTS:DTSID="{06AFDC4B-3F20-4374-9CEF-BBF9557A3E29}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_sec CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="26">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_hist_orders_sec SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_hist_orders_sec CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT prj_hist_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_hist_orders_sec inner join prj_hist_orders_header on ERP_IMPLT_hist_orders_sec.Order_Num = prj_hist_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_hist_orders_header.Order_Num = prj_hist_orders_sec.Order_Num and ERP_IMPLT_hist_orders_sec.Num_Line = prj_hist_orders_sec.Num_Line and ERP_IMPLT_hist_orders_sec.Secuence = prj_hist_orders_sec.Secuence and ERP_IMPLT_hist_orders_sec.Code_Table = prj_hist_orders_sec.Code_Table) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_hist_orders_status"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8BFB4D8D-E6B0-4F0B-879A-AB07B8BA3B5A}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_hist_orders_status"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO [dbo].[prj_hist_status]&#xA;           ([Platform]&#xA;           ,[Create_User]&#xA;           ,[Create_Date]&#xA;           ,[Modify_User]&#xA;           ,[Modify_Date]&#xA;           ,[Orden]&#xA;           ,[Code]&#xA;           ,[Description])&#xA;SELECT DISTINCT  View_System_Fields_ERP.Platform, View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;      NULL AS [Orden]&#xA;      ,[Code]&#xA;      ,[Description]&#xA;  FROM [dbo].[ERP_IMPLT_prj_hist_status]&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  WHERE not exists (SELECT code&#xA;FROM prj_hist_status where prj_hist_status.Code = ERP_IMPLT_prj_hist_status.Code)&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_orders_header"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_orders_header"
      DTS:DTSID="{362AE803-C6BC-4FB0-835D-2C7FE388E1F3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_orders_header"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- (1) Recibimos el número de pedido de Telynet. Puede que exista o no el pedido en el histórico. Las comparaciones se hacen usando Order_Num&#xA;-- (2) No recibimos el número de pedido de Telynet. Puede que exista o no el pedido en el histórico. Las comparaciones se hacen usando Order_Num_ofClient y hay que generar el Order_Num&#xA;-- Alta (1)&#xA;INSERT INTO prj_orders_header (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Code_Account, Code_Unit_Org, Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;Ordernum_Linked, Code_User_Del, Code_Seller_Del, Code_Promotion, Blocked, Code_User, Order_Num_ofClient, Code_Trademark, Code_Seller, Delivery_Date, &#xA;Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;Order_Num_Cli, Observations, Code_Lock, Code_ReturnCause, Status, Transfered, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, &#xA;Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Code_Ica, Net_Amount2, Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;Code_Wholesales, Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, Name1, Name2, Phone1, Population, Code_Warehouse, Amount_Surcharge, &#xA;Date_Expired)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;ERP_IMPLT_orders_header.Order_Num, accounts.Code as Code_Account, ERP_IMPLT_orders_header.Code_Unit_Org, &#xA;route_sellers.Code_Sales_Org, ERP_IMPLT_orders_header.Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, &#xA;'1' AS Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, Ordernum_Linked, Code_User_Del, sellers.Code as Code_Seller_Del, &#xA;ERP_IMPLT_orders_header.Code_Promotion, ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User, Order_Num_ofClient, &#xA;Code_Trademark, sellers_1.Code as Code_Seller, &#xA;CASE WHEN Date_holiday IS NOT NULL AND format(convert(date, delivery_date), 'dddd') = 'sábado'&#xA;THEN replace(dateadd(day,2,(convert(date,Delivery_Date, 112))),'-','') &#xA;ELSE CASE WHEN Date_holiday IS NOT NULL AND format(convert(date, delivery_date), 'dddd') &lt;&gt; 'sábado'&#xA;THEN replace(dateadd(day,2,(convert(date,Delivery_Date, 112))),'-','') &#xA;ELSE Delivery_Date&#xA;END END AS Delivery_Date, Code_Currency, Code_Paymentway, ERP_IMPLT_orders_header.Code_Price_List_default, &#xA;ERP_IMPLT_orders_header.Code_Price_List, sum(ERP_IMPLT_orders_lines.Brute_Amount) AS Brute_Amount, sum(ERP_IMPLT_orders_lines.Net_Amount) AS Net_Amount, sum(ERP_IMPLT_orders_lines.Taxes_Amount) AS Taxes_Amount, &#xA;sum(ERP_IMPLT_orders_lines.Total_Amount) AS Total_Amount, ERP_IMPLT_orders_header.Total_Cost, ERP_IMPLT_orders_header.Total_Weight, &#xA;Order_Num_Cli, ERP_IMPLT_orders_header.Observations, ERP_IMPLT_orders_header.Code_Lock, ERP_IMPLT_orders_header.Code_ReturnCause, &#xA;'1'AS Status, '1' as Transfered, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, addresses.Code as Code_Address_Shipto, &#xA;accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, &#xA;Code_Ica, Net_Amount2, '1' AS Invoiced, Grouped, Taxes_Req, Special_discount, Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, &#xA;Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, accounts_4.Code as Code_Wholesales, accounts.Code as Code_Collaborator, By_Phone, Code_Hash, &#xA;Charged, To_Charge, ERP_IMPLT_orders_header.Name1, ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1, ERP_IMPLT_orders_header.Population, &#xA;warehouses.Code as Code_Warehouse, Amount_Surcharge, Date_Expired&#xA;FROM ERP_IMPLT_orders_header &#xA;INNER JOIN ERP_IMPLT_orders_lines ON ERP_IMPLT_orders_header.Order_Num = ERP_IMPLT_orders_lines.Order_Num&#xA;inner join accounts on ERP_IMPLT_orders_header.Code_Account = accounts.Code_ofClient &#xA;left join accounts as accounts_1 on ERP_IMPLT_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;left join addresses on ERP_IMPLT_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;left join accounts as accounts_2 on ERP_IMPLT_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;left join addresses as addresses_1 on ERP_IMPLT_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;left join accounts as accounts_3 on ERP_IMPLT_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;left join addresses as addresses_2 on ERP_IMPLT_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;left join sellers on ERP_IMPLT_orders_header.Code_Seller_Del = REPLACE(LTRIM(REPLACE(sellers.Code_ofClient,'0',' ')),' ','0')&#xA;left join sellers as sellers_1 on ERP_IMPLT_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;left join accounts as accounts_4 on ERP_IMPLT_orders_header.Code_Wholesales = accounts_4.Code_ofClient &#xA;left join accounts as accounts_5 on ERP_IMPLT_orders_header.Code_Collaborator = accounts_5.Code_ofClient&#xA;left join warehouses on ERP_IMPLT_orders_header.Code_Warehouse = warehouses.Code_ofClient&#x9;&#xA;inner join route_sellers ON ERP_IMPLT_orders_header.Code_Seller_Del = route_sellers.Code_Seller&#xA;LEFT JOIN calendar_holidays ON calendar_holidays.Date_holiday = Delivery_Date&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num FROM prj_orders_header where Order_Num = ERP_IMPLT_orders_header.Order_Num) &#xA;and ERP_IMPLT_orders_header.Order_Num is NOT NULL&#xA;GROUP BY View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;ERP_IMPLT_orders_header.Order_Num, accounts.Code, ERP_IMPLT_orders_header.Code_Unit_Org, route_sellers.Code_Sales_Org, ERP_IMPLT_orders_header.Order_Date, ERP_IMPLT_orders_header.Order_Type, ERP_IMPLT_orders_header.Notes,&#xA;ERP_IMPLT_orders_header.Observations2, ERP_IMPLT_orders_header.Code_Sales_Office,ERP_IMPLT_orders_header.Assigned_Dispatch, ERP_IMPLT_orders_header.Dispatched,&#xA;ERP_IMPLT_orders_header.Capacity_load, ERP_IMPLT_orders_header.Type_Document,ERP_IMPLT_orders_header.Ordernum_Linked, ERP_IMPLT_orders_header.Code_User_Del,&#xA;sellers.Code, sellers_1.Code, ERP_IMPLT_orders_header.Code_Promotion, ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User,&#xA;ERP_IMPLT_orders_header.Order_Num_ofClient, ERP_IMPLT_orders_header.Code_Trademark,ERP_IMPLT_orders_header.Delivery_Date, ERP_IMPLT_orders_header.Code_Currency,&#xA;ERP_IMPLT_orders_header.Code_Paymentway, ERP_IMPLT_orders_header.Code_Price_List_default,ERP_IMPLT_orders_header.Code_Price_List, ERP_IMPLT_orders_header.Total_Cost,&#xA;ERP_IMPLT_orders_header.Total_Weight, ERP_IMPLT_orders_header.Order_Num_Cli,ERP_IMPLT_orders_header.Observations, ERP_IMPLT_orders_header.Code_Lock,&#xA;ERP_IMPLT_orders_header.Code_ReturnCause, ERP_IMPLT_orders_header.Status,ERP_IMPLT_orders_header.Order_Num_Telynet, accounts.Code, accounts_1.Code,&#xA;accounts_4.Code, accounts_3.Code, accounts_2.Code, accounts_5.Code,addresses.Code, addresses_1.Code, addresses_2.Code, ERP_IMPLT_orders_header.Code_Ica,&#xA;ERP_IMPLT_orders_header.Net_Amount2, ERP_IMPLT_orders_header.Grouped,ERP_IMPLT_orders_header.Taxes_Req, ERP_IMPLT_orders_header.Special_discount,&#xA;ERP_IMPLT_orders_header.Pp_discount, ERP_IMPLT_orders_header.Volume_discount,ERP_IMPLT_orders_header.Units_discount, ERP_IMPLT_orders_header.Fiscal,&#xA;ERP_IMPLT_orders_header.Route, ERP_IMPLT_orders_header.Num_Order_Provider,ERP_IMPLT_orders_header.Notes_1, ERP_IMPLT_orders_header.Notes_2,&#xA;ERP_IMPLT_orders_header.Notes_3, ERP_IMPLT_orders_header.Taxes_IVA,ERP_IMPLT_orders_header.Payment_Way_Changed, ERP_IMPLT_orders_header.By_Phone,&#xA;ERP_IMPLT_orders_header.Code_Hash, ERP_IMPLT_orders_header.Charged,ERP_IMPLT_orders_header.To_Charge, ERP_IMPLT_orders_header.Name1,&#xA;ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1,ERP_IMPLT_orders_header.Population, warehouses.Code, ERP_IMPLT_orders_header.Amount_Surcharge,&#xA;ERP_IMPLT_orders_header.Date_Expired, calendar_holidays.Date_holiday&#xA;GO&#xA;&#xA;-- Alta (2)&#xA;INSERT INTO prj_orders_header (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Code_Account, Code_Unit_Org, Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;Ordernum_Linked, Code_User_Del, Code_Seller_Del, Code_Promotion, Blocked, Code_User, Order_Num_ofClient, Code_Trademark, Code_Seller, Delivery_Date, &#xA;Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;Order_Num_Cli, Observations, Code_Lock, Code_ReturnCause, Status, Transfered, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, &#xA;Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Code_Ica, Net_Amount2, Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;Code_Wholesales, Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, Name1, Name2, Phone1, Population, Code_Warehouse, Amount_Surcharge, &#xA;Date_Expired)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by Order_Num_ofClient) + 10000000 as varchar(8)) as Order_Num, &#xA;accounts.Code as Code_Account, ERP_IMPLT_orders_header.Code_Unit_Org, accounts_org.Code_Sales_Org, ERP_IMPLT_orders_header.Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, '1' AS Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA;Ordernum_Linked, Code_User_Del, sellers.Code as Code_Seller_Del, ERP_IMPLT_orders_header.Code_Promotion, &#xA;ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User, Order_Num_ofClient, Code_Trademark,&#xA; sellers_1.Code as Code_Seller, CASE WHEN Date_holiday IS NOT NULL AND format(convert(date, delivery_date), 'dddd') = 'sábado'&#xA;THEN replace(dateadd(day,2,(convert(date,Delivery_Date, 112))),'-','') &#xA;ELSE CASE WHEN Date_holiday IS NOT NULL AND format(convert(date, delivery_date), 'dddd') &lt;&gt; 'sábado'&#xA;THEN replace(dateadd(day,2,(convert(date,Delivery_Date, 112))),'-','') &#xA;ELSE Delivery_Date&#xA;END END AS Delivery_Date,&#xA;Code_Currency, Code_Paymentway, ERP_IMPLT_orders_header.Code_Price_List_default, ERP_IMPLT_orders_header.Code_Price_List, &#xA;sum(ERP_IMPLT_orders_lines.Brute_Amount) AS Brute_Amount, sum(ERP_IMPLT_orders_lines.Net_Amount) AS Net_Amount, &#xA;sum(ERP_IMPLT_orders_lines.Taxes_Amount) AS Taxes_Amount,sum(ERP_IMPLT_orders_lines.Total_Amount) AS Total_Amount,  &#xA;ERP_IMPLT_orders_header.Total_Cost, ERP_IMPLT_orders_header.Total_Weight, Order_Num_Cli, ERP_IMPLT_orders_header.Observations, &#xA;ERP_IMPLT_orders_header.Code_Lock, ERP_IMPLT_orders_header.Code_ReturnCause, '1' AS Status, '1' as Transfered, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, &#xA;addresses.Code as Code_Address_Shipto, accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, &#xA;accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, Code_Ica, Net_Amount2, '1' AS Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;accounts_4.Code as Code_Wholesales, accounts.Code as Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, ERP_IMPLT_orders_header.Name1, ERP_IMPLT_orders_header.Name2, &#xA;ERP_IMPLT_orders_header.Phone1, ERP_IMPLT_orders_header.Population, warehouses.Code as Code_Warehouse, Amount_Surcharge, &#xA;Date_Expired FROM ERP_IMPLT_orders_header &#xA;INNER JOIN ERP_IMPLT_orders_lines ON ERP_IMPLT_orders_header.Order_Num = ERP_IMPLT_orders_lines.Order_Num&#xA;inner join accounts on ERP_IMPLT_orders_header.Code_Account = accounts.Code_ofClient &#xA;left join accounts as accounts_1 on ERP_IMPLT_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;left join addresses on ERP_IMPLT_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;left join accounts as accounts_2 on ERP_IMPLT_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;left join addresses as addresses_1 on ERP_IMPLT_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;left join accounts as accounts_3 on ERP_IMPLT_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;left join addresses as addresses_2 on ERP_IMPLT_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;left join sellers on ERP_IMPLT_orders_header.Code_Seller_Del = REPLACE(LTRIM(REPLACE(sellers.Code_ofClient,'0',' ')),' ','0')&#xA;left join sellers as sellers_1 on ERP_IMPLT_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;left join accounts as accounts_4 on ERP_IMPLT_orders_header.Code_Wholesales = accounts_4.Code_ofClient &#xA;left join accounts as accounts_5 on ERP_IMPLT_orders_header.Code_Collaborator = accounts_5.Code_ofClient&#xA;left join warehouses on ERP_IMPLT_orders_header.Code_Warehouse = warehouses.Code_ofClient&#xA;inner join accounts_org ON accounts.Code = accounts_org.Code_Account&#xA;LEFT JOIN calendar_holidays ON calendar_holidays.Date_holiday = Delivery_Date&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num_ofClient FROM prj_orders_header &#xA;where Order_Num_ofClient = ERP_IMPLT_orders_header.Order_Num_ofClient) and ERP_IMPLT_orders_header.Order_Num is NULL&#xA;GROUP BY View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, View_System_Fields_ERP.Platform,   &#xA;ERP_IMPLT_orders_header.Order_Num, accounts.Code, ERP_IMPLT_orders_header.Code_Unit_Org,accounts_org.Code_Sales_Org, ERP_IMPLT_orders_header.Order_Date,&#xA;ERP_IMPLT_orders_header.Order_Type, ERP_IMPLT_orders_header.Notes,ERP_IMPLT_orders_header.Observations2, ERP_IMPLT_orders_header.Code_Sales_Office,&#xA;ERP_IMPLT_orders_header.Assigned_Dispatch, ERP_IMPLT_orders_header.Dispatched,ERP_IMPLT_orders_header.Capacity_load, ERP_IMPLT_orders_header.Type_Document,&#xA;ERP_IMPLT_orders_header.Ordernum_Linked, ERP_IMPLT_orders_header.Code_User_Del,sellers.Code, sellers_1.Code, ERP_IMPLT_orders_header.Code_Promotion, &#xA;ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User,ERP_IMPLT_orders_header.Order_Num_ofClient, ERP_IMPLT_orders_header.Code_Trademark,&#xA;ERP_IMPLT_orders_header.Delivery_Date, ERP_IMPLT_orders_header.Code_Currency,ERP_IMPLT_orders_header.Code_Paymentway, ERP_IMPLT_orders_header.Code_Price_List_default,&#xA;ERP_IMPLT_orders_header.Code_Price_List, ERP_IMPLT_orders_header.Total_Cost,ERP_IMPLT_orders_header.Total_Weight, ERP_IMPLT_orders_header.Order_Num_Cli,&#xA;ERP_IMPLT_orders_header.Observations, ERP_IMPLT_orders_header.Code_Lock,ERP_IMPLT_orders_header.Code_ReturnCause, ERP_IMPLT_orders_header.Status,&#xA;ERP_IMPLT_orders_header.Order_Num_Telynet, accounts.Code, accounts_1.Code,accounts_4.Code, accounts_3.Code, accounts_2.Code, accounts_5.Code,&#xA;addresses.Code, addresses_1.Code, addresses_2.Code, ERP_IMPLT_orders_header.Code_Ica,ERP_IMPLT_orders_header.Net_Amount2, ERP_IMPLT_orders_header.Grouped,&#xA;ERP_IMPLT_orders_header.Taxes_Req, ERP_IMPLT_orders_header.Special_discount,ERP_IMPLT_orders_header.Pp_discount, ERP_IMPLT_orders_header.Volume_discount,&#xA;ERP_IMPLT_orders_header.Units_discount, ERP_IMPLT_orders_header.Fiscal,ERP_IMPLT_orders_header.Route, ERP_IMPLT_orders_header.Num_Order_Provider,&#xA;ERP_IMPLT_orders_header.Notes_1, ERP_IMPLT_orders_header.Notes_2,ERP_IMPLT_orders_header.Notes_3, ERP_IMPLT_orders_header.Taxes_IVA,&#xA;ERP_IMPLT_orders_header.Payment_Way_Changed, ERP_IMPLT_orders_header.By_Phone,ERP_IMPLT_orders_header.Code_Hash, ERP_IMPLT_orders_header.Charged,&#xA;ERP_IMPLT_orders_header.To_Charge, ERP_IMPLT_orders_header.Name1,ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1,&#xA;ERP_IMPLT_orders_header.Population, warehouses.Code, ERP_IMPLT_orders_header.Amount_Surcharge,ERP_IMPLT_orders_header.Date_Expired, ERP_IMPLT_orders_header.Date_Expired, calendar_holidays.Date_holiday&#xA;GO&#xA;&#xA;-- Modificación (1)&#xA;UPDATE prj_orders_header SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code_Account = MOD.Code_Account, Code_Unit_Org = MOD.Code_Unit_Org, Code_Sales_Org = MOD.Code_Sales_Org, Order_Date = MOD.Order_Date, Order_Type = MOD.Order_Type, &#xA;Notes = MOD.Notes, Observations2 = MOD.Observations2, Code_Sales_Office = MOD.Code_Sales_Office, Assigned_Dispatch = MOD.Assigned_Dispatch, Dispatched = MOD.Dispatched, &#xA;Capacity_load = MOD.Capacity_load, Type_Document = MOD.Type_Document, Ordernum_Linked = MOD.Ordernum_Linked, Code_User_Del = MOD.Code_User_Del, Code_Seller_Del = MOD.Code_Seller_Del, &#xA;Code_Promotion = MOD.Code_Promotion, Blocked = MOD.Blocked, Code_User = MOD.Code_User, Code_Trademark = MOD.Code_Trademark, &#xA;Code_Seller = MOD.Code_Seller, Delivery_Date = MOD.Delivery_Date, Code_Currency = MOD.Code_Currency, Code_Paymentway = MOD.Code_Paymentway, Code_Price_List_default = MOD.Code_Price_List_default, &#xA;Code_Price_List = MOD.Code_Price_List, Brute_Amount = MOD.Brute_Amount, Net_Amount = MOD.Net_Amount, Taxes_Amount = MOD.Taxes_Amount, Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, &#xA;Total_Weight = MOD.Total_Weight, Order_Num_Cli = MOD.Order_Num_Cli, Observations = MOD.Observations, Code_Lock = MOD.Code_Lock, Code_ReturnCause = MOD.Code_ReturnCause, &#xA;Transfered = MOD.Transfered, Order_Num_Telynet = MOD.Order_Num_Telynet, Code_Account_Shipto = MOD.Code_Account_Shipto, Code_Address_Shipto = MOD.Code_Address_Shipto, &#xA; Code_Account_Billto = MOD.Code_Account_Billto, Code_Address_Billto = MOD.Code_Address_Billto, Code_Account_Payer = MOD.Code_Account_Payer, Code_Address_Payer = MOD.Code_Address_Payer, &#xA;Code_Ica = MOD.Code_Ica, Net_Amount2 = MOD.Net_Amount2, Invoiced = MOD.Invoiced, Grouped = MOD.Grouped, Taxes_Req = MOD.Taxes_Req, Special_discount = MOD.Special_discount, &#xA; Pp_discount = MOD.Pp_discount, Volume_discount = MOD.Volume_discount, Units_discount = MOD.Units_discount, Fiscal = MOD.Fiscal, Route = MOD.Route, Num_Order_Provider = MOD.Num_Order_Provider, &#xA;Notes_1 = MOD.Notes_1, Notes_2 = MOD.Notes_2, Notes_3 = MOD.Notes_3, Taxes_IVA = MOD.Taxes_IVA, Payment_Way_Changed = MOD.Payment_Way_Changed, Code_Wholesales = MOD.Code_Wholesales, &#xA;Code_Collaborator = MOD.Code_Collaborator, By_Phone = MOD.By_Phone, Code_Hash = MOD.Code_Hash, Charged = MOD.Charged, To_Charge = MOD.To_Charge, Name1 = MOD.Name1, Name2 = MOD.Name2, &#xA;Phone1 = MOD.Phone1, Population = MOD.Population, Code_Warehouse = MOD.Code_Warehouse, Amount_Surcharge = MOD.Amount_Surcharge, Date_Expired = MOD.Date_Expired&#xA;FROM&#xA;(SELECT ERP_IMPLT_orders_header.Order_Num, accounts.Code as Code_Account, ERP_IMPLT_orders_header.Code_Unit_Org, &#xA;accounts_org.Code_Sales_Org, ERP_IMPLT_orders_header.Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, &#xA;'1' AS Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, Ordernum_Linked, Code_User_Del, sellers.Code as Code_Seller_Del, &#xA;ERP_IMPLT_orders_header.Code_Promotion, ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User, Order_Num_ofClient, &#xA;Code_Trademark, sellers_1.Code as Code_Seller, CASE WHEN Date_holiday IS NOT NULL AND format(convert(date, delivery_date), 'dddd') = 'sábado'&#xA;THEN replace(dateadd(day,2,(convert(date,Delivery_Date, 112))),'-','') &#xA;ELSE CASE WHEN Date_holiday IS NOT NULL AND format(convert(date, delivery_date), 'dddd') &lt;&gt; 'sábado'&#xA;THEN replace(dateadd(day,2,(convert(date,Delivery_Date, 112))),'-','') &#xA;ELSE Delivery_Date&#xA;END END AS Delivery_Date, Code_Currency, Code_Paymentway, ERP_IMPLT_orders_header.Code_Price_List_default, ERP_IMPLT_orders_header.Code_Price_List, &#xA;sum(ERP_IMPLT_orders_lines.Brute_Amount) AS Brute_Amount, sum(ERP_IMPLT_orders_lines.Net_Amount) AS Net_Amount, sum(ERP_IMPLT_orders_lines.Taxes_Amount) AS Taxes_Amount, sum(ERP_IMPLT_orders_lines.Total_Amount) AS Total_Amount, &#xA;ERP_IMPLT_orders_header.Total_Cost, ERP_IMPLT_orders_header.Total_Weight, Order_Num_Cli, ERP_IMPLT_orders_header.Observations, ERP_IMPLT_orders_header.Code_Lock, ERP_IMPLT_orders_header.Code_ReturnCause, &#xA;'1' as Transfered, Order_Num_Telynet, accounts_1.Code as Code_Account_Shipto, addresses.Code as Code_Address_Shipto, &#xA;accounts_1.Code as Code_Account_Billto, addresses_1.Code as Code_Address_Billto, accounts_3.Code as Code_Account_Payer, addresses_2.Code as Code_Address_Payer, &#xA;Code_Ica, Net_Amount2, '1' AS Invoiced, Grouped, Taxes_Req, Special_discount, Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, &#xA;Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, accounts_4.Code as Code_Wholesales, accounts.Code as Code_Collaborator, By_Phone, &#xA;Code_Hash, Charged, To_Charge, ERP_IMPLT_orders_header.Name1, ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1, ERP_IMPLT_orders_header.Population, &#xA;warehouses.Code as Code_Warehouse, Amount_Surcharge, Date_Expired&#xA;FROM ERP_IMPLT_orders_header &#xA;INNER JOIN ERP_IMPLT_orders_lines ON ERP_IMPLT_orders_header.Order_Num = ERP_IMPLT_orders_lines.Order_Num&#xA;inner join accounts on ERP_IMPLT_orders_header.Code_Account = accounts.Code_ofClient &#xA;left join accounts as accounts_1 on ERP_IMPLT_orders_header.Code_Account_Shipto = accounts_1.Code_ofClient &#xA;left join addresses on ERP_IMPLT_orders_header.Code_Address_Shipto = addresses.Code_ofClient&#xA;left join accounts as accounts_2 on ERP_IMPLT_orders_header.Code_Account_Billto = accounts_2.Code_ofClient &#xA;left join addresses as addresses_1 on ERP_IMPLT_orders_header.Code_Address_Billto = addresses_1.Code_ofClient&#xA;left join accounts as accounts_3 on ERP_IMPLT_orders_header.Code_Account_Payer = accounts_3.Code_ofClient &#xA;left join addresses as addresses_2 on ERP_IMPLT_orders_header.Code_Address_Payer = addresses_2.Code_ofClient&#xA;left join sellers on ERP_IMPLT_orders_header.Code_Seller_Del = &#xA;REPLACE(LTRIM(REPLACE(sellers.Code_ofClient,'0',' ')),' ','0')&#xA;left join sellers as sellers_1 on ERP_IMPLT_orders_header.Code_Seller = sellers_1.Code_ofClient&#xA;left join accounts as accounts_4 on ERP_IMPLT_orders_header.Code_Wholesales = accounts_4.Code_ofClient &#xA;left join accounts as accounts_5 on ERP_IMPLT_orders_header.Code_Collaborator = accounts_5.Code_ofClient&#xA;left join warehouses on ERP_IMPLT_orders_header.Code_Warehouse = warehouses.Code_ofClient&#xA;inner join accounts_org ON accounts.Code = accounts_org.Code_Account&#xA;LEFT JOIN calendar_holidays ON calendar_holidays.Date_holiday = Delivery_Date&#xA;WHERE &#x9;ERP_IMPLT_orders_header.Order_Num is not null&#xA;GROUP BY &#xA;ERP_IMPLT_orders_header.Order_Num, accounts.Code, ERP_IMPLT_orders_header.Code_Unit_Org,accounts_org.Code_Sales_Org, ERP_IMPLT_orders_header.Order_Date,&#xA;ERP_IMPLT_orders_header.Order_Type, ERP_IMPLT_orders_header.Notes,ERP_IMPLT_orders_header.Observations2, ERP_IMPLT_orders_header.Code_Sales_Office,&#xA;ERP_IMPLT_orders_header.Assigned_Dispatch, ERP_IMPLT_orders_header.Dispatched,ERP_IMPLT_orders_header.Capacity_load, ERP_IMPLT_orders_header.Type_Document,&#xA;ERP_IMPLT_orders_header.Ordernum_Linked, ERP_IMPLT_orders_header.Code_User_Del,sellers.Code, sellers_1.Code, ERP_IMPLT_orders_header.Code_Promotion, &#xA;ERP_IMPLT_orders_header.Blocked, ERP_IMPLT_orders_header.Code_User,ERP_IMPLT_orders_header.Order_Num_ofClient, ERP_IMPLT_orders_header.Code_Trademark,&#xA;ERP_IMPLT_orders_header.Delivery_Date, ERP_IMPLT_orders_header.Code_Currency,ERP_IMPLT_orders_header.Code_Paymentway, ERP_IMPLT_orders_header.Code_Price_List_default,&#xA;ERP_IMPLT_orders_header.Code_Price_List, ERP_IMPLT_orders_header.Total_Cost,ERP_IMPLT_orders_header.Total_Weight, ERP_IMPLT_orders_header.Order_Num_Cli,&#xA;ERP_IMPLT_orders_header.Observations, ERP_IMPLT_orders_header.Code_Lock,ERP_IMPLT_orders_header.Code_ReturnCause, &#xA;ERP_IMPLT_orders_header.Order_Num_Telynet, accounts.Code, accounts_1.Code,accounts_4.Code, accounts_3.Code, accounts_2.Code, accounts_5.Code,&#xA;addresses.Code, addresses_1.Code, addresses_2.Code, ERP_IMPLT_orders_header.Code_Ica,ERP_IMPLT_orders_header.Net_Amount2, ERP_IMPLT_orders_header.Grouped,&#xA;ERP_IMPLT_orders_header.Taxes_Req, ERP_IMPLT_orders_header.Special_discount,ERP_IMPLT_orders_header.Pp_discount, ERP_IMPLT_orders_header.Volume_discount,&#xA;ERP_IMPLT_orders_header.Units_discount, ERP_IMPLT_orders_header.Fiscal,ERP_IMPLT_orders_header.Route, ERP_IMPLT_orders_header.Num_Order_Provider,&#xA;ERP_IMPLT_orders_header.Notes_1, ERP_IMPLT_orders_header.Notes_2,ERP_IMPLT_orders_header.Notes_3, ERP_IMPLT_orders_header.Taxes_IVA,&#xA;ERP_IMPLT_orders_header.Payment_Way_Changed, ERP_IMPLT_orders_header.By_Phone,ERP_IMPLT_orders_header.Code_Hash, ERP_IMPLT_orders_header.Charged,&#xA;ERP_IMPLT_orders_header.To_Charge, ERP_IMPLT_orders_header.Name1,ERP_IMPLT_orders_header.Name2, ERP_IMPLT_orders_header.Phone1,&#xA;ERP_IMPLT_orders_header.Population, warehouses.Code, ERP_IMPLT_orders_header.Amount_Surcharge,ERP_IMPLT_orders_header.Date_Expired, calendar_holidays.Date_holiday&#xA;     EXCEPT&#xA; SELECT  Order_Num, Code_Account, Code_Unit_Org,  Code_Sales_Org, Order_Date, Order_Type, Notes, Observations2, Code_Sales_Office, Assigned_Dispatch, Dispatched, Capacity_load, Type_Document, &#xA; Ordernum_Linked, Code_User_Del, Code_Seller_Del, Code_Promotion, Blocked, Code_User, Order_Num_ofClient, Code_Trademark, Code_Seller, Delivery_Date, &#xA;Code_Currency, Code_Paymentway, Code_Price_List_default, Code_Price_List, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;Order_Num_Cli, Observations, Code_Lock, Code_ReturnCause, '1' as Transfered, Order_Num_Telynet, Code_Account_Shipto, Code_Address_Shipto, &#xA;Code_Account_Billto, Code_Address_Billto, Code_Account_Payer, Code_Address_Payer, Code_Ica, Net_Amount2, '1' AS Invoiced, Grouped, Taxes_Req, Special_discount, &#xA;Pp_discount, Volume_discount, Units_discount, Fiscal, Route, Num_Order_Provider, Notes_1, Notes_2, Notes_3, Taxes_IVA, Payment_Way_Changed, &#xA;Code_Wholesales, Code_Collaborator, By_Phone, Code_Hash, Charged, To_Charge, Name1, Name2, Phone1, Population, Code_Warehouse, Amount_Surcharge, &#xA;Date_Expired&#xA;FROM  prj_orders_header) as MOD INNER JOIN prj_orders_header ON MOD.Order_Num = prj_orders_header.Order_Num &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_orders_lines"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_orders_lines"
      DTS:DTSID="{1AB1F8C0-6106-44C9-8A21-CAB893FBF3F7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_orders_lines"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_orders_lines (Create_User, Create_Date, Modify_User, Modify_Date, Platform,  Order_Num, Num_Line, Code_Account, Order_Date, Code_Product, Lot_Number, Discount_Manual, Unit_Type_Sel, &#xA;                      Unit_Type_Inv, Factor_Conversion, Br_Price, Price, Price_N_Promo, Manual, Total_Discount, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Quantity, Quantity_Unit, Code_Promotion, Quantity_Promotion, Code_Price_List_default, Code_Price_List, Code_ReturnCause, Sale_Type, Code_Lock, Observations, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Transfered, Quantity_promo_def, Quantity_promo_def_gif, Discount_promo_def, Price_promo_def, Invoiced, Quantity_Order, Quantity_Order_Gift, TaxClassification, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Quantity_Gift, IVA_Amount, Req_Amount, Total_Com, Per_Com, New_Sale, Price_Ret)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_orders_header.Order_Num, Num_Line, accounts.code as Code_Account, ERP_IMPLT_orders_lines.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_orders_lines.Lot_Number, ERP_IMPLT_orders_lines.Discount_Manual, ERP_IMPLT_orders_lines.Unit_Type_Sel, ERP_IMPLT_orders_lines.Unit_Type_Inv, &#xA;&#x9;ERP_IMPLT_orders_lines.Factor_Conversion AS Factor_Conversion, &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Br_Price END AS Br_Price, &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Price END AS Price, &#xA;&#x9;ERP_IMPLT_orders_lines.Price_N_Promo, &#xA;&#x9;ERP_IMPLT_orders_lines.Manual, ERP_IMPLT_orders_lines.Total_Discount, &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Brute_Amount END AS Brute_Amount, &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Net_Amount END AS Net_Amount, &#xA;&#x9;ERP_IMPLT_orders_lines.Taxes_Amount , &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Total_Amount END AS Total_Amount, &#xA;&#x9;ERP_IMPLT_orders_lines.Total_Cost, ERP_IMPLT_orders_lines.Total_Weight, &#xA;&#x9;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity END AS Quantity, &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity_Unit END AS Quantity_Unit,  ERP_IMPLT_orders_lines.Code_Promotion, ERP_IMPLT_orders_lines.Quantity_Promotion, &#xA;    ERP_IMPLT_orders_lines.Code_Price_List_default, ERP_IMPLT_orders_lines.Code_Price_List, ERP_IMPLT_orders_lines.Code_ReturnCause, ERP_IMPLT_orders_lines.Sale_Type, &#xA;&#x9;ERP_IMPLT_orders_lines.Code_Lock, ERP_IMPLT_orders_lines.Observations, '1' as Transfered, ERP_IMPLT_orders_lines.Quantity_promo_def, &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity_promo_def_gif, ERP_IMPLT_orders_lines.Discount_promo_def, ERP_IMPLT_orders_lines.Price_promo_def, ERP_IMPLT_orders_lines.Invoiced, &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity_Order, ERP_IMPLT_orders_lines.Quantity_Order_Gift, ERP_IMPLT_orders_lines.TaxClassification, ERP_IMPLT_orders_lines.Quantity_Gift, &#xA;&#x9;ERP_IMPLT_orders_lines.IVA_Amount, ERP_IMPLT_orders_lines.Req_Amount, ERP_IMPLT_orders_lines.Total_Com, ERP_IMPLT_orders_lines.Per_Com, ERP_IMPLT_orders_lines.New_Sale, &#xA;&#x9;ERP_IMPLT_orders_lines.Price_Ret&#xA;FROM        ERP_IMPLT_orders_lines &#xA;inner join prj_orders_header &#xA;on REPLACE(LTRIM(REPLACE(ERP_IMPLT_orders_lines.Order_Num,'0',' ')),' ','0') &#xA; = prj_orders_header.Order_Num &#xA; inner join Products on REPLACE(LTRIM(REPLACE(ERP_IMPLT_orders_lines.Code_Product,'0',' ')),' ','0')&#xA; = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_lines.Code_Account = accounts.Code_ofClient&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num, Num_Line from prj_orders_lines where Order_Num = prj_orders_header.Order_Num and &#xA;Num_Line = ERP_IMPLT_orders_lines.Num_Line)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_orders_lines SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Order_Date = MOD.Order_Date, Code_Product = MOD.Code_Product, Lot_Number = MOD.Lot_Number, Discount_Manual = MOD.Discount_Manual, &#xA;&#x9;&#x9;Unit_Type_Sel = MOD.Unit_Type_Sel, Unit_Type_Inv = MOD.Unit_Type_Inv, Factor_Conversion = MOD.Factor_Conversion, Br_Price = MOD.Br_Price, Price = MOD.Price, &#xA;&#x9;&#x9;Price_N_Promo = MOD.Price_N_Promo, Manual = MOD.Manual, Total_Discount = MOD.Total_Discount, Brute_Amount = MOD.Brute_Amount, Net_Amount = MOD.Net_Amount, &#xA;&#x9;&#x9;Taxes_Amount = MOD.Taxes_Amount, Total_Amount = MOD.Total_Amount, Total_Cost = MOD.Total_Cost, Total_Weight = MOD.Total_Weight, Quantity = MOD.Quantity, &#xA;&#x9;&#x9;Quantity_Unit = MOD.Quantity_Unit, Code_Promotion = MOD.Code_Promotion, Quantity_Promotion = MOD.Quantity_Promotion, Code_Price_List_default = MOD.Code_Price_List_default, &#xA;&#x9;&#x9;Code_Price_List = MOD.Code_Price_List, Code_ReturnCause = MOD.Code_ReturnCause, Sale_Type = MOD.Sale_Type, Code_Lock = MOD.Code_Lock, Observations = MOD.Observations, &#xA;&#x9;&#x9;Transfered = MOD.Transfered, Quantity_promo_def = MOD.Quantity_promo_def, Quantity_promo_def_gif = MOD.Quantity_promo_def_gif, Discount_promo_def = MOD.Discount_promo_def, &#xA;&#x9;&#x9;Price_promo_def = MOD.Price_promo_def, Invoiced = MOD.Invoiced, Quantity_Order = MOD.Quantity_Order, Quantity_Order_Gift = MOD.Quantity_Order_Gift, &#xA;&#x9;&#x9;TaxClassification = MOD.TaxClassification, Quantity_Gift = MOD.Quantity_Gift, IVA_Amount = MOD.IVA_Amount, Req_Amount = MOD.Req_Amount, Total_Com = MOD.Total_Com, &#xA;        Per_Com = MOD.Per_Com, New_Sale = MOD.New_Sale, Price_Ret = MOD.Price_Ret&#xA;FROM&#xA;(SELECT distinct prj_orders_header.Order_Num, Num_Line, accounts.code as Code_Account, ERP_IMPLT_orders_lines.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_orders_lines.Lot_Number, ERP_IMPLT_orders_lines.Discount_Manual, ERP_IMPLT_orders_lines.Unit_Type_Sel, ERP_IMPLT_orders_lines.Unit_Type_Inv, &#xA;&#x9;ERP_IMPLT_orders_lines.Factor_Conversion AS Factor_Conversion, CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Br_Price END AS Br_Price, &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Price END AS Price,  ERP_IMPLT_orders_lines.Price_N_Promo, &#xA;&#x9;ERP_IMPLT_orders_lines.Manual, ERP_IMPLT_orders_lines.Total_Discount, &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Brute_Amount END AS Brute_Amount, &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Net_Amount END AS Net_Amount, &#xA;&#x9;ERP_IMPLT_orders_lines.Taxes_Amount , &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Total_Amount END AS Total_Amount, &#xA;&#x9;ERP_IMPLT_orders_lines.Total_Cost, ERP_IMPLT_orders_lines.Total_Weight, &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity END AS Quantity, &#xA;&#x9;CASE WHEN ERP_IMPLT_orders_lines.Quantity_Gift &gt; 0.00 THEN 0.00 ELSE &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity_Unit END AS Quantity_Unit, &#xA;&#x9;ERP_IMPLT_orders_lines.Code_Promotion, ERP_IMPLT_orders_lines.Quantity_Promotion, &#xA;    ERP_IMPLT_orders_lines.Code_Price_List_default, ERP_IMPLT_orders_lines.Code_Price_List, ERP_IMPLT_orders_lines.Code_ReturnCause, ERP_IMPLT_orders_lines.Sale_Type, &#xA;&#x9;ERP_IMPLT_orders_lines.Code_Lock, ERP_IMPLT_orders_lines.Observations, '1' as Transfered, ERP_IMPLT_orders_lines.Quantity_promo_def, &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity_promo_def_gif, ERP_IMPLT_orders_lines.Discount_promo_def, ERP_IMPLT_orders_lines.Price_promo_def, ERP_IMPLT_orders_lines.Invoiced, &#xA;&#x9;ERP_IMPLT_orders_lines.Quantity_Order, ERP_IMPLT_orders_lines.Quantity_Order_Gift, ERP_IMPLT_orders_lines.TaxClassification, ERP_IMPLT_orders_lines.Quantity_Gift, &#xA;&#x9;ERP_IMPLT_orders_lines.IVA_Amount, ERP_IMPLT_orders_lines.Req_Amount, ERP_IMPLT_orders_lines.Total_Com, ERP_IMPLT_orders_lines.Per_Com, ERP_IMPLT_orders_lines.New_Sale, &#xA;&#x9;ERP_IMPLT_orders_lines.Price_Ret&#xA;FROM        ERP_IMPLT_orders_lines &#xA;inner join prj_orders_header &#xA;on REPLACE(LTRIM(REPLACE(ERP_IMPLT_orders_lines.Order_Num,'0',' ')),' ','0') &#xA; = prj_orders_header.Order_Num &#xA; inner join Products on REPLACE(LTRIM(REPLACE(ERP_IMPLT_orders_lines.Code_Product,'0',' ')),' ','0')&#xA; = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_lines.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Num_Line, Code_Account, Order_Date, Code_Product, Lot_Number, Discount_Manual, Unit_Type_Sel, Unit_Type_Inv, Factor_Conversion, &#xA;&#x9;&#x9;Br_Price, Price,&#xA;&#x9;&#x9; Price_N_Promo, Manual, Total_Discount, Brute_Amount, Net_Amount, Taxes_Amount, Total_Amount, Total_Cost, Total_Weight, Quantity, &#xA;&#x9;&#x9;Quantity_Unit, Code_Promotion, Quantity_Promotion, Code_Price_List_default, Code_Price_List, Code_ReturnCause, Sale_Type, Code_Lock, Observations, &#xA;&#x9;&#x9;Transfered, Quantity_promo_def, Quantity_promo_def_gif, Discount_promo_def, Price_promo_def, Invoiced, Quantity_Order, Quantity_Order_Gift, &#xA;&#x9;&#x9;TaxClassification, Quantity_Gift, IVA_Amount, Req_Amount, Total_Com, Per_Com, New_Sale, Price_Ret&#xA;     FROM prj_orders_lines) as MOD &#xA;&#x9;&#x9;INNER JOIN prj_orders_lines ON MOD.Order_Num = prj_orders_lines.Order_Num and MOD.Num_Line = prj_orders_lines.Num_Line &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_orders_lines SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_orders_lines CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_orders_lines inner join prj_orders_header on ERP_IMPLT_orders_lines.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_lines.Order_Num and ERP_IMPLT_orders_lines.Num_Line = prj_orders_lines.Num_Line&#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_orders_lines SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_orders_lines CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_orders_lines inner join prj_orders_header on ERP_IMPLT_orders_lines.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_lines.Order_Num and ERP_IMPLT_orders_lines.Num_Line = prj_orders_lines.Num_Line and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_orders_lines_lots"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_orders_lines_lots"
      DTS:DTSID="{E36D93CD-7DF1-4E27-8352-FB78F72B4FB7}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_orders_lines_lots"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_orders_lines_lots (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Num_Line, &#xA;Lot_Number, Code_Transport, Code_Account, &#xA;                      Order_Date, Code_Product, Unit_Type_Sel, Unit_Type_Inv, Factor_Conversion, Quantity, Quantity_Unit, Transfered)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_orders_header.Order_Num, Num_Line, Lot_Number, &#xA;&#x9;route_sellers.Code_Route AS Code_Transport,&#xA;&#x9;accounts.code as Code_Account, &#xA;&#x9;ERP_IMPLT_orders_lines_lots.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_orders_lines_lots.Unit_Type_Sel, ERP_IMPLT_orders_lines_lots.Unit_Type_Inv, &#xA;&#x9;ERP_IMPLT_orders_lines_lots.Factor_Conversion, ERP_IMPLT_orders_lines_lots.Quantity, &#xA;&#x9;ERP_IMPLT_orders_lines_lots.Quantity_Unit, '1' as Transfered&#xA;&#x9;FROM        ERP_IMPLT_orders_lines_lots &#xA;inner join prj_orders_header &#xA;on REPLACE(LTRIM(REPLACE(ERP_IMPLT_orders_lines_lots.Order_Num,'0',' ')),' ','0') = prj_orders_header.Order_Num &#xA;inner join Products on REPLACE(LTRIM(REPLACE(ERP_IMPLT_orders_lines_lots.Code_Product,'0',' ')),' ','0')&#xA; = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_lines_lots.Code_Account = accounts.Code_ofClient&#xA;INNER JOIN route_sellers ON route_sellers.Code_Seller = prj_orders_header.Code_Seller&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num, Num_Line from prj_orders_lines_lots where Order_Num = prj_orders_header.Order_Num and &#xA;Num_Line = ERP_IMPLT_orders_lines_lots.Num_Line and Lot_Number = ERP_IMPLT_orders_lines_lots.Lot_Number)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_orders_lines_lots SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Order_Date = MOD.Order_Date, Code_Product = MOD.Code_Product, Unit_Type_Sel = MOD.Unit_Type_Sel, Unit_Type_Inv = MOD.Unit_Type_Inv, &#xA;&#x9;&#x9;Factor_Conversion = MOD.Factor_Conversion, Quantity = MOD.Quantity, Quantity_Unit = MOD.Quantity_Unit, Transfered = MOD.Transfered&#xA;FROM&#xA;(SELECT distinct prj_orders_header.Order_Num, Num_Line, Lot_Number, accounts.code as Code_Account, ERP_IMPLT_orders_lines_lots.Order_Date, products.Code as Code_Product,  &#xA;&#x9;ERP_IMPLT_orders_lines_lots.Unit_Type_Sel, ERP_IMPLT_orders_lines_lots.Unit_Type_Inv, ERP_IMPLT_orders_lines_lots.Factor_Conversion, ERP_IMPLT_orders_lines_lots.Quantity, ERP_IMPLT_orders_lines_lots.Quantity_Unit, '1' as Transfered&#xA;FROM        ERP_IMPLT_orders_lines_lots &#xA;inner join prj_orders_header &#xA;on REPLACE(LTRIM(REPLACE(ERP_IMPLT_orders_lines_lots.Order_Num,'0',' ')),' ','0') = prj_orders_header.Order_Num &#xA;inner join Products on REPLACE(LTRIM(REPLACE(ERP_IMPLT_orders_lines_lots.Code_Product,'0',' ')),' ','0')&#xA; = Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_lines_lots.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Num_Line, Lot_Number, Code_Account, Order_Date, Code_Product, Unit_Type_Sel, Unit_Type_Inv, Factor_Conversion, Quantity, &#xA;&#x9; Quantity_Unit, Transfered&#xA;     FROM prj_orders_lines_lots) as MOD &#xA;&#x9;&#x9;INNER JOIN prj_orders_lines_lots ON MOD.Order_Num = prj_orders_lines_lots.Order_Num and MOD.Num_Line = prj_orders_lines_lots.Num_Line &#xA;&#x9;&#x9;and MOD.Lot_Number = prj_orders_lines_lots.Lot_Number CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_orders_lines_lots SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_orders_lines_lots CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_orders_lines_lots inner join prj_orders_header on ERP_IMPLT_orders_lines_lots.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_lines_lots.Order_Num and ERP_IMPLT_orders_lines_lots.Num_Line = prj_orders_lines_lots.Num_Line&#xA;&#x9;&#x9;and ERP_IMPLT_orders_lines_lots.Lot_Number = prj_orders_lines_lots.Lot_Number and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_orders_lines_lots SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_orders_lines_lots CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_orders_lines_lots inner join prj_orders_header on ERP_IMPLT_orders_lines_lots.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_lines_lots.Order_Num and ERP_IMPLT_orders_lines_lots.Num_Line = prj_orders_lines_lots.Num_Line &#xA;&#x9;&#x9;and ERP_IMPLT_orders_lines_lots.Lot_Number = prj_orders_lines_lots.Lot_Number and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_orders_secuences"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_orders_secuences"
      DTS:DTSID="{7753B972-E4FB-4343-8526-53F5C2FDAC94}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_orders_secuences"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_orders_secuences (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Order_Num, Num_Line, Type, Secuence, Code_Table, Code_Account, &#xA;                      Code_Product, Orden, Value, Code_Currency, Unit_Measure, Exclusive, On_Base, Amount_Line, Type_Based, Use_Sec, Transfered, Ori_Value, Ori_Base)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;prj_orders_header.Order_Num, Num_Line, Type, Secuence, Code_Table, &#xA;&#x9;accounts.code as Code_Account, products.Code as Code_Product,  &#xA;&#x9;Orden, &#xA;&#x9;CASE WHEN right(Num_Line,1) &lt;&gt; '0'  THEN 0.00 ELSE Value&#xA;&#x9;END AS Value, &#xA;&#x9;ERP_IMPLT_orders_secuences.Code_Currency, Unit_Measure, &#xA;&#x9;Exclusive, On_Base, &#xA;&#x9;CASE WHEN right(Num_Line,1) &lt;&gt; '0'  THEN 0.00 ELSE Amount_Line&#xA;&#x9;END AS Amount_Line, &#xA;&#x9;Type_Based, Use_Sec, '1' as Transfered, &#xA;&#x9;CASE WHEN right(Num_Line,1) &lt;&gt; '0'  THEN 0.00 ELSE Ori_Value END AS Ori_Value, &#xA;&#x9;Ori_Base&#xA;FROM        ERP_IMPLT_orders_secuences inner join prj_orders_header &#xA;on ERP_IMPLT_orders_secuences.Order_Num = prj_orders_header.Order_Num&#xA;inner join Products on REPLACE(LTRIM(REPLACE(ERP_IMPLT_orders_secuences.Code_Product,'0',' ')),' ','0') &#xA;= Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_secuences.Code_Account = accounts.Code_ofClient&#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Order_Num, Num_Line, Secuence from prj_orders_secuences &#xA;where Order_Num = prj_orders_header.Order_Num and &#xA;Num_Line = ERP_IMPLT_orders_secuences.Num_Line and Type = ERP_IMPLT_orders_secuences.Type &#xA;and Secuence = ERP_IMPLT_orders_secuences.Secuence and Code_Table = ERP_IMPLT_orders_secuences.Code_Table)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_orders_secuences SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, Code_Product = MOD.Code_Product, Orden = MOD.Orden, Value = MOD.Value, Code_Currency = MOD.Code_Currency, Unit_Measure = MOD.Unit_Measure, &#xA;&#x9;&#x9;Exclusive = MOD.Exclusive, On_Base = MOD.On_Base, Amount_Line = MOD.Amount_Line, Type_Based = MOD.Type_Based, Use_Sec = MOD.Use_Sec, Transfered = MOD.Transfered, &#xA;&#x9;&#x9;Ori_Value = MOD.Ori_Value, Ori_Base = MOD.Ori_Base&#xA;FROM&#xA;(SELECT prj_orders_header.Order_Num, Num_Line, Type, Secuence, Code_Table, &#xA;accounts.code as Code_Account, products.Code as Code_Product,  &#xA;&#x9;Orden, &#xA;&#x9;CASE WHEN right(Num_Line,1) &lt;&gt; '0'  THEN 0.00 ELSE Value&#xA;&#x9;END AS Value,&#xA;&#x9;ERP_IMPLT_orders_secuences.Code_Currency, Unit_Measure, &#xA;&#x9;Exclusive, On_Base, CASE WHEN right(Num_Line,1) &lt;&gt; '0'  THEN 0.00 ELSE Amount_Line&#xA;&#x9;END AS Amount_Line, &#xA;&#x9;Type_Based, Use_Sec, '1' as Transfered, &#xA;&#x9;CASE WHEN right(Num_Line,1) &lt;&gt; '0'  THEN 0.00 ELSE Ori_Value END AS Ori_Value,  Ori_Base&#xA;FROM        ERP_IMPLT_orders_secuences inner join prj_orders_header &#xA;on ERP_IMPLT_orders_secuences.Order_Num = prj_orders_header.Order_Num&#xA;inner join Products on REPLACE(LTRIM(REPLACE(ERP_IMPLT_orders_secuences.Code_Product,'0',' ')),' ','0') &#xA;= Products.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_orders_secuences.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Order_Num, Num_Line, Type, Secuence, Code_Table, Code_Account, Code_Product, Orden, Value, Code_Currency, Unit_Measure, Exclusive, On_Base, &#xA;&#x9;&#x9;&#x9;Amount_Line, Type_Based, Use_Sec, Transfered, Ori_Value, Ori_Base&#xA;     FROM prj_orders_secuences) as MOD &#xA;&#x9;&#x9;INNER JOIN prj_orders_secuences ON MOD.Order_Num = prj_orders_secuences.Order_Num and MOD.Num_Line = prj_orders_secuences.Num_Line and MOD.Secuence = prj_orders_secuences.Secuence&#xA;&#x9;&#x9;and MOD.Type = prj_orders_secuences.Type and MOD.Code_Table = prj_orders_secuences.Code_Table CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_orders_secuences SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_orders_secuences CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_orders_header.Order_Num, Num_Line, Secuence, Type, Code_Table FROM ERP_IMPLT_orders_secuences inner join prj_orders_header on ERP_IMPLT_orders_secuences.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_secuences.Order_Num and ERP_IMPLT_orders_secuences.Num_Line = prj_orders_secuences.Num_Line and ERP_IMPLT_orders_secuences.Secuence = prj_orders_secuences.Secuence&#xA;&#x9;&#x9;&#x9;and ERP_IMPLT_orders_secuences.Type = prj_orders_secuences.Type and ERP_IMPLT_orders_secuences.Code_Table = prj_orders_secuences.Code_Table&#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_orders_secuences SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_orders_secuences CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_orders_header.Order_Num, Num_Line FROM ERP_IMPLT_orders_secuences inner join prj_orders_header on ERP_IMPLT_orders_secuences.Order_Num = prj_orders_header.Order_Num_ofClient &#xA;&#x9;&#x9;where prj_orders_header.Order_Num = prj_orders_secuences.Order_Num and ERP_IMPLT_orders_secuences.Num_Line = prj_orders_secuences.Num_Line and ERP_IMPLT_orders_secuences.Secuence = prj_orders_secuences.Secuence &#xA;&#x9;&#x9;and ERP_IMPLT_orders_secuences.Type = prj_orders_secuences.Type and ERP_IMPLT_orders_secuences.Code_Table = prj_orders_secuences.Code_Table and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_orders_type_user"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_orders_type_user"
      DTS:DTSID="{10BC7F00-D82C-4198-8A96-B38953967A50}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_orders_type_user"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO [dbo].[prj_orders_type_user]&#xA;           ([Platform]&#xA;           ,[Create_User]&#xA;           ,[Create_Date]&#xA;           ,[Modify_User]&#xA;           ,[Modify_Date]&#xA;           ,[Delete_User]&#xA;           ,[Delete_Date]&#xA;           ,[Code]&#xA;           ,[Code_User]&#xA;           ,[Code_Unit_Org]&#xA;           ,[Code_Sales_Org])&#xA;SELECT DISTINCT  View_System_Fields_ERP.Platform, View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;NULL AS Delete_User, NULL AS Delete_Date,&#xA;'ZCOT' AS Code, Code_User, Code_Unit_Org, Code_Sales_Org &#xA;FROM users_organizations_sellers &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT code, code_user, Code_Unit_Org, Code_Sales_Org &#xA;FROM prj_orders_type_user where prj_orders_type_user.Code_User = users_organizations_sellers.Code_User&#xA;AND prj_orders_type_user.Code_Sales_Org = users_organizations_sellers.Code_Sales_Org)&#xA;&#xA;UNION&#xA;&#xA;SELECT DISTINCT  View_System_Fields_ERP.Platform, View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;NULL AS Delete_User, NULL AS Delete_Date,&#xA;'ZDEV' AS Code, Code_User, Code_Unit_Org, Code_Sales_Org &#xA;FROM users_organizations_sellers CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT code, code_user, Code_Unit_Org, Code_Sales_Org &#xA;FROM prj_orders_type_user where prj_orders_type_user.Code_User = users_organizations_sellers.Code_User&#xA;AND prj_orders_type_user.Code_Sales_Org = users_organizations_sellers.Code_Sales_Org)&#xA;&#xA;UNION &#xA;&#xA;SELECT DISTINCT  View_System_Fields_ERP.Platform, View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;NULL AS Delete_User, NULL AS Delete_Date,&#xA;'ZOR' AS Code, Code_User, Code_Unit_Org, Code_Sales_Org &#xA;FROM users_organizations_sellers CROSS JOIN View_System_Fields_ERP&#xA;&#xA;WHERE not exists (SELECT code, code_user, Code_Unit_Org, Code_Sales_Org &#xA;FROM prj_orders_type_user where prj_orders_type_user.Code_User = users_organizations_sellers.Code_User&#xA;AND prj_orders_type_user.Code_Sales_Org = users_organizations_sellers.Code_Sales_Org)&#xA;&#xA;UNION&#xA;&#xA;SELECT DISTINCT  View_System_Fields_ERP.Platform, View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;NULL AS Delete_User, NULL AS Delete_Date,&#xA;'ZDC1' AS Code, Code_User, Code_Unit_Org, Code_Sales_Org &#xA;FROM users_organizations_sellers CROSS JOIN View_System_Fields_ERP&#xA;&#xA;WHERE not exists (SELECT code, code_user, Code_Unit_Org, Code_Sales_Org &#xA;FROM prj_orders_type_user where prj_orders_type_user.Code_User = users_organizations_sellers.Code_User&#xA;AND prj_orders_type_user.Code_Sales_Org = users_organizations_sellers.Code_Sales_Org)&#xA;&#xA;UNION&#xA;&#xA;SELECT DISTINCT  View_System_Fields_ERP.Platform, View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;NULL AS Delete_User, NULL AS Delete_Date,&#xA;'ZPR0' AS Code, Code_User, Code_Unit_Org, Code_Sales_Org &#xA;FROM users_organizations_sellers CROSS JOIN View_System_Fields_ERP&#xA;&#xA;WHERE not exists (SELECT code, code_user, Code_Unit_Org, Code_Sales_Org &#xA;FROM prj_orders_type_user where prj_orders_type_user.Code_User = users_organizations_sellers.Code_User&#xA;AND prj_orders_type_user.Code_Sales_Org = users_organizations_sellers.Code_Sales_Org)&#xA;GO&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_payment_accounts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3B6A8F3B-DC6F-4E23-9138-24AF318C9828}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_payment_accounts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO prj_accounts_payment_terms &#xA;(Create_User, Create_Date, Modify_User, Modify_Date, Platform, Delete_User, Delete_Date,&#xA;Code_Account, Code_Sales_Org, Code_Payment)&#xA;&#xA;SELECT distinct View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform, &#xA;NULL as Delete_User,&#xA;NULL as Delete_Date,&#xA;accounts.Code as Code_Account,&#xA;&#x9;Code_Sales_Org,&#xA;/*&#x9;CASE WHEN  Code_Payment = 'CA'&#xA;&#x9;THEN '01'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'CH'&#xA;&#x9;THEN '02'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'BT'&#xA;&#x9;THEN '03'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'ZD'&#xA;&#x9;THEN '04'&#xA;    ELSE CASE WHEN Code_Payment = 'CC'&#xA;&#x9;THEN '06'&#xA;    ELSE CASE WHEN Code_Payment = 'ZR'&#xA;&#x9;THEN  '07' END END END END END END AS Code_Payment*/&#xA;&#x9;Code_Payment&#xA;FROM  ERP_IMPLT_payment_accounts INNER JOIN accounts ON&#xA;accounts.Code_ofClient = ERP_IMPLT_payment_accounts.Code_Account&#xA;--and accounts.code = '180827095236101015'&#xA; CROSS JOIN view_System_Fields_ERP&#xA;WHERE not exists (SELECT DISTINCT Delete_Date,Code_Account, Code_Sales_Org, Code_Payment&#xA;from prj_accounts_payment_terms&#xA; where Code_Account = prj_accounts_payment_terms.Code_Account &#xA; AND Code_Sales_Org = prj_accounts_payment_terms.code_Sales_Org &#xA; AND Code_Payment = prj_accounts_payment_terms.Code_Payment &#xA; ) &#xA;GO&#xA;&#xA;/*&#xA;-- Modificación&#xA;UPDATE prj_accounts_payment_terms  SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;&#x9;&#x9;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;&#x9;&#x9;Delete_User = NULL, &#xA;&#x9;&#x9;Delete_Date = NULL, &#xA;&#x9;&#x9;Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Account = MOD.Code_Account, &#xA;&#x9;&#x9;Code_Sales_Org = MOD.Code_Sales_Org, &#xA;&#x9;&#x9;Code_Payment = MOD.Code_Payment &#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, Code_Sales_Org, &#xA;CASE WHEN  Code_Payment = 'CA'&#xA;&#x9;THEN '01'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'CH'&#xA;&#x9;THEN '02'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'BT'&#xA;&#x9;THEN '03'&#xA;&#x9;ELSE CASE WHEN Code_Payment = 'ZD'&#xA;&#x9;THEN '04'&#xA;    ELSE CASE WHEN Code_Payment = 'CC'&#xA;&#x9;THEN '06'&#xA;    ELSE CASE WHEN Code_Payment = 'ZR'&#xA;&#x9;THEN  '07' END END END END END END AS Code_Payment&#xA;FROM  ERP_IMPLT_payment_accounts INNER JOIN accounts ON&#xA;accounts.Code_ofClient = ERP_IMPLT_payment_accounts.Code_Account&#xA; CROSS JOIN view_System_Fields_ERP&#xA;EXCEPT &#xA;SELECT Code_Account, Code_Sales_Org, Code_Payment from prj_accounts_payment_terms&#xA; where Code_Account = prj_accounts_payment_terms.Code_Account AND&#xA; Code_Sales_Org = prj_accounts_payment_terms.code_Sales_Org) AS MOD&#xA; INNER JOIN prj_accounts_payment_terms ON &#xA; MOD.Code_Account = prj_accounts_payment_terms.Code_Account AND&#xA; MOD.Code_Sales_Org = prj_accounts_payment_terms.Code_Sales_Org&#xA; AND MOD.Code_Payment = prj_accounts_payment_terms.Code_Payment&#xA; CROSS JOIN View_System_Fields_ERP&#xA;GO&#xA;*/  " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_payment_terms"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_payment_terms"
      DTS:DTSID="{C7E79C9B-48C3-40D1-9AFD-C382058BEAE8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_payment_terms"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_payment_terms (Code, Code_Unit_Org, Code_Sales_Org, Description, Days, Credit, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Payment as Code, Code_Unit_Org, Code_Sales_Org, Code_Payment as Description, '0' as Days, '1' as Credit, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM        ERP_IMPLT_accounts_org&#xA;where not exists (SELECT Code, Code_Unit_Org, Code_Sales_Org FROM ERP_IMPLT_payment_terms where code = ERP_IMPLT_accounts_org.Code_Payment and Code_Unit_Org = ERP_IMPLT_accounts_org.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_org.Code_Sales_Org) &#xA;and not exists (SELECT Code, Code_Unit_Org, Code_Sales_Org FROM prj_payment_terms where code = ERP_IMPLT_accounts_org.Code_Payment and Code_Unit_Org = ERP_IMPLT_accounts_org.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_accounts_org.Code_Sales_Org) and Code_Payment is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO prj_payment_terms (Create_User, Create_Date, Modify_User, Modify_Date, Platform,  Code, Description, Days, Orden, Code_Unit_Org, &#xA;                      Code_Sales_Org, Credit, Days_EP, Discount)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, Days, 1 as Orden, Code_Unit_Org, Code_Sales_Org, Credit, 0 as Days_EP, 0 as Discount &#xA;FROM         ERP_IMPLT_payment_terms CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code, Credit, Days_EP, Discount FROM prj_payment_terms where code = prj_payment_terms.Code and Code_Unit_Org = prj_payment_terms.Code_Unit_Org &#xA;and Code_Sales_Org = prj_payment_terms.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_payment_terms SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description, Days = MOD.Days, Credit = MOD.Credit FROM&#xA;(SELECT  Code, Code_Unit_Org, Code_Sales_Org, Description, Days, Credit&#xA;FROM         ERP_IMPLT_payment_terms&#xA;EXCEPT&#xA;SELECT   Code, Code_Unit_Org, Code_Sales_Org, Description, Days, Credit&#xA;FROM         prj_payment_terms) as MOD INNER JOIN prj_payment_terms ON MOD.Code = prj_payment_terms.Code and MOD.Code_Unit_Org = prj_payment_terms.Code_Unit_Org &#xA;and MOD.Code_Sales_Org = prj_payment_terms.Code_Sales_Org CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_payment_terms SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_payment_terms CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_payment_terms where Code = prj_payment_terms.Code and Code_Unit_Org = prj_payment_terms.Code_Unit_Org &#xA;and Code_Sales_Org = prj_payment_terms.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_payment_terms SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_payment_terms CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_payment_terms where Code = prj_payment_terms.Code and Code_Unit_Org = prj_payment_terms.Code_Unit_Org &#xA;and Code_Sales_Org = prj_payment_terms.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_payment_terms CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_payment_terms CI"
      DTS:DTSID="{9B673B8A-BBCD-43A4-821F-B376D61A4E98}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_payment_terms CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="27">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_payment_terms SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_payment_terms CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_payment_terms where Code = prj_payment_terms.Code and Code_Unit_Org = prj_payment_terms.Code_Unit_Org &#xA;and Code_Sales_Org = prj_payment_terms.Code_Sales_Org) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_price_list"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_price_list"
      DTS:DTSID="{253B2F7E-DF7C-4CC1-A748-C711B021E63D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_price_list"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_price_list (Code, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Price_list as Code, Code_Price_list as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts_org&#xA;where not exists (SELECT Code FROM ERP_IMPLT_Price_list where code = ERP_IMPLT_accounts_org.Code_Price_List)  &#xA;and not exists (SELECT Code FROM prj_Price_list where code = ERP_IMPLT_accounts_org.Code_Price_List) and Code_Price_list is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO prj_price_list (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_price_list CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM prj_price_list where Code = ERP_IMPLT_price_list.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_price_list SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Description&#xA;FROM         ERP_IMPLT_price_list&#xA;EXCEPT&#xA;SELECT     Code, Description&#xA;FROM         prj_price_list) as MOD INNER JOIN prj_price_list ON MOD.Code = prj_price_list.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_price_list SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_price_list CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_price_list where Code = prj_price_list.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_price_list SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_price_list CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_price_list where Code = prj_price_list.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_price_list CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_price_list CI"
      DTS:DTSID="{84135D87-0D28-4F8C-860E-FAFF28A596E1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_price_list CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="28">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_price_list SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_price_list CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_price_list where Code = prj_price_list.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_pricing_tables"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_pricing_tables"
      DTS:DTSID="{7A90BC8D-2E91-4CDE-9336-CBE53F05942B}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_pricing_tables"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_pricing_tables (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Secuence, Code_Table, ValueKey, Code1, Code2, Code3, &#xA;                      Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_Fin, Price_Min, Price_Max, ID_ERP, Type_Based, Code_Currency, Unit_Measure)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Secuence, Code_Table, ValueKey, Code1, Code2, Code3, Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_End, &#xA;&#x9;NULL as Price_Min, NULL as Price_Max, ID_ERP, Type_Based, Code_Currency, Unit_Measure&#xA;FROM        ERP_IMPLT_pricing_tables CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin from prj_pricing_tables where Secuence = ERP_IMPLT_pricing_tables.Secuence and &#xA;Code_Table = ERP_IMPLT_pricing_tables.Code_Table and ValueKey = ERP_IMPLT_pricing_tables.ValueKey and Date_Ini = ERP_IMPLT_pricing_tables.Date_Ini and Date_Fin = ERP_IMPLT_pricing_tables.Date_End)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_pricing_tables SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code1 = MOD.Code1, Code2 = MOD.Code2, Code3 = MOD.Code3, Code4 = MOD.Code4, Code5 = MOD.Code5, Code6 = MOD.Code6, Code7 = MOD.Code7, Code8 = MOD.Code8, &#xA;&#x9;&#x9;Value = MOD.Value, Base = MOD.Base, ID_ERP = MOD.ID_ERP, Type_Based = MOD.Type_Based, &#xA;&#x9;&#x9;Code_Currency = MOD.Code_Currency, Unit_Measure = MOD.Unit_Measure&#xA;FROM&#xA;(SELECT Secuence, Code_Table, ValueKey, Code1, Code2, Code3, Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_End as Date_Fin, &#xA;&#x9; ID_ERP, Type_Based, Code_Currency, Unit_Measure&#xA;FROM        ERP_IMPLT_pricing_tables&#xA;     EXCEPT&#xA;     SELECT  Secuence, Code_Table, ValueKey, Code1, Code2, Code3, Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_Fin, &#xA;&#x9;ID_ERP, Type_Based, Code_Currency, Unit_Measure&#xA;FROM         prj_pricing_tables) as MOD INNER JOIN prj_pricing_tables ON MOD.Secuence = prj_pricing_tables.Secuence and MOD.Code_Table = prj_pricing_tables.Code_Table &#xA;and MOD.ValueKey = prj_pricing_tables.ValueKey and MOD.Date_Ini = prj_pricing_tables.Date_Ini and MOD.Date_Fin = prj_pricing_tables.Date_Fin&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_pricing_tables SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_pricing_tables CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin FROM ERP_IMPLT_pricing_tables &#xA;&#x9;&#x9;where Secuence = prj_pricing_tables.Secuence and Code_Table = prj_pricing_tables.Code_Table and ValueKey = prj_pricing_tables.ValueKey &#xA;&#x9;&#x9;and Date_Ini = prj_pricing_tables.Date_Ini and Date_Fin = prj_pricing_tables.Date_Fin and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_pricing_tables SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_pricing_tables CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin FROM ERP_IMPLT_pricing_tables &#xA;&#x9;&#x9;where Secuence = prj_pricing_tables.Secuence and Code_Table = prj_pricing_tables.Code_Table and ValueKey = prj_pricing_tables.ValueKey &#xA;&#x9;&#x9;and Date_Ini = prj_pricing_tables.Date_Ini and Date_Fin = prj_pricing_tables.Date_Fin and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_pricing_tables CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_pricing_tables CI"
      DTS:DTSID="{938D808C-859C-48C2-8D39-1CB4241D9DEC}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_pricing_tables CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="23">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_pricing_tables SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_pricing_tables CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin FROM ERP_IMPLT_pricing_tables &#xA;&#x9;&#x9;where Secuence = prj_pricing_tables.Secuence and Code_Table = prj_pricing_tables.Code_Table and ValueKey = prj_pricing_tables.ValueKey &#xA;&#x9;&#x9;and Date_Ini = prj_pricing_tables.Date_Ini and Date_Fin = prj_pricing_tables.Date_Fin) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_pricing_tables Mantenimiento"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_pricing_tables Mantenimiento"
      DTS:DTSID="{A0C0F9BA-5A9C-4B50-B7C7-46497D6C450E}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_pricing_tables Mantenimiento"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Proceso especial: Ponemos de baja todos los registros que tengan el mismo ID_ERP de los datos que hemos recibido&#xA;-- Esto se hace porque normalmente no coinciden las claves, y pueden cambiar la fecha inicial o final como si no fueran claves&#xA;-- Esto NO se puede hacer si el pricing es de carga inicial porque bajarían todos los días todos los registros a los terminales&#xA;UPDATE prj_pricing_tables SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_pricing_tables CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_pricing_tables.ID_ERP FROM ERP_IMPLT_pricing_tables&#x9;where ID_ERP = prj_pricing_tables.ID_ERP)&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_pricing_tables_esc"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{89AA7671-FA48-4A77-9A54-29BBDF114B76}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_pricing_tables_esc"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_pricing_tables_esc (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Secuence, &#xA;Code_Table, Quantity, ValueKey, Code1, Code2, Code3, &#xA;                      Code4, Code5, Code6, Code7, Code8, Value, Base, Date_Ini, Date_Fin, Price_Min, Price_Max, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  ID_ERP, Type_Based, Code_Currency, Unit_Measure)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Secuence, Code_Table, &#xA;&#x9;convert(decimal(15,3),Quantity_ini) AS Quantity,&#xA;&#x9;ValueKey, Code1, Code2, Code3, Code4, Code5, Code6, Code7, Code8, &#xA;&#x9;convert(decimal(15,3),Value) AS Value, &#xA;&#x9;Base, Date_Ini, Date_Fin, &#xA;&#x9;Price_Min, &#xA;&#x9;Price_Max, &#xA;&#x9;ID_ERP, '1' AS Type_Based, Code_Currency, Unit_Measure&#xA;FROM        ERP_IMPLT_pricing_esc CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin &#xA;from prj_pricing_tables_esc where Secuence = ERP_IMPLT_pricing_esc.Secuence and &#xA;Code_Table = ERP_IMPLT_pricing_esc.Code_Table and ValueKey = ERP_IMPLT_pricing_esc.ValueKey &#xA;and Date_Ini = ERP_IMPLT_pricing_esc.Date_Ini and Date_Fin = ERP_IMPLT_pricing_esc.Date_Fin)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_pricing_tables_esc SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;&#x9;&#x9;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Quantity = MOD.Quantity,&#xA;&#x9;&#x9;Code1 = MOD.Code1, Code2 = MOD.Code2, Code3 = MOD.Code3, Code4 = MOD.Code4, &#xA;&#x9;&#x9;Code5 = MOD.Code5, Code6 = MOD.Code6, Code7 = MOD.Code7, Code8 = MOD.Code8, &#xA;&#x9;&#x9;Value = MOD.Value, Base = MOD.Base, ID_ERP = MOD.ID_ERP, Type_Based = MOD.Type_Based, &#xA;&#x9;&#x9;Code_Currency = MOD.Code_Currency, Unit_Measure = MOD.Unit_Measure&#xA;FROM&#xA;(SELECT Secuence, Code_Table, Quantity_ini AS Quantity, ValueKey, Code1, Code2, Code3, Code4, Code5, Code6, Code7, Code8, &#xA;Value, Base, Date_Ini, Date_Fin, &#xA;&#x9; ID_ERP, '1' AS Type_Based, Code_Currency, Unit_Measure&#xA;FROM        ERP_IMPLT_pricing_esc&#xA;     EXCEPT&#xA;     SELECT  Secuence, Code_Table, Quantity, ValueKey, Code1, Code2, Code3, Code4, Code5, Code6, Code7, Code8, &#xA;&#x9; Value, Base, Date_Ini, Date_Fin, &#xA;&#x9;ID_ERP, Type_Based, Code_Currency, Unit_Measure&#xA;FROM         prj_pricing_tables_esc) as MOD INNER JOIN prj_pricing_tables_esc &#xA;ON MOD.Secuence = prj_pricing_tables_esc.Secuence and MOD.Code_Table = prj_pricing_tables_esc.Code_Table &#xA;and MOD.ValueKey = prj_pricing_tables_esc.ValueKey and MOD.Date_Ini = prj_pricing_tables_esc.Date_Ini &#xA;and MOD.Date_Fin = prj_pricing_tables_esc.Date_Fin&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_pricing_tables_esc SET Delete_Date = View_System_Fields_ERP.Create_Date, &#xA;Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_pricing_tables_esc CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin FROM ERP_IMPLT_pricing_esc &#xA;&#x9;&#x9;where Secuence = prj_pricing_tables_esc.Secuence and Code_Table = prj_pricing_tables_esc.Code_Table &#xA;&#x9;&#x9;and ValueKey = prj_pricing_tables_esc.ValueKey &#xA;&#x9;&#x9;and Date_Ini = prj_pricing_tables_esc.Date_Ini and Date_Fin = prj_pricing_tables_esc.Date_Fin &#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_pricing_tables_esc SET Modify_Date = View_System_Fields_ERP.Modify_Date,&#xA;Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_pricing_tables_esc CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Secuence, Code_Table, ValueKey, Date_Ini, Date_Fin &#xA;FROM ERP_IMPLT_pricing_esc &#xA;&#x9;&#x9;where Secuence = prj_pricing_tables_esc.Secuence and Code_Table = prj_pricing_tables_esc.Code_Table &#xA;&#x9;&#x9;and ValueKey = prj_pricing_tables_esc.ValueKey &#xA;&#x9;&#x9;and Date_Ini = prj_pricing_tables_esc.Date_Ini and Date_Fin = prj_pricing_tables_esc.Date_Fin &#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_assor"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{FF2E5BAA-C711-4582-B67F-D72E2805E043}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_assor"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO prj_products_assor(&#xA;      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User,&#xA;      Delete_Date, Platform, Code,&#xA;&#x9;&#x9;&#x9;&#x9;Description,&#xA;&#x9;&#x9;&#x9;&#x9;Date_Ini,&#xA;&#x9;&#x9;&#x9;    Date_End,&#xA;&#x9;&#x9;&#x9;&#x9;Active) &#xA; SELECT distinct View_System_Fields_ERP.Create_User, &#xA;                View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_Date,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_User,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_Date,&#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Platform,  &#xA;&#x9;&#x9;&#x9;&#x9;Code_Product AS Code,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Description,&#xA;&#x9;&#x9;&#x9;&#x9;LEFT(View_System_Fields_ERP.Modify_Date, 8)  AS Date_Ini,&#xA;&#x9;&#x9;&#x9;&#x9;'99999999' AS Date_End,&#xA;&#x9;&#x9;&#x9;&#x9;'1' AS Active&#xA;  FROM ERP_IMPLT_products_exc CROSS JOIN View_System_Fields_ERP&#xA;  WHERE not exists (SELECT Code&#xA;    FROM prj_products_assor WHERE ERP_IMPLT_products_exc.Code_Product = prj_products_assor.Code)&#xA;GO&#xA;&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_assor SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code = MOD.Code,&#xA;Description = MOD.Description,&#xA;Date_Ini = MOD.Date_Ini,&#xA;Date_End = MOD.Date_End,&#xA;Active = MOD.Active&#xA;FROM&#xA;(SELECT Code_Product AS Code,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Description,&#xA;&#x9;&#x9;&#x9;&#x9;LEFT(View_System_Fields_ERP.Modify_Date, 8)  AS Date_Ini,&#xA;&#x9;&#x9;&#x9;&#x9;'99999999' AS Date_End,&#xA;&#x9;&#x9;&#x9;&#x9;'1' AS Active&#xA;  FROM ERP_IMPLT_products_exc CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT Code,&#xA;&#x9;&#x9;&#x9;&#x9;Description,&#xA;&#x9;&#x9;&#x9;&#x9;Date_Ini,&#xA;&#x9;&#x9;&#x9;    Date_End,&#xA;&#x9;&#x9;&#x9;&#x9;Active FROM prj_products_assor) AS MOD INNER JOIN prj_products_assor ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code = prj_products_Assor.Code&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_assor_det"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{F8C5533B-D590-43AD-AFA3-8D46E77AC358}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_assor_det"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO prj_products_assor_det(&#xA;      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User,&#xA;      Delete_Date, Platform, &#xA;&#x9;            Code,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Product,&#xA;&#x9;&#x9;&#x9;&#x9;Orden,&#xA;&#x9;&#x9;&#x9;&#x9;Excluded) &#xA; SELECT distinct View_System_Fields_ERP.Create_User, &#xA;                View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_Date,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_User,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_Date,&#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Platform,  &#xA;&#x9;&#x9;&#x9;&#x9;code_Product as Code,&#xA;&#x9;&#x9;&#x9;&#x9; products.code AS Code_Product,&#xA;&#x9;&#x9;&#x9;&#x9; NULL AS Orden,&#xA;&#x9;&#x9;&#x9;&#x9; NULL AS Excluded&#xA;  FROM ERP_IMPLT_products_exc INNER JOIN ERP_IMPLT_products &#xA;  ON ERP_IMPLT_products_exc.Code_Product = ERP_IMPLT_products.Code_ofClient&#xA;  INNER JOIN products ON products.Code_ofClient = ERP_IMPLT_products_exc.Code_Product CROSS JOIN View_System_Fields_ERP&#xA;  WHERE not exists &#xA;    (SELECT Code, Code_Product&#xA;    FROM prj_products_assor_det &#xA;&#x9;WHERE products.Code = prj_products_assor_det.Code_Product&#xA;&#x9;AND products.Code_ofClient = prj_products_assor_det.Code&#xA;&#x9;)&#xA;&#x9;&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_assor_det SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code = MOD.Code,&#xA;Code_Product = MOD.Code_Product,&#xA;Orden = MOD.Orden,&#xA;Excluded = MOD.Exluded&#xA;FROM&#xA;(SELECT Code_Product AS Code,&#xA;products.code AS Code_Product,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Orden,&#xA;&#x9;&#x9;&#x9;&#x9; NULL AS Exluded&#xA;  FROM ERP_IMPLT_products_exc &#xA;  INNER JOIN products ON products.Code_ofClient = ERP_IMPLT_products_exc.Code_Product &#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT Code,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Product,&#xA;&#x9;&#x9;&#x9;&#x9;Orden,&#xA;&#x9;&#x9;&#x9;    Excluded&#xA;&#x9;&#x9;&#x9;&#x9;FROM prj_products_assor_det) AS MOD INNER JOIN prj_products_assor_det ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code = prj_products_Assor_det.Code&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_assor_sel"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{71A03047-1A15-4AF0-9C77-8B3CD9655049}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_assor_sel"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO prj_products_assor_sel(&#xA;      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User,&#xA;      Delete_Date, Platform, &#xA;&#x9;            Code,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Seller) &#xA; SELECT distinct View_System_Fields_ERP.Create_User, &#xA;                View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_Date,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_User,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_Date,&#xA;&#x9;&#x9;&#x9;&#x9; View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;&#x9;&#x9; Code_Product AS Code,&#xA;&#x9;&#x9;&#x9;&#x9;Sellers.Code AS Code_Seller&#xA;   FROM ERP_IMPLT_products_exc INNER JOIN ERP_IMPLT_products &#xA;  ON ERP_IMPLT_products_exc.Code_Product = ERP_IMPLT_products.Code_ofClient&#xA;  INNER JOIN sellers ON sellers.Code_ofClient = ERP_IMPLT_products_exc.Code_Product CROSS JOIN View_System_Fields_ERP&#xA;  WHERE not exists (SELECT Code, Code_Product&#xA;    FROM prj_products_assor_det &#xA;&#x9;WHERE ERP_IMPLT_products_exc.Code_Product = prj_products_assor_det.Code_Product&#xA;&#x9;AND ERP_IMPLT_products_exc.Code_Route = prj_products_assor_det.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_assor_sel SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code = MOD.Code,&#xA;Code_Seller = MOD.Code_Seller&#xA;FROM&#xA;(SELECT Code_Product AS Code,&#xA;&#x9;&#x9;Code_Sales_Org AS Code_Seller&#xA;  FROM ERP_IMPLT_products_exc CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT Code,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Seller FROM prj_products_assor_sel) AS MOD INNER JOIN prj_products_assor_sel ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code = prj_products_Assor_sel.Code&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_control"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_products_control"
      DTS:DTSID="{3766FCDC-EAEE-4A55-9A56-CF80E9EA0D8B}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_products_control (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Control1, Control2, Control3, Control4, &#xA;                      Control5, Control6, Control7, Control8, Control9, Control10, Control11, Control12, Control13, Control14)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;products.Code, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11, Control12, &#xA;&#x9;Control13, Control14&#xA;FROM        ERP_IMPLT_product_control inner join products on ERP_IMPLT_product_control.Code_product = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from prj_products_control where Code = products.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_control SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Control1 = MOD.Control1, Control2 = MOD.Control2, Control3 = MOD.Control3, Control4 = MOD.Control4, Control5 = MOD.Control5, Control6 = MOD.Control6, &#xA;&#x9;&#x9;Control7 = MOD.Control7, Control8 = MOD.Control8, Control9 = MOD.Control9, Control10 = MOD.Control10, Control11 = MOD.Control11, Control12 = MOD.Control12, &#xA;&#x9;&#x9;Control13 = MOD.Control13, Control14 = MOD.Control14&#xA;FROM&#xA;(SELECT  products.Code as Code_Product, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11, Control12, &#xA;&#x9;Control13, Control14&#xA;FROM   ERP_IMPLT_product_control inner join products on ERP_IMPLT_product_control.Code_product = products.Code_ofClient &#xA;     EXCEPT&#xA;     SELECT  Code, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11, &#xA;&#x9; Control12, Control13, Control14&#xA;FROM         prj_products_control) as MOD INNER JOIN prj_products_control ON MOD.Code_product = prj_products_control.Code&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_products_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_product_control.Code_product FROM ERP_IMPLT_product_control inner join products on ERP_IMPLT_product_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_control.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_products_control SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_products_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_product_control.Code_product FROM ERP_IMPLT_product_control inner join products on ERP_IMPLT_product_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_control.Code&#x9;and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_control CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_products_control CI"
      DTS:DTSID="{4503F086-D4F6-4153-B37D-EE39F33CEB8C}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_control CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="20">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_products_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_product_control.Code_product FROM ERP_IMPLT_product_control inner join products on ERP_IMPLT_product_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_control.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_tax"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_products_tax"
      DTS:DTSID="{169889F5-0E4B-4A79-9EF2-9952113ED4A5}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_tax"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_products_tax (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_product, Code_Country, Type, TaxClassification)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;products.Code as Code_product, 'RD' AS Code_Country, Type, TaxClassification&#xA;FROM        ERP_IMPLT_products_tax inner join products on ERP_IMPLT_products_tax.Code_product = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists &#xA;(SELECT Code_product, Code_Country, Type from prj_products_tax &#xA;where Code_product = products.Code and Type = ERP_IMPLT_products_tax.Type)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_tax SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;TaxClassification = MOD.TaxClassification&#xA;FROM&#xA;(SELECT  products.Code as Code_product, ERP_IMPLT_products_tax.Code_Country, Type, TaxClassification&#xA;     FROM   ERP_IMPLT_products_tax inner join products on ERP_IMPLT_products_tax.Code_product = products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_product, Code_Country, Type, TaxClassification&#xA;FROM         prj_products_tax) as MOD INNER JOIN prj_products_tax ON MOD.Code_product = prj_products_tax.Code_product and MOD.Code_Country = prj_products_tax.Code_Country and MOD.Type = prj_products_tax.Type&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_products_tax SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_tax.Code_product FROM ERP_IMPLT_products_tax inner join products on ERP_IMPLT_products_tax.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_tax.Code_product and ERP_IMPLT_products_tax.Code_Country = prj_products_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_products_tax.Type = prj_products_tax.Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_products_tax SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_products_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_tax.Code_product FROM ERP_IMPLT_products_tax inner join products on ERP_IMPLT_products_tax.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_tax.Code_product and ERP_IMPLT_products_tax.Code_Country = prj_products_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_products_tax.Type = prj_products_tax.Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_products_tax CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_products_tax CI"
      DTS:DTSID="{1C4FF5DA-7388-4587-A05F-7AFB4BEA74E2}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_products_tax CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="21">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_products_tax SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_tax CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_products_tax.Code_product FROM ERP_IMPLT_products_tax inner join products on ERP_IMPLT_products_tax.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = prj_products_tax.Code_product and ERP_IMPLT_products_tax.Code_Country = prj_products_tax.Code_Country &#xA;&#x9;&#x9;and ERP_IMPLT_products_tax.Type = prj_products_tax.Type) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_promotions_destiny"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5CE9EDB1-5AB1-4EBB-9454-835C5C901A34}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_promotions_destiny"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="--PROMOTIONS DESTINY&#xA;-- Alta&#xA;INSERT INTO prj_promotions_destiny &#xA;&#x9;&#x9;&#x9;( Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, Code, Code_Promo, Code_Variable)&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9; Code_Entity AS Code,&#xA;prj_promotions_head.Code AS Code_promo,&#xA;Code_Variable&#xA;  FROM ERP_IMPLT_promotions_destiny &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_destiny.Code_promo&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT prj_promotions_destiny.Code_Promo &#xA;FROM prj_promotions_destiny &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE Code_Promo = prj_promotions_head.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_destiny SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Code = MOD.Code,&#xA;Code_Promo = MOD.Code_Promo,&#xA;Code_Variable = MOD.Code_Variable&#xA;FROM&#xA;(SELECT  DISTINCT &#xA;&#x9; &#xA;&#x9; Code_Entity AS Code,&#xA;prj_promotions_head.Code AS Code_promo,&#xA;Code_Variable&#xA;  FROM ERP_IMPLT_promotions_destiny &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_destiny.Code_promo&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code,&#xA;Code_Promo, Code_Variable&#xA;&#x9;  FROM    prj_promotions_destiny     ) as MOD INNER JOIN prj_promotions_destiny ON&#xA;MOD.Code_Promo = prj_promotions_destiny.Code_Promo&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_promotions_head"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0D8C1EE0-6E74-4770-A090-9102D2797D9F}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_promotions_head"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_promotions_head&#xA;&#x9;&#x9;&#x9;(Platform, Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Code_Type_Apply, Code_ofClient, Head_Line, Apply_Gift, Apply_Val, Head_Table, Code,&#xA;&#x9;&#x9;&#x9;Description, Date_Ini, Date_End, Apply_to, Type, Order_Apply, Cumulative, Quantity_from,&#xA;            Quantity_Mult, Maximun_Gift, Price_Gift, &#xA;&#x9;&#x9;&#x9;Per_Client, Price_List, Condition_List, Code_Currency, Modificable, Activable, Quantity_Ini,&#xA;&#x9;&#x9;&#x9;Quantity_Fin, Only_OneTime, Quantity_Gift, Code_Type_Client)&#xA;&#x9;&#x9;&#x9;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;      View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  Code_Type_Apply,&#xA;&#x9;   Code_ofClient,&#xA;Head_Line,&#xA;Apply_Gift,&#xA;Apply_Val,&#xA;Head_Table,&#xA;&#x9;  convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;&#x9;  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_promotions_head.Code_OfClient) &#xA;&#x9;  + 100000 as varchar(8)) as Code,&#xA;      ERP_IMPLT_promotions_head.Description,&#xA;      ERP_IMPLT_promotions_head.Date_Ini,&#xA;      ERP_IMPLT_promotions_head.Date_End,&#xA;&#x9; Apply_To,&#xA;&#x9; Type,&#xA;Order_Apply,&#xA;Cumulative,&#xA;       Quantity_from,&#xA;       Quantity_Mult,&#xA;      '999999' AS Maximun_Gift,&#xA;       Price_Gift,&#xA;      '-1' AS Per_Client,&#xA;      NULL AS Price_List,&#xA;      NULL AS Condition_List,&#xA;      NULL AS Code_Currency,&#xA;      '0' AS Modificable,&#xA;      '1' AS Activable,&#xA;  &#x9;Quantity_Ini,&#xA;      Quantity_Fin,&#xA;&#x9;  Only_OneTime, Quantity_Gift, Code_Type_Client&#xA;  FROM ERP_IMPLT_promotions_head CROSS JOIN View_System_Fields_ERP&#xA;&#x9;  WHERE NOT EXISTS (SELECT Code_ofClient, Date_Ini, Date_End&#xA;FROM prj_promotions_head &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE Code_ofClient = ERP_IMPLT_promotions_head.Code_ofClient)&#xA;&#x9;   &#xA;     &#xA;&#xA;-------------------------------------------------------------------------------------------------------------------------&#xA;-------------------------------------------------------------------------------------------------------------------------&#xA;--ACTUALIZACION&#xA;--prj_promotions_head&#xA;-- Modificación&#xA;UPDATE prj_promotions_head SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;code_ofClient = MOD.Code_ofClient,&#xA; --     ERP_IMPLT_promotions_head.Code_Account as Code_ofClient,&#xA;     Description = MOD.Description,&#xA;      Date_Ini = MOD.Date_Ini,&#xA;      Date_End = MOD.Date_End,&#xA;&#x9; Apply_to = MOD.Apply_To,&#xA;&#x9; Price_Gift = MOD.Price_Gift,&#xA;Type = MOD.Type, &#xA;Order_Apply = MOD.Order_Apply,&#xA;Quantity_from = MOD.Quantity_from,&#xA;Quantity_Mult = MOD.Quantity_Mult,&#xA;Quantity_Ini = MOD.Quantity_Ini ,&#xA;      Quantity_Fin = MOD.Quantity_Fin,&#xA;&#x9;  Only_OneTime = MOD.Only_OneTime,&#xA;&#x9;  Quantity_Gift = MOD.Quantity_Gift,&#xA;&#x9;  Code_Type_Client = MOD.Code_Type_Client&#xA;   FROM&#xA;(SELECT  DISTINCT &#xA;&#x9;  Code_ofClient,&#xA; &#xA;&#x9;  ERP_IMPLT_promotions_head.Description,&#xA;      ERP_IMPLT_promotions_head.Date_Ini,&#xA;      ERP_IMPLT_promotions_head.Date_End,&#xA;Apply_To, Price_Gift,&#xA;Type, Order_Apply,&#xA;&#x9;  Quantity_from,&#xA;      Quantity_Mult, &#x9;Quantity_Ini,&#xA;      Quantity_Fin, Only_OneTime, Quantity_Gift, Code_Type_Client&#xA;&#xA;  FROM ERP_IMPLT_promotions_head &#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT code_ofClient,&#xA;     Description ,&#xA;      Date_Ini ,&#xA;      Date_End ,&#xA;&#x9; Apply_to , Price_Gift,&#xA;Type , Order_Apply,  Quantity_from, Quantity_Mult, &#x9;Quantity_Ini,&#xA;      Quantity_Fin, Only_OneTime, Quantity_Gift, Code_Type_Client&#xA;FROM prj_promotions_head) AS MOD INNER JOIN prj_promotions_head ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code_ofClient = prj_promotions_head.Code_ofClient&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_promotions_hier_gift"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{84A4959B-C977-44AD-9562-1539CBEB9E28}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_promotions_hier_gift"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO prj_promotions_hier_gift(&#xA;      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User,&#xA;      Delete_Date, Platform, &#xA;&#x9;  Code_Promotion,&#xA;      Code_Entity,&#xA;      Quantity_Gift,&#xA;      Maximun_Gift,&#xA;      Price_Gift,&#xA;      Unit_Sales,&#xA;      Code_Currency)&#xA; SELECT distinct View_System_Fields_ERP.Create_User, &#xA;                View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_Date,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_User,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;&#x9;&#x9;prj_promotions_head.Code AS Code_Promotion,&#xA;right(Code_Entity,12) AS Code_Entity,&#xA;&#x9;&#x9;&#x9;&#x9;ERP_IMPLT_promotions_hier_gift.Quantity_Gift AS Quantity_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;'999999' AS Maximun_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Price_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;ERP_IMPLT_promotions_hier_gift.Unit_Sales AS Unit_Sales,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Code_Currency --Traer de prj_currency&#xA;  FROM ERP_IMPLT_promotions_hier_gift &#xA;  INNER JOIN prj_promotions_head&#xA;ON ERP_IMPLT_promotions_hier_gift.Code_Promotion = prj_promotions_head.Code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  WHERE not exists (SELECT Code_Promotion, Code_Entity&#xA;    FROM prj_promotions_hier_gift&#xA;&#x9;WHERE ERP_IMPLT_promotions_hier_gift.Code_Entity = prj_promotions_hier_gift.Code_Entity)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_hier_gift SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code_Promotion = MOD.Code_Promotion,&#xA;Code_Entity = MOD.Code_Entity,&#xA;Quantity_Gift = MOD.Quantity_Gift,&#xA;Maximun_Gift = MOD.Maximun_Gift,&#xA;Price_Gift = MOD.Price_Gift,&#xA;Unit_Sales = MOD.Unit_Sales,&#xA;Code_Currency = MOD.Code_Currency&#xA;FROM&#xA;(SELECT prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;&#x9;&#x9;right(Code_Entity,12) AS Code_Entity,&#xA;&#x9;&#x9;&#x9;&#x9;ERP_IMPLT_promotions_hier_gift.Quantity_Gift AS Quantity_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;'999999' AS Maximun_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Price_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;ERP_IMPLT_promotions_hier_gift.Unit_Sales AS Unit_Sales,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Code_Currency --Traer de prj_currency&#xA;   FROM ERP_IMPLT_promotions_hier_gift &#xA;  INNER JOIN prj_promotions_head&#xA;ON ERP_IMPLT_promotions_hier_gift.Code_Promotion = prj_promotions_head.Code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT Code_Promotion,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Entity,&#xA;&#x9;&#x9;&#x9;&#x9;Quantity_Gift,&#xA;&#x9;&#x9;&#x9;    Maximun_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;Price_Gift,&#xA;&#x9;&#x9;&#x9;&#x9;Unit_Sales,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Currency FROM prj_promotions_hier_gift) AS MOD INNER JOIN prj_promotions_hier_gift ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code_Promotion = prj_promotions_hier_gift.Code_Promotion AND &#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code_Entity = prj_promotions_hier_gift.Code_Entity&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_promtions_hierarchy"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{618F40C2-7D68-4AE8-A3E3-326B71148320}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_promtions_hierarchy"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO prj_promotions_hierarchy(&#xA;      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User,&#xA;      Delete_Date, Platform, &#xA;&#x9;  Code_Promotion, &#xA;&#x9;  Code_Entity,&#xA;      Unit_Sales,&#xA;      Quantity)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, &#xA;                View_System_Fields_ERP.Create_Date, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_User, &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Modify_Date,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_User,&#xA;&#x9;&#x9;&#x9;&#x9;NULL AS Delete_Date,  &#xA;&#x9;&#x9;&#x9;&#x9;View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;&#x9;&#x9; prj_promotions_head.code as Code_Promotion,&#xA;right(code_entity,12) AS &#x9;   Code_Entity,&#x9;&#x9;&#x9;&#xA; ERP_IMPLT_promotions_hierarchy.Unit_Sales AS Unit_Sales,&#xA;&#x9;&#x9;&#x9;&#x9;Quantity&#xA;  FROM ERP_IMPLT_promotions_hierarchy &#xA;  INNER JOIN prj_promotions_head&#xA;ON ERP_IMPLT_promotions_hierarchy.Code_Promotion = prj_promotions_head.Code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;&#xA;   WHERE NOT EXISTS (SELECT Code_Promotion&#xA;FROM prj_promotions_hierarchy &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE prj_promotions_head.code = prj_promotions_hierarchy.Code_Promotion)&#xA;  &#xA;-- Modificación&#xA;UPDATE prj_promotions_hierarchy SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Code_Promotion = MOD.Code_Promotion,&#xA;Code_Entity = MOD.Code_Entity,&#xA;Unit_Sales = MOD.Unit_Sales,&#xA;Quantity = MOD.Quantity&#xA;FROM&#xA;(SELECT prj_promotions_head.code as Code_Promotion,&#xA;right(code_entity,12) AS Code_Entity,&#xA;ERP_IMPLT_promotions_hierarchy.Unit_Sales AS Unit_Sales,&#xA;&#x9;&#x9;&#x9;&#x9;Quantity&#xA;  FROM ERP_IMPLT_promotions_hierarchy &#xA;  INNER JOIN prj_promotions_head&#xA;ON ERP_IMPLT_promotions_hierarchy.Code_Promotion = prj_promotions_head.Code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  EXCEPT &#xA;  SELECT Code_Promotion,&#xA;&#x9;&#x9;&#x9;&#x9;Code_Entity,&#xA;&#x9;&#x9;&#x9;&#x9;Unit_Sales,&#xA;&#x9;&#x9;&#x9;    Quantity FROM prj_promotions_hierarchy) AS MOD INNER JOIN prj_promotions_hierarchy ON&#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code_Promotion = prj_promotions_hierarchy.Code_Promotion AND &#xA;&#x9;&#x9;&#x9;&#x9;MOD.Code_Entity = prj_promotions_hierarchy.Code_Entity&#xA;&#x9;&#x9;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_return_cause"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{848AC6A2-F351-4712-8F91-7F704A47CCD3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_return_cause"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO [dbo].[prj_return_cause]&#xA;           ([Create_User]&#xA;           ,[Create_Date]&#xA;           ,[Modify_User]&#xA;           ,[Modify_Date]&#xA;           ,[Platform]&#xA;           ,[Code]&#xA;           ,[Description]&#xA;           ,[Orden]&#xA;           ,[Add_stock])&#xA;SELECT View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;  View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,    &#xA;  Code, Description, '1' AS Ordern, NULL AS Add_stock&#xA;  FROM ERP_IMPLT_return_cause &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE ERP_IMPLT_return_cause.Code not in (SELECT Code from [prj_return_cause])" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_users_control"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_users_control"
      DTS:DTSID="{D9E24067-BB5F-41AA-96AB-2B4B140D86F6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_users_control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_users_control (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code_User, Control1, Control2, Control3, Account_Gen_NI, &#xA;                      Account_Gen_Amount, Act_DDP, Coll_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, Man_Print_Col, Mod_Promo_Dis, Mod_Promo, Con_Check_Return, &#xA;                      Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, A_Return_Good, A_Return_Bad, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_New_Order, Del_Route_Re, Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, &#xA;                      Manage_Less, showImport, Coll_Yes, Future_Check_day, col_expired_yes)&#xA;SELECT DISTINCT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;Code_User, Control1, Control2, Control3, Account_Gen_NI, Account_Gen_Amount, Act_DDP, Coll_Print_NFC, &#xA;&#x9;&#x9;A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, Man_Print_Col, Mod_Promo_Dis, &#xA;&#x9;&#x9;Mod_Promo, Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, A_Return_Good, &#xA;&#x9;&#x9;A_Return_Bad, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;        Del_Route_New_Order, Del_Route_Re, Del_Route_Acc_Order, Del_Route_Acc_Today, &#xA;&#x9;&#x9;Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less, '1' AS showImport, &#xA;&#x9;&#x9;CASE WHEN left(ERP_IMPLT_route_sellers.Code_Route,1) IN ('M','A','H','D')&#xA;&#x9;&#x9;THEN '1' ELSE '0' END AS coll_yes, &#xA;&#x9;&#x9;&#xA;&#x9;&#x9;'7' AS Future_Check_day,&#xA;&#xA;&#x9;&#x9;CASE WHEN left(ERP_IMPLT_route_sellers.Code_Route,1) IN ('M','A','H','D')&#xA;&#x9;&#x9;THEN '1' ELSE '0' END AS col_expired_yes&#xA;&#x9;&#x9;FROM         ERP_IMPLT_users_control &#xA;&#x9;&#x9;INNER JOIN ERP_IMPLT_route_sellers ON Code_Seller = Code_User&#xA;&#x9;&#x9;CROSS JOIN View_System_Fields_ERP&#xA;WHERE Code_User not in (SELECT Code_User from prj_users_control)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_users_control SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Control1 = MOD.Control1, Control2 = MOD.Control2, Control3 = MOD.Control3, Account_Gen_NI = MOD.Account_Gen_NI, Account_Gen_Amount = MOD.Account_Gen_Amount, &#xA;&#x9;&#x9;Act_DDP = MOD.Act_DDP, Coll_Print_NFC = MOD.Coll_Print_NFC, A_Prod_Price0 = MOD.A_Prod_Price0, A_Mod_Price = MOD.A_Mod_Price, Max_Doc_Lock = MOD.Max_Doc_Lock, &#xA;&#x9;&#x9;Man_Print_Col = MOD.Man_Print_Col, Mod_Promo_Dis = MOD.Mod_Promo_Dis, Mod_Promo = MOD.Mod_Promo, Con_Check_Return = MOD.Con_Check_Return, &#xA;&#x9;&#x9;Check_Return_Cred = MOD.Check_Return_Cred, Check_Return_Cash = MOD.Check_Return_Cash, Doc_Pen_Cred = MOD.Doc_Pen_Cred, DDP_Doc_neg = MOD.DDP_Doc_neg, &#xA;&#x9;&#x9;A_Return_Good = MOD.A_Return_Good, A_Return_Bad = MOD.A_Return_Bad, Man_Stock_Acc = MOD.Man_Stock_Acc, Cop_Prin_Order = MOD.Cop_Prin_Order, &#xA;&#x9;&#x9;Stock_Liq = MOD.Stock_Liq, Del_Route_New_Order = MOD.Del_Route_New_Order, Del_Route_Re = MOD.Del_Route_Re, Del_Route_Acc_Order = MOD.Del_Route_Acc_Order, &#xA;&#x9;&#x9;Del_Route_Acc_Today = MOD.Del_Route_Acc_Today, Del_Route_Acc_All = MOD.Del_Route_Acc_All, Print_NFC = MOD.Print_NFC, &#xA;&#x9;&#x9;Mod_Date_Delivery = MOD.Mod_Date_Delivery, Manage_More = MOD.Manage_More, Manage_Less = MOD.Manage_Less,&#xA;&#x9;&#x9;showImport = MOD.showImport, coll_yes = MOD.coll_yes, Future_Check_day = MOD.Future_Check_day,&#xA;&#x9;&#x9;col_expired_yes = MOD.col_expired_yes&#xA;FROM&#xA;(SELECT  Code_User, Control1, Control2, Control3, Account_Gen_NI, Account_Gen_Amount, Act_DDP, Coll_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, &#xA;&#x9;&#x9;Man_Print_Col, Mod_Promo_Dis, Mod_Promo, Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, A_Return_Good, &#xA;&#x9;&#x9;A_Return_Bad, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, Del_Route_New_Order, Del_Route_Re, Del_Route_Acc_Order, Del_Route_Acc_Today, &#xA;&#x9;&#x9;Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less, '1' AS showImport, &#xA;&#x9;CASE WHEN left(ERP_IMPLT_route_sellers.Code_Route,1) IN ('M','A','H','D')&#xA;&#x9;&#x9;THEN '1' ELSE '0' END AS coll_yes, '7' AS Future_Check_day,&#xA;&#x9;&#x9;CASE WHEN left(ERP_IMPLT_route_sellers.Code_Route,1) IN ('M','A','H','D')&#xA;&#x9;&#x9;THEN '1' ELSE '0' END AS col_expired_yes&#xA;&#x9;&#x9;FROM         ERP_IMPLT_users_control &#xA;&#x9;&#x9;INNER JOIN ERP_IMPLT_route_sellers ON Code_Seller = Code_User&#xA;EXCEPT&#xA;SELECT  Code_User, Control1, Control2, Control3, Account_Gen_NI, Account_Gen_Amount, Act_DDP, Coll_Print_NFC, A_Prod_Price0, A_Mod_Price, Max_Doc_Lock, &#xA;&#x9;&#x9;Man_Print_Col, Mod_Promo_Dis, Mod_Promo, Con_Check_Return, Check_Return_Cred, Check_Return_Cash, Doc_Pen_Cred, DDP_Doc_neg, A_Return_Good, &#xA;&#x9;&#x9;A_Return_Bad, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, Del_Route_New_Order, Del_Route_Re, Del_Route_Acc_Order, Del_Route_Acc_Today, &#xA;&#x9;&#x9;Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less, showImport, Coll_Yes, Future_Check_day, col_expired_yes&#xA;FROM         prj_users_control) as MOD INNER JOIN prj_users_control ON MOD.Code_User = prj_users_control.Code_User CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_users_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_User FROM ERP_IMPLT_users_control where Code_User = prj_users_control.Code_User and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_users_control SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_users_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_User FROM ERP_IMPLT_users_control where Code_User = prj_users_control.Code_User and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_users_control CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_users_control CI"
      DTS:Disabled="True"
      DTS:DTSID="{3B3E1FFD-7F79-43F4-9568-EB86793F71E1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_users_control CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="44">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_users_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_User FROM ERP_IMPLT_users_control where Code_User = prj_users_control.Code_User) and Code_User &lt;&gt; '9999'&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_users_type_control"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_users_type_control"
      DTS:DTSID="{0363CF8D-40DD-4C6D-81CC-A5017D52B348}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_users_type_control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO prj_users_type_control (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code_Type, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, &#xA;                      Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, Mod_Date_Delivery, Manage_More, Manage_Less)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;&#x9;Code_Type, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, &#xA;&#x9;&#x9;Mod_Date_Delivery, Manage_More, Manage_Less&#xA;FROM         ERP_IMPLT_users_type_control CROSS JOIN View_System_Fields_ERP&#xA;WHERE Code_Type not in (SELECT Code_Type from prj_users_type_control)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_users_type_control SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Man_Stock_Acc = MOD.Man_Stock_Acc, Cop_Prin_Order = MOD.Cop_Prin_Order, Stock_Liq = MOD.Stock_Liq, Del_Route_Acc_Order = MOD.Del_Route_Acc_Order, &#xA;&#x9;&#x9;Del_Route_Acc_Today = MOD.Del_Route_Acc_Today, Del_Route_Acc_All = MOD.Del_Route_Acc_All, Print_NFC = MOD.Print_NFC, &#xA;&#x9;&#x9;Mod_Date_Delivery = MOD.Mod_Date_Delivery, Manage_More = MOD.Manage_More, Manage_Less = MOD.Manage_Less&#xA;FROM&#xA;(SELECT  Code_Type, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, &#xA;&#x9;&#x9;Mod_Date_Delivery, Manage_More, Manage_Less&#xA;FROM         ERP_IMPLT_users_type_control&#xA;EXCEPT&#xA;SELECT  Code_Type, Man_Stock_Acc, Cop_Prin_Order, Stock_Liq, Del_Route_Acc_Order, Del_Route_Acc_Today, Del_Route_Acc_All, Print_NFC, &#xA;&#x9;&#x9;Mod_Date_Delivery, Manage_More, Manage_Less&#xA;FROM         prj_users_type_control) as MOD INNER JOIN prj_users_type_control ON MOD.Code_Type = prj_users_type_control.Code_Type CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_users_type_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users_type_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_Type FROM ERP_IMPLT_users_type_control where Code_Type = prj_users_type_control.Code_Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_users_type_control SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_users_type_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_Type FROM ERP_IMPLT_users_type_control where Code_Type = prj_users_type_control.Code_Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\prj_users_type_control CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="prj_users_type_control CI"
      DTS:DTSID="{F181D04F-0044-43BC-AC11-CFED90CCB86B}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="prj_users_type_control CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="45">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE prj_users_type_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_users_type_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_Type FROM ERP_IMPLT_users_type_control where Code_Type = prj_users_type_control.Code_Type)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products"
      DTS:DTSID="{6ACB75E6-195A-4D75-BECB-46BD1C43056D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO products (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code,  Code_ofClient, Description, Description_short, &#xA;                      Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, &#xA;                      Code_ClassificationD, Code_ClassificationE, Code_Status, Blocked, Ean14, Ean128, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, &#xA;                      Price_Min, Price_Max, Price, Pack, Code_ERP, Observations, Code_Hierarchy6)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  + cast(ROW_NUMBER() OVER (order by Code_ofClient) + 100000 as varchar(8)) as Code,  Code_ofClient,  Description, Description_short, &#xA;    Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, &#xA;    Code_ClassificationD, Code_ClassificationE, Code_Status, Blocked, Ean14, Ean128, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, &#xA;    Price_Min, Price_Max, Price, Pack, Code_ERP, Observations, Code_Hierarchy6&#xA;FROM        ERP_IMPLT_products CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient from products where Code_ofClient = ERP_IMPLT_products.Code_ofClient)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Description = MOD.Description, Description_short = MOD.Description_short, Code_Hierarchy1 = MOD.Code_Hierarchy1, Code_Hierarchy2 = MOD.Code_Hierarchy2, &#xA;&#x9;&#x9;Code_Hierarchy3 = MOD.Code_Hierarchy3, Code_Hierarchy4 = MOD.Code_Hierarchy4, Code_Hierarchy5 = MOD.Code_Hierarchy5, Code_ClassificationA = MOD.Code_ClassificationA, &#xA;&#x9;&#x9;Code_ClassificationB = MOD.Code_ClassificationB, Code_ClassificationC = MOD.Code_ClassificationC, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_ClassificationE = MOD.Code_ClassificationE, Code_Status = MOD.Code_Status, Blocked = MOD.Blocked, Ean14 = MOD.Ean14, Ean128 = MOD.Ean128, &#xA;&#x9;&#x9;Factor_Conversion = MOD.Factor_Conversion, Unit_Box = MOD.Unit_Box, Unit_Pallet = MOD.Unit_Pallet, Unit_Type_Sales = MOD.Unit_Type_Sales, &#xA;&#x9;&#x9;Unit_Type_Inv = MOD.Unit_Type_Inv, Price_Min = MOD.Price_Min, Price_Max = MOD.Price_Max, Price = MOD.Price, Pack = MOD.Pack, Code_ERP = MOD.Code_ERP, &#xA;&#x9;&#x9;Observations = MOD.Observations, Code_Hierarchy6 = MOD.Code_Hierarchy6&#xA;FROM&#xA;(SELECT Code_ofClient, Description, Description_short, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5, &#xA;&#x9;&#x9;Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, Code_ClassificationE, Code_Status, Blocked, &#xA;&#x9;&#x9;Ean14, Ean128, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Price_Min, Price_Max, Price, Pack, Code_ERP, &#xA;&#x9;&#x9;Observations, Code_Hierarchy6&#xA;FROM       ERP_IMPLT_products &#xA;EXCEPT&#xA;SELECT  Code_ofClient, Description, Description_short, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5, &#xA;&#x9;&#x9;Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_ClassificationD, Code_ClassificationE, Code_Status, Blocked, &#xA;&#x9;&#x9;Ean14, Ean128, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Price_Min, Price_Max, Price, Pack, Code_ERP, &#xA;&#x9;&#x9;Observations, Code_Hierarchy6&#xA;FROM         products) as MOD INNER JOIN products ON MOD.Code_ofClient = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_products where Code_ofClient = products.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_products where Code_ofClient = products.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_products (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, Weight, Secuence, Code_AgrupationA1, &#xA;                      Code_AgrupationA2, Priority, New_Item, UnitsUV, WeightUV, Code_AgrupationB1, Code_AgrupationB2, BoxLayer, Add_as_Total, Unit_Type_Weight, &#xA;                      Factor_Convert_W, Trazability, Volume, Unit_Type_Volume, Code_Hierarchy_All, Alcohol, Code_Skill, Type_Product)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;products.Code, Weight, Secuence, Code_AgrupationA1, &#xA;                      Code_AgrupationA2, Priority, New_Item, UnitsUV, WeightUV, Code_AgrupationB1, Code_AgrupationB2, BoxLayer, Add_as_Total, Unit_Type_Weight, &#xA;                      Factor_Convert_W, Trazability, Volume, Unit_Type_Volume, Code_Hierarchy_All, Alcohol, Code_Skill, Type_Product&#xA;FROM   ERP_IMPLT_products inner join products on ERP_IMPLT_products.Code_ofClient = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from prj_products where Code = products.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Weight = MOD.Weight, Secuence = MOD.Secuence, Code_AgrupationA1 = MOD.Code_AgrupationA1, Code_AgrupationA2 = MOD.Code_AgrupationA2, &#xA;&#x9;&#x9;Priority = MOD.Priority, New_Item = MOD.New_Item, UnitsUV = MOD.UnitsUV, WeightUV = MOD.WeightUV, Code_AgrupationB1 = MOD.Code_AgrupationB1, &#xA;&#x9;&#x9;Code_AgrupationB2 = MOD.Code_AgrupationB2, BoxLayer = MOD.BoxLayer, Add_as_Total = MOD.Add_as_Total, Unit_Type_Weight = MOD.Unit_Type_Weight, &#xA;&#x9;&#x9;Factor_Convert_W = MOD.Factor_Convert_W, Trazability = MOD.Trazability, Volume = MOD.Volume, Unit_Type_Volume = MOD.Unit_Type_Volume, &#xA;&#x9;&#x9;Code_Hierarchy_All = MOD.Code_Hierarchy_All, Alcohol = MOD.Alcohol, Code_Skill = MOD.Code_Skill, Type_Product = MOD.Type_Product&#xA;FROM&#xA;(SELECT products.Code, Weight, Secuence, Code_AgrupationA1, Code_AgrupationA2, Priority, New_Item, UnitsUV, WeightUV, Code_AgrupationB1, &#xA;&#x9;&#x9;Code_AgrupationB2, BoxLayer, Add_as_Total, Unit_Type_Weight, Factor_Convert_W, Trazability, Volume, Unit_Type_Volume, Code_Hierarchy_All, &#xA;&#x9;&#x9;Alcohol, Code_Skill, Type_Product&#xA;FROM       ERP_IMPLT_products inner join products on ERP_IMPLT_products.Code_ofClient = products.Code_ofClient &#xA;EXCEPT&#xA;SELECT  Code, Weight, Secuence, Code_AgrupationA1, Code_AgrupationA2, Priority, New_Item, UnitsUV, WeightUV, Code_AgrupationB1, &#xA;&#x9;&#x9;Code_AgrupationB2, BoxLayer, Add_as_Total, Unit_Type_Weight, Factor_Convert_W, Trazability, Volume, Unit_Type_Volume, Code_Hierarchy_All, &#xA;&#x9;&#x9;Alcohol, Code_Skill, Type_Product&#xA;FROM         prj_products) as MOD INNER JOIN prj_products ON MOD.Code = prj_products.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_products SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT products.Code FROM ERP_IMPLT_products inner join products on ERP_IMPLT_products.Code_ofClient = products.Code_ofClient&#xA;where products.Code = prj_products.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_products SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT products.Code FROM ERP_IMPLT_products inner join products on ERP_IMPLT_products.Code_ofClient = products.Code_ofClient&#xA;where products.Code = prj_products.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products CI"
      DTS:DTSID="{28F48C6F-CF6D-46E7-BAFC-BC69CD93FD5D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;UPDATE products SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_products where Code_ofClient = products.Code_ofClient) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;UPDATE prj_products SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT products.Code FROM ERP_IMPLT_products inner join products on ERP_IMPLT_products.Code_ofClient = products.Code_ofClient&#xA;where products.Code = prj_products.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_array"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_array"
      DTS:DTSID="{EC6D4697-6918-45BD-BF72-9D0BBC4D2903}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_array"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;/*&#xA;INSERT INTO ERP_IMPLT_products_array (Code, Type, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_ClassificationA as Code, 1 as Type, Code_ClassificationA as Description, &#xA;'0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where Code_ClassificationA IS NOT NULL &#xA;AND not exists (SELECT Code FROM ERP_IMPLT_products_array where code = ERP_IMPLT_products.Code_ClassificationA and Type = '1') &#xA;and not exists (SELECT Code FROM products_array where code = ERP_IMPLT_products.Code_ClassificationA and Type = '1') &#xA;and Code_ClassificationA is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationB as Code, 2 as Type, Code_ClassificationB as Description, '0' as Source_Create, &#xA;'1' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_array where code = ERP_IMPLT_products.Code_ClassificationB and Type = '2') &#xA;and not exists (SELECT Code FROM products_array where code = ERP_IMPLT_products.Code_ClassificationB and Type = '2') &#xA;and Code_ClassificationB is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationC as Code, 3 as Type, Code_ClassificationC as Description, '0' as Source_Create, &#xA;'1' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_array where code = ERP_IMPLT_products.Code_ClassificationC and Type = '3') &#xA;and not exists (SELECT Code FROM products_array where code = ERP_IMPLT_products.Code_ClassificationC and Type = '3') &#xA;and Code_ClassificationC is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationD as Code, 4 as Type, Code_ClassificationD as Description, '0' as Source_Create, &#xA;'1' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_array where code = ERP_IMPLT_products.Code_ClassificationD and Type = '4') &#xA;and not exists (SELECT Code FROM products_array where code = ERP_IMPLT_products.Code_ClassificationD and Type = '4') &#xA;and Code_ClassificationD is not null&#xA;UNION&#xA;SELECT     distinct Code_ClassificationE as Code, 5 as Type, Code_ClassificationE as Description, '0' as Source_Create, &#xA;'1' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_array where code = ERP_IMPLT_products.Code_ClassificationE and Type = '5') &#xA;and not exists (SELECT Code FROM products_array where code = ERP_IMPLT_products.Code_ClassificationE and Type = '5') &#xA;and Code_ClassificationE is not null&#xA;GO&#xA;*/&#xA;--El UPDATE NO SIRVE&#xA;TRUNCATE TABLE products_array&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO products_array (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Type, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Type, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_products_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM products_array where Code = ERP_IMPLT_products_array.Code and Type = ERP_IMPLT_products_array.Type)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_array SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Type, Description&#xA;FROM         ERP_IMPLT_products_array&#xA;EXCEPT&#xA;SELECT     Code, Type, Description&#xA;FROM         products_array) as MOD INNER JOIN products_array ON MOD.Code = products_array.Code and MOD.Type = products_array.Type CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_products_array where Code = products_array.Code and Type = products_array.Type and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_array SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_products_array where Code = products_array.Code and Type = products_array.Type and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_array CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_array CI"
      DTS:DTSID="{4671A2EE-87B9-46A1-BEA6-17DFF25248A0}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_array CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="36">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE products_array SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_array CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_products_array where Code = products_array.Code and Type = products_array.Type) &#xA;and type not in (6,30,31)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy2"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy2"
      DTS:DTSID="{E80CF8CA-9F00-4CDA-8585-A01C1B4AA33C}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_products_hierarchy2 (Code, Code_hierarchy1, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_hierarchy2 as Code, Code_hierarchy1, Code_hierarchy2 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy2 where code = ERP_IMPLT_products.Code_hierarchy2 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1) &#xA;and not exists (SELECT Code FROM products_hierarchy2 where code = ERP_IMPLT_products.Code_hierarchy2 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1) and Code_hierarchy2 is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO products_hierarchy2 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_hierarchy1, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_hierarchy1, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_products_hierarchy2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM products_hierarchy2 where Code = ERP_IMPLT_products_hierarchy2.Code and Code_hierarchy1 = ERP_IMPLT_products_hierarchy2.Code_hierarchy1)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_hierarchy2 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_hierarchy1, Description&#xA;FROM         ERP_IMPLT_products_hierarchy2&#xA;EXCEPT&#xA;SELECT     Code, Code_hierarchy1, Description&#xA;FROM         products_hierarchy2) as MOD INNER JOIN products_hierarchy2 ON MOD.Code = products_hierarchy2.Code and MOD.Code_hierarchy1 = products_hierarchy2.Code_hierarchy1 CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_hierarchy2 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_products_hierarchy2 where Code = products_hierarchy2.Code and Code_hierarchy1 = products_hierarchy2.Code_hierarchy1 and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_hierarchy2 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_hierarchy2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_products_hierarchy2 where Code = products_hierarchy2.Code and Code_hierarchy1 = products_hierarchy2.Code_hierarchy1 and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy2 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy2 CI"
      DTS:DTSID="{F85AB3AB-8C1D-4B08-A9A2-BD52741ED510}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy2 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="29">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE products_hierarchy2 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy2 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy2 where Code = products_hierarchy2.Code and Code_hierarchy1 = products_hierarchy2.Code_hierarchy1) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy3"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy3"
      DTS:DTSID="{E36F19C3-480E-4E6C-A925-48C0ACAA9B53}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy3"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_products_hierarchy3 (Code, Code_hierarchy1, Code_hierarchy2, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_hierarchy3 as Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy3 where code = ERP_IMPLT_products.Code_hierarchy3 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products.Code_hierarchy2) &#xA;and not exists (SELECT Code FROM products_hierarchy3 where code = ERP_IMPLT_products.Code_hierarchy3 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products.Code_hierarchy2) and Code_hierarchy3 is not null&#xA;GO&#xA;&#xA;&#xA;-- Alta&#xA;INSERT INTO products_hierarchy3 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_hierarchy1, Code_hierarchy2, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_hierarchy1, Code_hierarchy2, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_products_hierarchy3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM products_hierarchy3 where Code = ERP_IMPLT_products_hierarchy3.Code and Code_hierarchy1 = ERP_IMPLT_products_hierarchy3.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products_hierarchy3.Code_hierarchy2)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_hierarchy3 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_hierarchy1, Code_hierarchy2, Description&#xA;FROM         ERP_IMPLT_products_hierarchy3&#xA;EXCEPT&#xA;SELECT     Code, Code_hierarchy1, Code_hierarchy2, Description&#xA;FROM         products_hierarchy3) as MOD INNER JOIN products_hierarchy3 ON MOD.Code = products_hierarchy3.Code and MOD.Code_hierarchy1 = products_hierarchy3.Code_hierarchy1 and MOD.Code_hierarchy2 = products_hierarchy3.Code_hierarchy2 CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_hierarchy3 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_products_hierarchy3 where Code = products_hierarchy3.Code and Code_hierarchy1 = products_hierarchy3.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy3.Code_hierarchy2 and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_hierarchy3 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_hierarchy3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_products_hierarchy3 where Code = products_hierarchy3.Code and Code_hierarchy1 = products_hierarchy3.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy3.Code_hierarchy2 and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy3 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy3 CI"
      DTS:DTSID="{81B9418C-F3CB-4152-9CBA-73B7676E4328}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy3 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="30">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE products_hierarchy3 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy3 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy3 where Code = products_hierarchy3.Code and Code_hierarchy1 = products_hierarchy3.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy3.Code_hierarchy2) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy4"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy4"
      DTS:DTSID="{971E2D54-2228-421C-B146-7DC6BD0D4238}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy4"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_products_hierarchy4 (Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_hierarchy4 as Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Code_hierarchy4 as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_products&#xA;where not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy4 where code = ERP_IMPLT_products.Code_hierarchy4 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products.Code_hierarchy2 and Code_hierarchy3 = ERP_IMPLT_products.Code_hierarchy3) &#xA;and not exists (SELECT Code FROM products_hierarchy4 where code = ERP_IMPLT_products.Code_hierarchy4 and Code_hierarchy1 = ERP_IMPLT_products.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products.Code_hierarchy2 and Code_hierarchy3 = ERP_IMPLT_products.Code_hierarchy3) and Code_hierarchy4 is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO products_hierarchy4 (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_products_hierarchy4 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM products_hierarchy4 where Code = ERP_IMPLT_products_hierarchy4.Code and Code_hierarchy1 = ERP_IMPLT_products_hierarchy4.Code_hierarchy1 and Code_hierarchy2 = ERP_IMPLT_products_hierarchy4.Code_hierarchy2 and Code_hierarchy3 = ERP_IMPLT_products_hierarchy4.Code_hierarchy3)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_hierarchy4 SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Description&#xA;FROM         ERP_IMPLT_products_hierarchy4&#xA;EXCEPT&#xA;SELECT     Code, Code_hierarchy1, Code_hierarchy2, Code_hierarchy3, Description&#xA;FROM         products_hierarchy4) as MOD INNER JOIN products_hierarchy4 ON MOD.Code = products_hierarchy4.Code and MOD.Code_hierarchy1 = products_hierarchy4.Code_hierarchy1 and MOD.Code_hierarchy2 = products_hierarchy4.Code_hierarchy2 and MOD.Code_hierarchy3 = products_hierarchy4.Code_hierarchy3 CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_hierarchy4 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy4 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_products_hierarchy4 where Code = products_hierarchy4.Code and Code_hierarchy1 = products_hierarchy4.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy4.Code_hierarchy2 and Code_hierarchy3 = products_hierarchy4.Code_hierarchy3 and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_hierarchy4 SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_hierarchy4 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_products_hierarchy4 where Code = products_hierarchy4.Code and Code_hierarchy1 = products_hierarchy4.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy4.Code_hierarchy2 and Code_hierarchy3 = products_hierarchy4.Code_hierarchy3 and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_hierarchy4 CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_hierarchy4 CI"
      DTS:DTSID="{17BF3A98-6010-45C4-B332-268D08EC4FDB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_hierarchy4 CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="31">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE products_hierarchy4 SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_hierarchy4 CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_products_hierarchy4 where Code = products_hierarchy4.Code and Code_hierarchy1 = products_hierarchy4.Code_hierarchy1 and Code_hierarchy2 = products_hierarchy4.Code_hierarchy2 and Code_hierarchy3 = products_hierarchy4.Code_hierarchy3) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_measure"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_measure"
      DTS:DTSID="{6ECC30EB-6B23-4AB7-AE9E-7B54FBA372B3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_measure"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO products_measure (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Product, Unit_Measure, Factor_Conversion, EAN, &#xA;                      P_Lengh, P_Width, P_Height, Unit_Type_Measure, Weight, Unit_Measure_Weight)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;products.Code as Code_product, ERP_IMPLT_products_measure.Unit_Measure, ERP_IMPLT_products_measure.Factor_Conversion, ERP_IMPLT_products_measure.EAN, &#xA;    ERP_IMPLT_products_measure.P_Lengh, ERP_IMPLT_products_measure.P_Width, ERP_IMPLT_products_measure.P_Height, ERP_IMPLT_products_measure.Unit_Type_Measure, &#xA;&#x9;ERP_IMPLT_products_measure.Weight, ERP_IMPLT_products_measure.Unit_Measure_Weight&#xA;FROM        ERP_IMPLT_products_measure inner join products on ERP_IMPLT_products_measure.Code_product = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_product, Unit_Measure from products_measure where Code_product = products.Code and &#xA;Unit_Measure = ERP_IMPLT_products_measure.Unit_Measure)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_measure SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Factor_Conversion = MOD.Factor_Conversion, EAN = MOD.EAN, P_Lengh = MOD.P_Lengh, P_Width = MOD.P_Width, P_Height = MOD.P_Height, &#xA;&#x9;&#x9;Unit_Type_Measure = MOD.Unit_Type_Measure, Weight = MOD.Weight, Unit_Measure_Weight = MOD.Unit_Measure_Weight&#xA;FROM&#xA;(SELECT  products.Code as Code_product, ERP_IMPLT_products_measure.Unit_Measure, ERP_IMPLT_products_measure.Factor_Conversion, ERP_IMPLT_products_measure.EAN, &#xA;    ERP_IMPLT_products_measure.P_Lengh, ERP_IMPLT_products_measure.P_Width, ERP_IMPLT_products_measure.P_Height, ERP_IMPLT_products_measure.Unit_Type_Measure, &#xA;&#x9;ERP_IMPLT_products_measure.Weight, ERP_IMPLT_products_measure.Unit_Measure_Weight&#xA;     FROM   ERP_IMPLT_products_measure inner join products on ERP_IMPLT_products_measure.Code_product = products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Product, Unit_Measure, Factor_Conversion, EAN, P_Lengh, P_Width, P_Height, Unit_Type_Measure, Weight, Unit_Measure_Weight&#xA;FROM         products_measure) as MOD INNER JOIN products_measure ON MOD.Code_product = products_measure.Code_product and MOD.Unit_Measure = products_measure.Unit_Measure&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_measure SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_measure CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_measure.Code_product FROM ERP_IMPLT_products_measure inner join products on ERP_IMPLT_products_measure.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = products_measure.Code_product and ERP_IMPLT_products_measure.Unit_Measure = products_measure.Unit_Measure &#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_measure SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_measure CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_measure.Code_product FROM ERP_IMPLT_products_measure inner join products on ERP_IMPLT_products_measure.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = products_measure.Code_product and ERP_IMPLT_products_measure.Unit_Measure = products_measure.Unit_Measure &#xA;&#x9;&#x9;and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_measure CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_measure CI"
      DTS:DTSID="{859953AD-E019-445C-82D7-495993AD58A1}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_measure CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="37">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE products_measure SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_measure CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_products_measure.Code_product FROM ERP_IMPLT_products_measure inner join products on ERP_IMPLT_products_measure.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = products_measure.Code_product and ERP_IMPLT_products_measure.Unit_Measure = products_measure.Unit_Measure) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_organization"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_organization"
      DTS:DTSID="{C7124E62-78AD-470B-949F-EE2712703205}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_organization"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, &#xA;                      Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, ERP_IMPLT_products_organization.Code_Status, ERP_IMPLT_products_organization.Lock, &#xA;&#x9;ERP_IMPLT_products_organization.Factor_Conversion, ERP_IMPLT_products_organization.Unit_Box, ERP_IMPLT_products_organization.Unit_Pallet, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Type_Sales, ERP_IMPLT_products_organization.Unit_Type_Inv, ERP_IMPLT_products_organization.Code_ClassificationD, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationE, ERP_IMPLT_products_organization.Code_ClassificationA, ERP_IMPLT_products_organization.Code_ClassificationB, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationC, ERP_IMPLT_products_organization.Code_Hierarchy1, ERP_IMPLT_products_organization.Code_Hierarchy2, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy3, ERP_IMPLT_products_organization.Code_Hierarchy4, ERP_IMPLT_products_organization.Code_Hierarchy5&#xA;FROM        ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Product, Code_Unit_Org, Code_Sales_Org from products_organization where Code_Product = Products.Code and &#xA;Code_Unit_Org = ERP_IMPLT_products_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_products_organization.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Lock = MOD.Lock, Factor_Conversion = MOD.Factor_Conversion, Unit_Box = MOD.Unit_Box, Unit_Pallet = MOD.Unit_Pallet, &#xA;&#x9;&#x9;Unit_Type_Sales = MOD.Unit_Type_Sales, Unit_Type_Inv = MOD.Unit_Type_Inv, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_ClassificationE = MOD.Code_ClassificationE, Code_ClassificationA = MOD.Code_ClassificationA, Code_ClassificationB = MOD.Code_ClassificationB, &#xA;&#x9;&#x9;Code_ClassificationC = MOD.Code_ClassificationC, Code_Hierarchy1 = MOD.Code_Hierarchy1, Code_Hierarchy2 = MOD.Code_Hierarchy2, &#xA;&#x9;&#x9;Code_Hierarchy3 = MOD.Code_Hierarchy3, Code_Hierarchy4 = MOD.Code_Hierarchy4, Code_Hierarchy5 = MOD.Code_Hierarchy5&#xA;FROM&#xA;(SELECT  Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, ERP_IMPLT_products_organization.Code_Status, ERP_IMPLT_products_organization.Lock, &#xA;&#x9;ERP_IMPLT_products_organization.Factor_Conversion, ERP_IMPLT_products_organization.Unit_Box, ERP_IMPLT_products_organization.Unit_Pallet, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Type_Sales, ERP_IMPLT_products_organization.Unit_Type_Inv, ERP_IMPLT_products_organization.Code_ClassificationD, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationE, ERP_IMPLT_products_organization.Code_ClassificationA, ERP_IMPLT_products_organization.Code_ClassificationB, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationC, ERP_IMPLT_products_organization.Code_Hierarchy1, ERP_IMPLT_products_organization.Code_Hierarchy2, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy3, ERP_IMPLT_products_organization.Code_Hierarchy4, ERP_IMPLT_products_organization.Code_Hierarchy5&#xA;     FROM   ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, &#xA;                      Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5&#xA;FROM         products_organization) as MOD INNER JOIN products_organization ON MOD.Code_Product = products_organization.Code_Product and MOD.Code_Unit_Org = products_organization.Code_Unit_Org and MOD.Code_Sales_Org = products_organization.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Frecuency, Min_Quantity_Order, Unit_Order, Min_Quantity_Del, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Unit_Del, Code_Hierarchy6, Weight_Variable, Origin_Society, Has_Weight_Management, &#xA;                      Trazability)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Frecuency, ERP_IMPLT_products_organization.Min_Quantity_Order, ERP_IMPLT_products_organization.Unit_Order, &#xA;&#x9;ERP_IMPLT_products_organization.Min_Quantity_Del, ERP_IMPLT_products_organization.Unit_Del, ERP_IMPLT_products_organization.Code_Hierarchy6, &#xA;&#x9;ERP_IMPLT_products_organization.Weight_Variable, &#xA;&#x9;CASE WHEN ERP_IMPLT_products_organization.Code_Sales_Org IN ('1000','6000')&#xA;&#x9;THEN '1000' ELSE '4000' END AS Origin_Society,&#xA;&#x9;ERP_IMPLT_products_organization.Has_Weight_Management, &#xA;&#x9;ERP_IMPLT_products_organization.Trazability&#xA;FROM        ERP_IMPLT_products_organization inner join Products &#xA;on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Product, Code_Unit_Org, Code_Sales_Org from prj_products_organization &#xA;where Code_Product = Products.Code and &#xA;Code_Unit_Org = ERP_IMPLT_products_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_products_organization.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_products_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Frecuency = MOD.Code_Frecuency, Min_Quantity_Order = MOD.Min_Quantity_Order, Unit_Order = MOD.Unit_Order, Min_Quantity_Del = MOD.Min_Quantity_Del, &#xA;&#x9;&#x9;Unit_Del = MOD.Unit_Del, Code_Hierarchy6 = MOD.Code_Hierarchy6, Weight_Variable = MOD.Weight_Variable, &#xA;&#x9;&#x9;Origin_Society = MOD.Origin_Society, &#xA;&#x9;&#x9;Has_Weight_Management = MOD.Has_Weight_Management, Trazability = MOD.Trazability&#xA;FROM&#xA;(SELECT  Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Frecuency, ERP_IMPLT_products_organization.Min_Quantity_Order, ERP_IMPLT_products_organization.Unit_Order, &#xA;&#x9;ERP_IMPLT_products_organization.Min_Quantity_Del, ERP_IMPLT_products_organization.Unit_Del, ERP_IMPLT_products_organization.Code_Hierarchy6, &#xA;&#x9;ERP_IMPLT_products_organization.Weight_Variable, &#xA;&#x9; CASE WHEN ERP_IMPLT_products_organization.Code_Sales_Org IN ('1000','6000')&#xA;&#x9;THEN '1000' ELSE '4000' END AS Origin_Society,&#xA;&#x9;ERP_IMPLT_products_organization.Has_Weight_Management, &#xA;&#x9;ERP_IMPLT_products_organization.Trazability&#xA;       FROM        ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Frecuency, Min_Quantity_Order, &#xA;&#x9; Unit_Order, Min_Quantity_Del, Unit_Del, Code_Hierarchy6,&#xA;&#x9; Weight_Variable, Origin_Society, Has_Weight_Management, Trazability&#xA;FROM         prj_products_organization) as MOD INNER JOIN prj_products_organization ON MOD.Code_Product = prj_products_organization.Code_Product and MOD.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;MOD.Code_Sales_Org = prj_products_organization.Code_Sales_Org CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;where Products.code = prj_products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;ERP_IMPLT_products_organization.Code_Sales_Org = prj_products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_products_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;where Products.code = prj_products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;ERP_IMPLT_products_organization.Code_Sales_Org = prj_products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, &#xA;                      Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, ERP_IMPLT_products_organization.Code_Status, ERP_IMPLT_products_organization.Lock, &#xA;&#x9;ERP_IMPLT_products_organization.Factor_Conversion, ERP_IMPLT_products_organization.Unit_Box, ERP_IMPLT_products_organization.Unit_Pallet, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Type_Sales, ERP_IMPLT_products_organization.Unit_Type_Inv, ERP_IMPLT_products_organization.Code_ClassificationD, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationE, ERP_IMPLT_products_organization.Code_ClassificationA, ERP_IMPLT_products_organization.Code_ClassificationB, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationC, ERP_IMPLT_products_organization.Code_Hierarchy1, ERP_IMPLT_products_organization.Code_Hierarchy2, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy3, ERP_IMPLT_products_organization.Code_Hierarchy4, ERP_IMPLT_products_organization.Code_Hierarchy5&#xA;FROM        ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Product, Code_Unit_Org, Code_Sales_Org from products_organization where Code_Product = Products.Code and &#xA;Code_Unit_Org = ERP_IMPLT_products_organization.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_products_organization.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE products_organization SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Status = MOD.Code_Status, Lock = MOD.Lock, Factor_Conversion = MOD.Factor_Conversion, Unit_Box = MOD.Unit_Box, Unit_Pallet = MOD.Unit_Pallet, &#xA;&#x9;&#x9;Unit_Type_Sales = MOD.Unit_Type_Sales, Unit_Type_Inv = MOD.Unit_Type_Inv, Code_ClassificationD = MOD.Code_ClassificationD, &#xA;&#x9;&#x9;Code_ClassificationE = MOD.Code_ClassificationE, Code_ClassificationA = MOD.Code_ClassificationA, Code_ClassificationB = MOD.Code_ClassificationB, &#xA;&#x9;&#x9;Code_ClassificationC = MOD.Code_ClassificationC, Code_Hierarchy1 = MOD.Code_Hierarchy1, Code_Hierarchy2 = MOD.Code_Hierarchy2, &#xA;&#x9;&#x9;Code_Hierarchy3 = MOD.Code_Hierarchy3, Code_Hierarchy4 = MOD.Code_Hierarchy4, Code_Hierarchy5 = MOD.Code_Hierarchy5&#xA;FROM&#xA;(SELECT  Products.Code as Code_Product, ERP_IMPLT_products_organization.Code_Unit_Org, ERP_IMPLT_products_organization.Code_Sales_Org, ERP_IMPLT_products_organization.Code_Status, ERP_IMPLT_products_organization.Lock, &#xA;&#x9;ERP_IMPLT_products_organization.Factor_Conversion, ERP_IMPLT_products_organization.Unit_Box, ERP_IMPLT_products_organization.Unit_Pallet, &#xA;&#x9;ERP_IMPLT_products_organization.Unit_Type_Sales, ERP_IMPLT_products_organization.Unit_Type_Inv, ERP_IMPLT_products_organization.Code_ClassificationD, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationE, ERP_IMPLT_products_organization.Code_ClassificationA, ERP_IMPLT_products_organization.Code_ClassificationB, &#xA;&#x9;ERP_IMPLT_products_organization.Code_ClassificationC, ERP_IMPLT_products_organization.Code_Hierarchy1, ERP_IMPLT_products_organization.Code_Hierarchy2, &#xA;&#x9;ERP_IMPLT_products_organization.Code_Hierarchy3, ERP_IMPLT_products_organization.Code_Hierarchy4, ERP_IMPLT_products_organization.Code_Hierarchy5&#xA;     FROM   ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT  Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, &#xA;                      Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, Code_Hierarchy5&#xA;FROM         products_organization) as MOD INNER JOIN products_organization ON MOD.Code_Product = products_organization.Code_Product and MOD.Code_Unit_Org = products_organization.Code_Unit_Org and MOD.Code_Sales_Org = products_organization.Code_Sales_Org &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE products_organization SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = products_organization.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\products_organization CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="products_organization CI"
      DTS:DTSID="{A306FADD-C1B7-4174-953F-F25746C2E7D8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="products_organization CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="38">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;UPDATE products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;&#x9;&#x9;where Products.code = products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = products_organization.Code_Unit_Org &#xA;&#x9;&#x9;and ERP_IMPLT_products_organization.Code_Sales_Org = products_organization.Code_Sales_Org ) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;UPDATE prj_products_organization SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_products_organization CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_products_organization.Code_Product FROM ERP_IMPLT_products_organization inner join Products on ERP_IMPLT_products_organization.Code_Product = Products.Code_ofClient &#xA;where Products.code = prj_products_organization.Code_Product and ERP_IMPLT_products_organization.Code_Unit_Org = prj_products_organization.Code_Unit_Org and &#xA;ERP_IMPLT_products_organization.Code_Sales_Org = prj_products_organization.Code_Sales_Org) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Promotions"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{CC090A72-0A54-458A-9C5C-DF7E8DE6AC5E}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Promotions"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="--PROMOTIONS ORGANIZATION&#xA;-- Alta&#xA;INSERT INTO prj_promotions_organization &#xA;&#x9;&#x9;&#x9;( Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, Code_Promotion, Code_Unit_Org, Code_Sales_Org, Date_Ini, Date_End)&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  Code_Unit_Org, &#xA;&#x9;  Code_Sales_Org,&#xA;&#x9;  ERP_IMPLT_promotions_organization.Date_Ini AS Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_organization.Date_End AS Date_End&#x9;&#xA;&#x9;  from ERP_IMPLT_promotions_organization&#xA;  INNER JOIN prj_promotions_head&#xA;ON ERP_IMPLT_promotions_organization.Code_Promotion = prj_promotions_head.Code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT Code_Promotion, Code_Sales_Org FROM prj_promotions_organization &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE Code_Promotion = prj_promotions_head.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_organization SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Date_Ini = MOD.Date_Ini,&#xA;Date_End = MOD.Date_End&#xA;FROM&#xA;(SELECT &#x9;   &#xA;  prj_promotions_head.Code,&#xA;&#x9; Code_Unit_Org, &#xA;&#x9; Code_Sales_Org,&#xA;&#x9;ERP_IMPLT_promotions_organization.Date_Ini AS Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_organization.Date_End AS Date_End&#xA;   from ERP_IMPLT_promotions_organization&#xA;  INNER JOIN prj_promotions_head&#xA;ON ERP_IMPLT_promotions_organization.Code_Promotion = prj_promotions_head.Code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  WHERE prj_promotions_head.Date_End &lt;&gt; ERP_IMPLT_promotions_organization.Date_End&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code_Promotion,&#xA;Code_Unit_Org, Code_Sales_Org,&#xA;&#x9;  Date_Ini, Date_End&#xA;&#x9;  FROM    prj_promotions_organization     ) as MOD &#xA;&#x9;  INNER JOIN prj_promotions_head ON&#xA;prj_promotions_head.Code = MOD.Code&#xA;CROSS JOIN View_System_Fields_ERP &#xA;GO &#xA;-----------------------------------------------------------------------------------------------------------------------&#xA;-----------------------------------------------------------------------------------------------------------------------&#xA;&#xA;/* Se comenta bloque porque al parecer no se usa&#xA;-----------------------------------------------------------------------------------------------------------------------------&#xA;-----------------------------------------------------------------------------------------------------------------------------&#xA;--Prj_Promotions_Products&#xA;--PROMOTIONS products&#xA;-- Alta&#xA;INSERT INTO prj_promotions_products &#xA;&#x9;&#x9;&#x9;( Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, Code_Product, Code_Promotion, Quantity, Unit_Sales )&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  products.Code AS Code_Product,&#xA;&#x9;  prj_promotions_head.Code AS Code_promotion,&#xA;&#x9;  ERP_IMPLT_promotions_detail.Quantity AS Quantity,&#xA;&#x9;   prj_promotions_head.Unit_Sales AS Unit_Sales   &#xA;  FROM ERP_IMPLT_promotions_detail &#xA;  INNER JOIN ERP_IMPLT_promotions_head ON ERP_IMPLT_promotions_detail.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_detail.Code_promotion&#xA;  INNER JOIN products ON ERP_IMPLT_promotions_detail.Code_Product = products.code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT Code_Product, Code_Promotion&#xA;                    FROM prj_promotions_products &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE Code_Promotion = prj_promotions_head.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_products SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Code_Product = MOD.Code_Product,&#xA;Code_Promotion = MOD.Code_Promo,&#xA;Quantity = MOD.Quantity,&#xA;Unit_Sales = MOD.Unit_Sales&#xA;FROM&#xA;(SELECT &#x9;   &#xA;  products.Code AS Code_Product,&#xA;&#x9;  prj_promotions_head.Code AS Code_promo,&#xA;&#x9;  ERP_IMPLT_promotions_detail.Quantity AS Quantity,&#xA;&#x9;   prj_promotions_head.Unit_Sales AS Unit_Sales &#x9;  &#xA; FROM ERP_IMPLT_promotions_detail &#xA;  INNER JOIN ERP_IMPLT_promotions_head ON ERP_IMPLT_promotions_detail.Code_Promotion = ERP_IMPLT_promotions_head.Code_Promotion&#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_detail.Code_promotion&#xA;  INNER JOIN products ON ERP_IMPLT_promotions_detail.Code_Product = products.code_ofClient&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code_Product,&#xA;Code_Promotion, Quantity, Unit_Sales&#xA;&#x9;  FROM    prj_promotions_products     ) as MOD INNER JOIN prj_promotions_head ON&#xA;MOD.Code_promo = prj_promotions_head.Code &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;-----------------------------------------------------------------------------------------------------------------------------&#xA;-----------------------------------------------------------------------------------------------------------------------------&#xA;--prj_promotions_quantity&#xA;--PROMOTIONS Quantity&#xA;-- Alta&#xA;INSERT INTO prj_promotions_quantity&#xA;&#x9;&#x9;&#x9;( Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, Code_Account, Code_Promo, Code_Unit_Org, Code_Sales_Org )&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  Accounts.Code AS code_Account,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promo,&#xA;&#x9; ERP_IMPLT_promotions_head.Code_Unit_Org, &#xA;&#x9;  ERP_IMPLT_promotions_head.Code_Sales_Org &#xA;  FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  INNER JOIN accounts ON accounts.Code_ofClient = ERP_IMPLT_Promotions_Head.Code_Account&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT prj_promotions_quantity.Code_Account, &#xA;prj_promotions_quantity.Code_Promo, &#xA;prj_promotions_quantity.Code_Unit_Org, &#xA;prj_promotions_quantity.Code_Sales_Org &#xA;FROM prj_promotions_quantity &#xA;    WHERE prj_promotions_quantity.Code_Promo = prj_promotions_head.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_quantity SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Code_Account = MOD.code_Account,&#xA;Code_Promo = MOD.Code_Promo,&#xA;Code_Unit_Org = MOD.Code_Unit_Org,&#xA;Code_Sales_Org = MOD.Code_Sales_Org&#xA;FROM&#xA;(SELECT &#x9;   &#xA; Accounts.Code AS code_Account,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promo,&#xA;&#x9; ERP_IMPLT_promotions_head.Code_Unit_Org, &#xA;&#x9;  ERP_IMPLT_promotions_head.Code_Sales_Org &#x9;  &#xA; FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_promotion&#xA;  INNER JOIN accounts ON accounts.Code_ofClient = ERP_IMPLT_Promotions_Head.Code_Account&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code_Account,&#xA;Code_Promo, Code_Unit_Org, Code_Sales_Org&#xA;&#x9;  FROM    prj_promotions_quantity     ) as MOD INNER JOIN prj_promotions_head ON&#xA;MOD.Code_Promo = prj_promotions_head.Code &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;*/&#xA;---------------------------------------------------------------------------------------------------------------------------&#xA;---------------------------------------------------------------------------------------------------------------------------&#xA;--prj_promotions_sellers&#xA;--PROMOTIONS SELLERS&#xA;--Alta&#xA;INSERT INTO prj_promotions_sellers&#xA;&#x9;&#x9;&#x9;(Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, &#xA;&#x9;&#x9;&#x9;Code_Promotion, Code_Seller, Quantity, Date_Ini, Date_End, Guid_Prom,&#xA;&#x9;&#x9;&#x9;Modificable, Activable, Quantity_Ini, Quantity_Fin )&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  Code_Seller AS Code_Seller,&#xA;&#x9;  Quantity,&#xA;&#x9;  ERP_IMPLT_promotions_sellers.Date_Ini AS Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_sellers.Date_End AS Date_End,&#xA;&#x9;  convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;&#x9;  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_promotions_sellers.Code_Promotion) + 100000 as varchar(8)) &#xA;&#x9;  AS Guid_Prom,&#xA;&#x9;  '0' AS Modificable,&#xA;      '0' AS Activable,&#xA;&#x9;  '0' AS Quantity_Ini,&#xA;&#x9;  '0' AS Quantity_Fin&#xA;FROM ERP_IMPLT_promotions_sellers &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_sellers.Code_promotion&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  WHERE NOT EXISTS (SELECT prj_promotions_sellers.Code_Promotion, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;prj_promotions_sellers.Code_Seller &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    FROM prj_promotions_sellers &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;where  prj_promotions_sellers.Code_Promotion = prj_promotions_head.Code&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND prj_promotions_sellers.Date_Ini = prj_promotions_head.Date_Ini&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND prj_promotions_sellers.Date_End = prj_promotions_head.Date_End)&#xA;&#xA;UNION &#xA;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  Code_Seller AS Code_Seller,&#xA;&#x9;  Quantity,&#xA;&#x9;  ERP_IMPLT_promotions_sellers.Date_Ini AS Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_sellers.Date_End AS Date_End,&#xA;&#x9;  convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;&#x9;  + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_promotions_sellers.Code_Promotion) + 500000 as varchar(8)) &#xA;&#x9;  AS Guid_Prom,&#xA;&#x9;  '0' AS Modificable,&#xA;      '0' AS Activable,&#xA;&#x9;  '0' AS Quantity_Ini,&#xA;&#x9;  '0' AS Quantity_Fin&#xA;FROM ERP_IMPLT_promotions_sellers &#xA;  INNER JOIN prj_promotions_head &#xA;  ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_sellers.Code_promotion&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;WHERE NOT EXISTS (SELECT prj_promotions_sellers.Code_Promotion, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;prj_promotions_sellers.Code_Seller &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    FROM prj_promotions_sellers &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;where  prj_promotions_sellers.Code_Promotion = prj_promotions_head.Code&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND prj_promotions_sellers.Date_Ini = prj_promotions_head.Date_Ini&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;AND prj_promotions_sellers.Date_End = prj_promotions_head.Date_End)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_promotions_sellers SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Code_Promotion = MOD.Code_Promotion,&#xA;Code_Seller = MOD.Code_Seller,&#xA;Quantity = MOD.Quantity,&#xA;Date_Ini = MOD.Date_Ini, &#xA;Date_End = MOD.Date_End,&#xA;Modificable = MOD.Modificable,&#xA;Activable = MOD.Activable,&#xA;Quantity_Ini = MOD.Quantity_Ini,&#xA;Quantity_Fin= MOD.Quantity_Fin&#xA;FROM&#xA;(SELECT   &#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  Code_Seller AS Code_Seller,&#xA;&#x9;  Quantity,&#xA;&#x9;  ERP_IMPLT_promotions_sellers.Date_Ini AS Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_sellers.Date_End AS Date_End,&#xA;&#x9;  '0' AS Modificable,&#xA;      '0' AS Activable,&#xA;&#x9;  '0' AS Quantity_Ini,&#xA;&#x9;  '0' AS Quantity_Fin&#xA;  FROM ERP_IMPLT_promotions_sellers &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_sellers.Code_promotion&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  UNION &#xA;&#xA;SELECT  DISTINCT &#xA;&#xA;--&#x9;  NULL AS Delete_User, &#xA;--&#x9;  NULL AS Delete_Date, &#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  Code_Seller AS Code_Seller,&#xA;&#x9;  Quantity,&#xA;&#x9;ERP_IMPLT_promotions_sellers.Date_Ini AS Date_Ini, &#xA;&#x9;  ERP_IMPLT_promotions_sellers.Date_End AS Date_End,&#xA;&#x9;--  convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;&#x9; -- + cast(ROW_NUMBER() OVER (order by ERP_IMPLT_promotions_head.Code_Promotion) + 100000 as varchar(8)) AS Guid_Prom,&#xA;&#x9;  '0' AS Modificable,&#xA;      '0' AS Activable,&#xA;&#x9;  '0' AS Quantity_Ini,&#xA;&#x9;  '0' AS Quantity_Fin&#xA;FROM ERP_IMPLT_promotions_sellers &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_sellers.Code_promotion&#xA;      EXCEPT&#xA;     SELECT  &#xA; Code_Promotion,Code_Seller, Quantity, Date_Ini, Date_End,&#xA;&#x9;&#x9;&#x9;Modificable, Activable, Quantity_Ini, Quantity_Fin&#xA;&#x9;  FROM    prj_promotions_sellers) as MOD INNER JOIN prj_promotions_head ON&#xA;MOD.Code_Promotion = prj_promotions_head.Code &#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;---------------------------------------------------------------------------------------------------------------------------&#xA;---------------------------------------------------------------------------------------------------------------------------&#xA;--prj_promotions_type_user&#xA;--PROMOTIONS TYPE USER&#xA;--Alta&#xA;INSERT INTO [dbo].[prj_promotions_type_user]&#xA;&#x9;&#x9;&#x9;(Create_User, Create_Date, Modify_User,Modify_Date, Delete_User,Delete_Date,&#xA;&#x9;&#x9;&#x9;Platform, &#xA;&#x9;&#x9;&#x9;Code_Promotion, Code_Type, Date_Ini, Date_End )&#x9;&#x9;&#x9;&#xA;SELECT  DISTINCT &#xA;&#x9;  View_System_Fields_ERP.Create_User, &#xA;&#x9;  View_System_Fields_ERP.Create_Date, &#xA;&#x9;  View_System_Fields_ERP.Modify_User,&#xA;      View_System_Fields_ERP.Modify_Date, &#xA;&#x9;  NULL AS Delete_User, &#xA;&#x9;  NULL AS Delete_Date, &#xA;&#x9;  View_System_Fields_ERP.Platform,&#xA;&#x9;  prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  prj_users_type.Code AS Code_Type,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_Ini AS Date_Ini,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_End AS Date_End&#xA;&#x9;    FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_ofClient&#xA;  CROSS JOIN prj_users_type &#xA;  CROSS JOIN View_System_Fields_ERP&#xA;  WHERE prj_users_type.Code IN ('102','107','108','109') AND NOT EXISTS (SELECT prj_promotions_type_user.Code_Promotion, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;prj_promotions_type_user.Code_Type &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;    FROM prj_promotions_type_user &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;where  prj_promotions_type_user.Code_Promotion = prj_promotions_head.Code)&#xA;GO&#xA;&#xA;--Actualización&#xA;-- Modificación&#xA;UPDATE prj_promotions_type_user SET &#xA;Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;Modify_Date = View_System_Fields_ERP.Modify_Date, &#xA;Delete_User = NULL, &#xA;Delete_Date = NULL, &#xA;Platform = View_System_Fields_ERP.Platform, &#xA;Code_Promotion = MOD.Code_Promotion,&#xA;Code_Type = MOD.Code_Type,&#xA;Date_Ini = MOD.Date_Ini,&#xA;Date_End = MOD.Date_End&#xA;FROM&#xA;(SELECT   &#xA;&#x9; prj_promotions_head.Code AS Code_Promotion,&#xA;&#x9;  prj_users_type.Code AS Code_Type,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_Ini AS Date_Ini,&#xA;&#x9;  ERP_IMPLT_promotions_head.Date_End AS Date_End&#xA; FROM ERP_IMPLT_promotions_head &#xA;  INNER JOIN prj_promotions_head ON prj_promotions_head.code_ofClient = ERP_IMPLT_promotions_head.Code_ofClient&#xA;  CROSS JOIN prj_users_type&#xA;  CROSS JOIN View_System_Fields_ERP&#xA;     EXCEPT&#xA;     SELECT  &#xA; Code_Promotion, Code_Type, Date_Ini, Date_End&#xA;&#x9;&#x9;&#x9;FROM    prj_promotions_type_user) as MOD INNER JOIN [dbo].[prj_promotions_type_user] ON&#xA;MOD.Code_Promotion = prj_promotions_type_user.Code_Promotion AND MOD.Code_Type = prj_promotions_Type_user.Code_Type&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\provinces"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="provinces"
      DTS:DTSID="{0C121F2B-ECB4-4DBE-984B-D56979531A3A}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="provinces"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_provinces (Code, Code_Country, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT     distinct Code_Province as Code, Code_Country, Code_Province as Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP&#xA;FROM         ERP_IMPLT_accounts&#xA;where not exists (SELECT Code FROM ERP_IMPLT_provinces where code = ERP_IMPLT_accounts.Code_Province and Code_Country = ERP_IMPLT_accounts.Code_Country) &#xA;and not exists (SELECT Code FROM provinces where code = ERP_IMPLT_accounts.Code_Province and Code_Country = ERP_IMPLT_accounts.Code_Country) and Code_Province is not null&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO provinces (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_Country, Description)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Code_Country, Description&#xA;FROM         ERP_IMPLT_provinces CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM provinces where Code = ERP_IMPLT_provinces.Code AND Code_Country = ERP_IMPLT_provinces.Code_Country)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE provinces SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Code_Country, Description&#xA;FROM         ERP_IMPLT_provinces&#xA;EXCEPT&#xA;SELECT     Code, Code_Country, Description&#xA;FROM         provinces) as MOD INNER JOIN provinces ON MOD.Code = provinces.Code and MOD.Code_Country = provinces.Code_Country CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE provinces SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  provinces CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_provinces where Code = provinces.Code and Code_Country = provinces.Code_Country and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE provinces SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  provinces CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_provinces where Code = provinces.Code and Code_Country = provinces.Code_Country and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\provinces CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="provinces CI"
      DTS:DTSID="{8BBB673A-43D6-403D-8102-29429E9BE6BE}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="provinces CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="52">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE provinces SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  provinces CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_provinces where Code = provinces.Code and Code_Country = provinces.Code_Country) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_accounts"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_accounts"
      DTS:DTSID="{4BEF57B0-06CB-4F40-BCF3-BDEE5FF7EF73}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_accounts"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO route_accounts (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Route, [Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_route_accounts.Code_Unit_Org, ERP_IMPLT_route_accounts.Code_Sales_Org, route_header.Code as Code_Route,&#xA;&#x9;[Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun&#xA;FROM        ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Route from route_accounts where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_route_accounts.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_route_accounts.Code_Sales_Org and Code_Route = route_header.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE route_accounts SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;[Order] = MOD.[Order], Visit_Day = MOD.Visit_Day, Visit_Mon = MOD.Visit_Mon, Visit_Tue = MOD.Visit_Tue, Visit_Wen = MOD.Visit_Wen,&#xA;&#x9;&#x9; Visit_Thu = MOD.Visit_Thu, Visit_Fri = MOD.Visit_Fri, Visit_Sat = MOD.Visit_Sat, Visit_Sun = MOD.Visit_Sun&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_route_accounts.Code_Unit_Org, ERP_IMPLT_route_accounts.Code_Sales_Org, route_header.Code as Code_Route,&#xA;&#x9;[Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun&#xA;     FROM   ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT     Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Route, [Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun&#xA;FROM         route_accounts) as MOD INNER JOIN route_accounts ON MOD.Code_Account = route_accounts.Code_Account and MOD.Code_Unit_Org = route_accounts.Code_Unit_Org and MOD.Code_Sales_Org = route_accounts.Code_Sales_Org and &#xA;MOD.Code_Route = route_accounts.Code_Route CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE route_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = route_accounts.Code_Sales_Org and &#xA;accounts.code = route_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE route_accounts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = route_accounts.Code_Sales_Org and &#xA;accounts.code = route_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_route_accounts (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Route, Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, &#xA;                      Visit_Sun_Order)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_route_accounts.Code_Unit_Org, ERP_IMPLT_route_accounts.Code_Sales_Org, route_header.Code as Code_Route,&#xA;&#x9;Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, Visit_Sun_Order&#xA;FROM        ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Route from prj_route_accounts where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_route_accounts.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_route_accounts.Code_Sales_Org and Code_Route = route_header.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_route_accounts SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Frecuency_V = MOD.Code_Frecuency_V, Code_Week_V = MOD.Code_Week_V, Visit_Mon_Order = MOD.Visit_Mon_Order, Visit_Tue_Order = MOD.Visit_Tue_Order, &#xA;&#x9;&#x9;Visit_Wen_Order = MOD.Visit_Wen_Order, Visit_Fri_Order = MOD.Visit_Fri_Order, Visit_Thu_Order = MOD.Visit_Thu_Order, Visit_Sat_Order = MOD.Visit_Sat_Order, &#xA;&#x9;&#x9;Visit_Sun_Order = MOD.Visit_Sun_Order&#xA;FROM&#xA;(SELECT  accounts.Code as Code_Account, ERP_IMPLT_route_accounts.Code_Unit_Org, ERP_IMPLT_route_accounts.Code_Sales_Org, route_header.Code as Code_Route,&#xA;&#x9;Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, Visit_Sun_Order&#xA;     FROM   ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient&#xA;     EXCEPT&#xA;     SELECT     Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;               Code_Route, Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, Visit_Sun_Order&#xA;FROM         prj_route_accounts) as MOD INNER JOIN prj_route_accounts ON MOD.Code_Account = prj_route_accounts.Code_Account and MOD.Code_Unit_Org = prj_route_accounts.Code_Unit_Org and MOD.Code_Sales_Org = prj_route_accounts.Code_Sales_Org and &#xA;MOD.Code_Route = prj_route_accounts.Code_Route CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_route_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = prj_route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = prj_route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = prj_route_accounts.Code_Sales_Org and &#xA;accounts.code = prj_route_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_route_accounts SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = prj_route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = prj_route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = prj_route_accounts.Code_Sales_Org and &#xA;accounts.code = prj_route_accounts.Code_Account and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;--6000&#xA;INSERT INTO route_accounts (Create_User, Create_Date, Modify_User, Modify_Date, Platform, &#xA;Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;                      Code_Route, [Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Visit_Sat, Visit_Sun)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, ERP_IMPLT_route_accounts.Code_Unit_Org, &#xA;&#x9;'6000' as Code_Sales_Org, &#xA;&#x9;route_header.Code as Code_Route,&#xA;&#x9;[Order], Visit_Day, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun&#xA;FROM        ERP_IMPLT_route_accounts &#xA;inner join route_header &#xA;on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE  (ERP_IMPLT_route_accounts.Code_Sales_Org = '1000') AND not exists &#xA;(SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Route from route_accounts where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_route_accounts.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_route_accounts.Code_Sales_Org and Code_Route = route_header.Code)&#xA;GO&#xA;&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_route_accounts (Create_User, Create_Date, Modify_User, Modify_Date, &#xA;Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, &#xA;Code_Route, Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, &#xA;Visit_Wen_Order, Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, &#xA;                      Visit_Sun_Order)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;&#x9;accounts.Code as Code_Account, &#xA;&#x9;ERP_IMPLT_route_accounts.Code_Unit_Org, &#xA;&#x9;'6000' AS Code_Sales_Org, &#xA;&#x9;route_header.Code as Code_Route,&#xA;&#x9;Code_Frecuency_V, Code_Week_V, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, &#xA;&#x9;Visit_Fri_Order, Visit_Thu_Order, Visit_Sat_Order, Visit_Sun_Order&#xA;FROM        ERP_IMPLT_route_accounts inner join route_header &#xA;on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE  (ERP_IMPLT_route_accounts.Code_Sales_Org = '1000') AND not exists &#xA;(SELECT Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Route from prj_route_accounts &#xA;where Code_Account = accounts.Code and &#xA;Code_Unit_Org = ERP_IMPLT_route_accounts.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_route_accounts.Code_Sales_Org &#xA;and Code_Route = route_header.Code)&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_accounts CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_accounts CI"
      DTS:DTSID="{E2A815CC-95C3-4B45-B531-B98D8522618C}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_accounts CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="46">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;UPDATE route_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = route_accounts.Code_Sales_Org and &#xA;accounts.code = route_accounts.Code_Account) &#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;UPDATE prj_route_accounts SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_route_accounts CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_route_accounts.Code_Route FROM ERP_IMPLT_route_accounts inner join route_header on ERP_IMPLT_route_accounts.Code_Route = route_header.Code_ofClient &#xA;&#x9;&#x9;inner join accounts on ERP_IMPLT_route_accounts.Code_Account = accounts.Code_ofClient where route_header.code = prj_route_accounts.Code_Route and &#xA;ERP_IMPLT_route_accounts.Code_Unit_Org = prj_route_accounts.Code_Unit_Org and ERP_IMPLT_route_accounts.Code_Sales_Org = prj_route_accounts.Code_Sales_Org and &#xA;accounts.code = prj_route_accounts.Code_Account) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_header"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_header"
      DTS:DTSID="{CA87D901-FB99-4D66-9306-A797AF37AFD0}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_header"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO route_header (Create_User, Create_Date, Modify_User, Modify_Date,  &#xA;   Platform, Code, Code_ofClient, Description, Code_Region, Seasonal, &#xA;   DayofWeek, Code_Unit_Org, Code_Sales_Org, TOUR_ID)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;+ cast(ROW_NUMBER() OVER (order by Code_ofClient) + 100000 as varchar(8)) as Code, &#xA;Code_ofClient, Description, Code_Region, Seasonal, &#xA;                      DayofWeek, Code_Unit_Org, Code_Sales_Org, TOUR_ID&#xA;FROM        ERP_IMPLT_route_header CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_ofClient from route_header &#xA;where Code_ofClient = ERP_IMPLT_route_header.Code_ofClient)&#xA;GO&#xA;&#xA;-- Modificación&#xA;-- Si la Organización en las rutas se mantiene desde Hydra hay que quitar el Code_Sales_Org y el Code_Unit_Org de estas queries&#xA;UPDATE route_header SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Description = MOD.Description, Code_Region = MOD.Code_Region, Seasonal = MOD.Seasonal, DayofWeek = MOD.DayofWeek, Code_Unit_Org = MOD.Code_Unit_Org, &#xA;&#x9;&#x9;Code_Sales_Org = MOD.Code_Sales_Org, TOUR_ID = MOD.TOUR_ID&#xA;FROM&#xA;(SELECT  Code_ofClient, Description, Code_Region, Seasonal, DayofWeek, Code_Unit_Org, Code_Sales_Org, TOUR_ID&#xA;FROM       ERP_IMPLT_route_header &#xA;EXCEPT&#xA;SELECT    Code_ofClient, Description, Code_Region, Seasonal, DayofWeek, Code_Unit_Org, Code_Sales_Org, TOUR_ID&#xA;FROM         route_header) as MOD INNER JOIN route_header ON MOD.Code_ofClient = route_header.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;GO&#xA;&#xA;-- Baja&#xA;UPDATE route_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_route_header where Code_ofClient = route_header.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE route_header SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  route_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_route_header where Code_ofClient = route_header.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Alta 6000&#xA;INSERT INTO route_header (Create_User, Create_Date, Modify_User, Modify_Date,  &#xA;   Platform, Code, Code_ofClient, Description, Code_Region, Seasonal, &#xA;   DayofWeek, Code_Unit_Org, Code_Sales_Org, TOUR_ID)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;+ cast(ROW_NUMBER() OVER (order by Code_ofClient) + 100000 as varchar(8)) as Code, &#xA;Code_ofClient, Description, Code_Region, Seasonal, &#xA;                      DayofWeek, Code_Unit_Org, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  '6000' as Code_Sales_Org, TOUR_ID&#xA;FROM        ERP_IMPLT_route_header CROSS JOIN View_System_Fields_ERP&#xA;WHERE Code_Sales_Org = '1000' AND not exists (SELECT Code_ofClient from route_header &#xA;where Code_ofClient = ERP_IMPLT_route_header.Code_ofClient)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_header CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_header CI"
      DTS:DTSID="{0036BEF2-C680-45B1-9374-C4DC6E42C417}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_header CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="47">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE route_header SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_header CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_route_header where Code_ofClient = route_header.Code_ofClient) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_sellers"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_sellers"
      DTS:DTSID="{56139E46-AEBC-48A9-B710-FCE30E3A6CD4}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_sellers"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO route_sellers (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Seller, &#xA;Code_Unit_Org, Code_Sales_Org, Code_Route)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;sellers.Code as Code_Seller, &#xA;ERP_IMPLT_route_sellers.Code_Unit_Org, &#xA;ERP_IMPLT_route_sellers.Code_Sales_Org, &#xA;route_header.Code as Code_Route&#xA;FROM        ERP_IMPLT_route_sellers &#xA;inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;AND route_header.Code_Sales_Org = ERP_IMPLT_Route_sellers.Code_Sales_Org&#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Seller, Code_Unit_Org, Code_Sales_Org, Code_Route from route_sellers where Code_Seller = sellers.Code and &#xA;Code_Unit_Org = ERP_IMPLT_route_sellers.Code_Unit_Org &#xA;and Code_Sales_Org = ERP_IMPLT_route_sellers.Code_Sales_Org &#xA;and Code_Route = route_header.Code)&#xA;GO&#xA;&#xA;-- Modificación (no existe modificación ya que solamente hay campos que forman parte de la PK)&#xA;&#xA;-- Baja&#xA;UPDATE route_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_route_sellers.Code_Route FROM ERP_IMPLT_route_sellers inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient where route_header.code = route_sellers.Code_Route and &#xA;ERP_IMPLT_route_sellers.Code_Unit_Org = route_sellers.Code_Unit_Org and ERP_IMPLT_route_sellers.Code_Sales_Org = route_sellers.Code_Sales_Org and &#xA;sellers.code = route_sellers.Code_Seller and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE route_sellers SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  route_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_route_sellers.Code_Route FROM ERP_IMPLT_route_sellers inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient where route_header.code = route_sellers.Code_Route and &#xA;ERP_IMPLT_route_sellers.Code_Unit_Org = route_sellers.Code_Unit_Org and ERP_IMPLT_route_sellers.Code_Sales_Org = route_sellers.Code_Sales_Org and &#xA;sellers.code = route_sellers.Code_Seller and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;&#xA;-- Alta 6000&#xA;INSERT INTO route_sellers (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Seller, Code_Unit_Org, Code_Sales_Org, Code_Route)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;sellers.Code as Code_Seller, ERP_IMPLT_route_sellers.Code_Unit_Org, &#xA;'6000' AS Code_Sales_Org, route_header.Code as Code_Route&#xA;FROM        ERP_IMPLT_route_sellers &#xA;inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;AND route_header.Code_Sales_Org = '6000'&#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE        (ERP_IMPLT_route_sellers.Code_Sales_Org = '1000') and not exists &#xA;(select Code_Seller, Code_Unit_Org, Code_Sales_Org, Code_Route &#xA;from route_sellers as &#xA;ao where ao.Code_Seller = ERP_IMPLT_route_sellers.Code_Seller &#xA;and ao.Code_Unit_Org = ERP_IMPLT_route_sellers.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;&#xA;--Update 6000&#xA;UPDATE route_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists &#xA;(SELECT ERP_IMPLT_route_sellers.Code_Route &#xA;FROM ERP_IMPLT_route_sellers inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient &#xA;where route_header.code = route_sellers.Code_Route and &#xA;ERP_IMPLT_route_sellers.Code_Unit_Org = route_sellers.Code_Unit_Org &#xA;and ERP_IMPLT_route_sellers.Code_Sales_Org = '6000' and &#xA;sellers.code = route_sellers.Code_Seller and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\route_sellers CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="route_sellers CI"
      DTS:DTSID="{7AFB9EE9-F48C-4301-9C56-17C8EDF96091}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="route_sellers CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="50">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE route_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  route_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_route_sellers.Code_Route FROM ERP_IMPLT_route_sellers inner join route_header on ERP_IMPLT_route_sellers.Code_Route = route_header.Code_ofClient &#xA;inner join sellers on ERP_IMPLT_route_sellers.Code_Seller = sellers.Code_ofClient where route_header.code = route_sellers.Code_Route and &#xA;ERP_IMPLT_route_sellers.Code_Unit_Org = route_sellers.Code_Unit_Org and ERP_IMPLT_route_sellers.Code_Sales_Org = route_sellers.Code_Sales_Org and &#xA;sellers.code = route_sellers.Code_Seller) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\sellers"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="sellers"
      DTS:DTSID="{EC6DF7C1-D184-4215-AD8A-6DEBFF640B68}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="sellers"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Creamos el Código de Telynet del Vendedor&#xA;INSERT INTO prj_assig_seller (Code_Seller)&#xA;SELECT     DISTINCT Code_ofClient&#xA;FROM         ERP_IMPLT_sellers&#xA;where Code_ofClient not in (SELECT Code_Seller FROM prj_assig_seller)&#xA;GO&#xA;&#xA;-- TABLA PRINCIPAL&#xA;-- Alta&#xA;INSERT INTO sellers (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, Code_ofClient, Code_Type, Description, First_Name, &#xA;                      Last_Name)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code_ofClient as Code,&#xA;--prj_assig_seller.Id as Code, &#xA;Code_ofClient, Code_Type, &#xA;Description, First_Name, Last_Name&#xA;FROM         ERP_IMPLT_sellers inner join  prj_assig_seller &#xA;on ERP_IMPLT_sellers.Code_ofClient = prj_assig_seller.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;WHERE prj_assig_seller.Code_Seller not in (SELECT Code from sellers)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE sellers SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Type = MOD.Code_Type, Description = MOD.Description, First_Name = MOD.First_Name, Last_Name = MOD.Last_Name &#xA;FROM&#xA;(SELECT  &#xA;Code_ofClient as Code,&#xA;--prj_assig_seller.id as Code, &#xA;Code_ofClient, Code_Type, Description, First_Name, Last_Name&#xA;FROM         ERP_IMPLT_sellers inner join prj_assig_seller on prj_assig_seller.Code_Seller = ERP_IMPLT_sellers.Code_ofClient&#xA;EXCEPT&#xA;SELECT     Code, Code_ofClient, Code_Type, Description, First_Name, Last_Name&#xA;FROM         sellers) as MOD INNER JOIN sellers ON MOD.Code = sellers.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_sellers where Code_ofClient = sellers.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE sellers SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_sellers where Code_ofClient = sellers.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Creamos el vendedor Virtual 9999&#xA;INSERT INTO sellers (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_ofClient, Code_Type, Description, First_Name, Last_Name)&#xA;SELECT Create_User, Create_Date, Modify_User, Modify_Date, Platform, 9999 as Code, '9999' as Code_ofClient, '02' as Code_Type, 'Vendedor Virtual' as Description, 'Virtual' as First_Name, 'Virtual' as Last_Name&#xA;FROM View_System_Fields_ERP&#xA;WHERE 9999 not in (select Code from sellers)&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Alta&#xA;INSERT INTO prj_sellers (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, Employee_SSO, Address, Population, ZIP, &#xA;                      Code_Country, Located, Latitude, Length, Phone, Phone2, Code_Seller_Del, IVA_Amount, Retention_Amount, Print_Order)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code_ofClient as Code,&#xA;--prj_assig_seller.Id as Code, &#xA;Employee_SSO, Address, Population, ZIP, &#xA;                      Code_Country, Located, Latitude, Length, Phone, Phone2, prj_assig_seller_1.Id as Code_Seller_Del, IVA_Amount, Retention_Amount, Print_Order&#xA;FROM         ERP_IMPLT_sellers inner join  prj_assig_seller on ERP_IMPLT_sellers.Code_ofClient = prj_assig_seller.Code_Seller &#xA;left join prj_assig_seller as prj_assig_seller_1 on ERP_IMPLT_sellers.Code_Seller_Del = prj_assig_seller.Code_Seller CROSS JOIN View_System_Fields_ERP&#xA;WHERE prj_assig_seller.Code_Seller not in (SELECT Code from prj_sellers)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE prj_sellers SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;Employee_SSO = MOD.Employee_SSO, Address = MOD.Address, Population = MOD.Population, ZIP = MOD.ZIP, &#xA;&#x9;Code_Country = MOD.Code_Country, Located = MOD.Located, Latitude = MOD.Latitude, Length = MOD.Length, Phone = MOD.Phone, Phone2 = MOD.Phone2, Code_Seller_Del = MOD.Code_Seller_Del, &#xA;&#x9;IVA_Amount = MOD.IVA_Amount, Retention_Amount = MOD.Retention_Amount, Print_Order = MOD.Print_Order &#xA;FROM&#xA;(SELECT  &#xA;Code_ofClient as Code,&#xA;--prj_assig_seller.id as Code, &#xA;Employee_SSO, Address, Population, ZIP, &#xA;                      Code_Country, Located, Latitude, Length, Phone, Phone2, prj_assig_seller_1.Id as Code_Seller_Del, IVA_Amount, Retention_Amount, Print_Order&#xA;FROM         ERP_IMPLT_sellers inner join prj_assig_seller on prj_assig_seller.Code_Seller = ERP_IMPLT_sellers.Code_ofClient&#xA;left join prj_assig_seller as prj_assig_seller_1 on ERP_IMPLT_sellers.Code_Seller_Del = prj_assig_seller.Code_Seller&#xA;EXCEPT&#xA;SELECT     Code, Employee_SSO, Address, Population, ZIP, &#xA;                      Code_Country, Located, Latitude, Length, Phone, Phone2, Code_Seller_Del, IVA_Amount, Retention_Amount, Print_Order&#xA;FROM         prj_sellers) as MOD INNER JOIN prj_sellers ON MOD.Code = prj_sellers.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE prj_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT prj_assig_seller.Code_Seller &#xA;FROM ERP_IMPLT_sellers inner join prj_assig_seller &#xA;on prj_assig_seller.Code_Seller = ERP_IMPLT_sellers.Code_ofClient &#xA;where prj_assig_seller.Code_Seller = prj_sellers.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE prj_sellers SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  prj_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT prj_assig_seller.Code_Seller &#xA;FROM ERP_IMPLT_sellers inner join prj_assig_seller &#xA;on prj_assig_seller.Code_Seller = ERP_IMPLT_sellers.Code_ofClient &#xA;where prj_assig_seller.Code_Seller = prj_sellers.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Creamos el vendedor Virtual 9999&#xA;INSERT INTO prj_sellers (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Employee_SSO, Address, Population, ZIP, &#xA;                         Code_Country, Located, Latitude, Length, Phone, Phone2, Code_Seller_Del, IVA_Amount, Retention_Amount, Print_Order)&#xA;SELECT Create_User, Create_Date, Modify_User, Modify_Date, Platform, 9999 as Code, NULL as Employee_SSO, NULL as Address, NULL as Population, NULL as ZIP, NULL as Code_Country, NULL as Located, NULL as Latitude, &#xA;        NULL as Length, NULL as Phone, NULL as Phone2, NULL as Code_Seller_Del, NULL as IVA_Amount, NULL as Retention_Amount, &#xA;&#x9;&#x9;NULL as Print_Order&#xA;FROM View_System_Fields_ERP &#xA;WHERE 9999 not in (select Code from prj_sellers)&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\sellers CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="sellers CI"
      DTS:DTSID="{835B399B-BBDF-4CAB-BA12-FA086793EF95}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="sellers CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="51">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- TABLA PRINCIPAL&#xA;-- Borrado por carga inicial&#xA;-- Controlamos por si hemos creado manualmente el usuario genérico 9999&#xA;UPDATE sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_sellers where Code_ofClient = sellers.Code_ofClient) and Code &lt;&gt; '9999'&#xA;GO&#xA;&#xA;-- TABLA EXTENDIDA&#xA;-- Borrado por carga inicial&#xA;-- Controlamos por si hemos creado manualmente el usuario genérico 9999&#xA;UPDATE prj_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  prj_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT prj_assig_seller.id FROM ERP_IMPLT_sellers inner join prj_assig_seller on prj_assig_seller.code_seller = ERP_IMPLT_sellers.Code_ofClient where prj_assig_seller.id = prj_sellers.Code) and Code &lt;&gt; '9999'&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Split_Imp_Final"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{66795E0A-C961-4025-B36C-3583B4A91852}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Split_Imp_Final"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- ESTAS QUERIES SI FALTAN DATOS DEL SPLIT DE LA SALES ORG 1000 A LA 6000 LOS METE DIRECTAMENTE EN LAS TABLAS MAESTRAS&#xA;-- ESTO HAY QUE EJECUTARLO CUANDO SE TERMINEN DE PASAR LOS DATOS A LAS TABLAS MAESTRAS&#xA;&#xA;-- accounts_og&#xA;INSERT INTO accounts_org (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Potential, Potential, Code_Status, Code_Hierarchy1, &#xA;                         Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, Transfered, Code_ClassificationA, Code_ClassificationB, Code_Frecuency_V, &#xA;                         Code_Week_V, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, Visit_Sat_Order, Visit_Sun_Order, &#xA;                         Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, Dely_Mon_Order, Dely_Tue_Order, Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, &#xA;                         Dely_Sun_Order, Client_Group)&#xA;SELECT   Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Potential, Potential, Code_Status, Code_Hierarchy1, &#xA;                         Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, Transfered, Code_ClassificationA, Code_ClassificationB, Code_Frecuency_V, &#xA;                         Code_Week_V, Visit_Mon, Visit_Tue, Visit_Wen, Visit_Thu, Visit_Fri, Visit_Sat, Visit_Sun, Visit_Mon_Order, Visit_Tue_Order, Visit_Wen_Order, Visit_Thu_Order, Visit_Fri_Order, Visit_Sat_Order, Visit_Sun_Order, &#xA;                         Code_Frecuency_D, Code_Week_D, Dely_Mon, Dely_Tue, Dely_Wen, Dely_Thu, Dely_Fri, Dely_Sat, Dely_Sun, Dely_Mon_Order, Dely_Tue_Order, Dely_Wen_Order, Dely_Thu_Order, Dely_Fri_Order, Dely_Sat_Order, &#xA;                         Dely_Sun_Order, Client_Group&#xA;FROM            accounts_org&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select code_account, Code_Unit_Org, Code_Sales_Org from accounts_org as ao where ao.code_account = accounts_org.code_account and ao.Code_Unit_Org = accounts_org.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;GO&#xA;&#xA;INSERT INTO accounts_organization (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Potential, Potential, Code_Status, Code_Hierarchy1, &#xA;                         Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, Transfered, Code_ClassificationA, Code_ClassificationB)&#xA;SELECT     Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Seller, Code_Potential, Potential, Code_Status, Code_Hierarchy1, &#xA;                         Code_Hierarchy2, Code_Hierarchy3, Hierarchy_Table, TextLastHierarchy, Code_ClassificationC, Code_ClassificationD, Code_Team, Blocked, Transfered, Code_ClassificationA, Code_ClassificationB&#xA;FROM            accounts_organization&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select code_account, Code_Unit_Org, Code_Sales_Org from accounts_organization as ao where ao.code_account = accounts_organization.code_account and ao.Code_Unit_Org = accounts_organization.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;GO&#xA;&#xA;INSERT INTO prj_accounts_organization (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Payment, Code_Price_list, Code_Plant, Code_St_Bill, &#xA;                         Code_St_Trans, Code_St_Del, Code_Currency, Sales_Office, Incoterms, Transfered, Code_Provider, Code_Segment, Logistic, Code_Account_Provider, Number_Bank, Price_Schema, IBAN, Code_Com_Agent, &#xA;                         Code_ClassificationE, Discount_Allowed, Document_Type, Delivery_Note, IVA_Return, Observations, Notes, Code_Hierarchy4, Code_Hierarchy5, Valued, Code_Payment_method)&#xA;SELECT   Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Payment, '02072018' as Code_Price_list, Code_Plant, Code_St_Bill, &#xA;                         Code_St_Trans, Code_St_Del, Code_Currency, Sales_Office, Incoterms, Transfered, Code_Provider, Code_Segment, Logistic, Code_Account_Provider, Number_Bank, '1' as Price_Schema, IBAN, Code_Com_Agent, &#xA;                         Code_ClassificationE, Discount_Allowed, Document_Type, Delivery_Note, IVA_Return, Observations, Notes, Code_Hierarchy4, Code_Hierarchy5, Valued, Code_Payment_method&#xA;FROM            prj_accounts_organization&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select code_account, Code_Unit_Org, Code_Sales_Org from prj_accounts_organization as ao where ao.code_account = prj_accounts_organization.code_account and ao.Code_Unit_Org = prj_accounts_organization.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;GO&#xA;&#xA;-- accounts_function&#xA;INSERT INTO accounts_function (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, Code_Sales_Org, Code_Function, Code_Type_Function, By_Default, ValidFrom, ValidTo, &#xA;                         Transfered)&#xA;SELECT        Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Account, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Function, Code_Type_Function, By_Default, ValidFrom, ValidTo, &#xA;                         Transfered&#xA;FROM            accounts_function&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select code_account, Code_Unit_Org, Code_Sales_Org from accounts_function as ao where ao.code_account = accounts_function.code_account and ao.Code_Unit_Org = accounts_function.Code_Unit_Org and ao.Code_Sales_Org = '6000' and accounts_function.Code_Function = ao.Code_Function and accounts_function.Code_Type_Function = ao.Code_Type_Function)&#xA;GO&#xA;&#xA;-- products_organization&#xA;INSERT INTO products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, &#xA;                         Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, &#xA;                         Code_Hierarchy5)&#xA;SELECT       Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Product, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Status, Lock, Factor_Conversion, Unit_Box, Unit_Pallet, &#xA;                         Unit_Type_Sales, Unit_Type_Inv, Code_ClassificationD, Code_ClassificationE, Code_ClassificationA, Code_ClassificationB, Code_ClassificationC, Code_Hierarchy1, Code_Hierarchy2, Code_Hierarchy3, Code_Hierarchy4, &#xA;                         Code_Hierarchy5&#xA;FROM            products_organization&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select Code_Product, Code_Unit_Org, Code_Sales_Org from products_organization as ao where ao.Code_Product = products_organization.Code_Product and ao.Code_Unit_Org = products_organization.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;GO&#xA;&#xA;insert into prj_products_organization (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Product, Code_Unit_Org, Code_Sales_Org, Code_Frecuency, Min_Quantity_Order, Unit_Order, Min_Quantity_Del, &#xA;                         Unit_Del, Code_Hierarchy6, Weight_Variable, Origin_Society, Has_Weight_Management, Trazability)&#xA;SELECT      Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Product, Code_Unit_Org, '6000' as Code_Sales_Org, Code_Frecuency, Min_Quantity_Order, Unit_Order, Min_Quantity_Del, &#xA;                         Unit_Del, Code_Hierarchy6, Weight_Variable, Origin_Society, Has_Weight_Management, Trazability&#xA;FROM            prj_products_organization&#xA;WHERE        (Code_Sales_Org = '1000') and not exists (select Code_Product, Code_Unit_Org, Code_Sales_Org from prj_products_organization as ao where ao.Code_Product = prj_products_organization.Code_Product and ao.Code_Unit_Org = prj_products_organization.Code_Unit_Org and ao.Code_Sales_Org = '6000')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea Actualizar estadísticas"
      DTS:CreationName="Microsoft.SqlServer.Management.DatabaseMaintenance.DbMaintenanceUpdateStatisticsTask, Microsoft.SqlServer.MaintenancePlanTasks, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Actualizar estadísticas"
      DTS:DTSID="{92E7064C-7570-427F-875F-4440F349CD41}"
      DTS:ExecutableType="Microsoft.SqlServer.Management.DatabaseMaintenance.DbMaintenanceUpdateStatisticsTask, Microsoft.SqlServer.MaintenancePlanTasks, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea Actualizar estadísticas"
      DTS:TaskContact="Update Statistics Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F6D18082-B760-414A-89F8-75F34B042CB0}"
          SQLTask:DatabaseSelectionType="4"
          SQLTask:ServerVersion="9"
          SQLTask:ExtendedLogging="True"
          SQLTask:LocalConnectionForLogging=""
          SQLTask:TaskName=""
          SQLTask:IgnoreDatabasesInNotOnlineState="False"
          SQLTask:UpdateStatisticsType="2"
          SQLTask:UpdateScanType="3"
          SQLTask:UpdateSampleValue="50" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:SelectedDatabases
            SQLTask:DatabaseName="crm3_cesar_iglesias" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea Volver a generar índice"
      DTS:CreationName="Microsoft.SqlServer.Management.DatabaseMaintenance.DbMaintenanceReindexTask, Microsoft.SqlServer.MaintenancePlanTasks, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Tarea Volver a generar índice"
      DTS:DTSID="{DDAE94CE-1181-4B66-84E8-1C4CB0533DE9}"
      DTS:ExecutableType="Microsoft.SqlServer.Management.DatabaseMaintenance.DbMaintenanceReindexTask, Microsoft.SqlServer.MaintenancePlanTasks, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea Volver a generar índice"
      DTS:TaskContact="Rebuild Index Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{F6D18082-B760-414A-89F8-75F34B042CB0}"
          SQLTask:DatabaseSelectionType="4"
          SQLTask:ServerVersion="13"
          SQLTask:ExtendedLogging="True"
          SQLTask:LocalConnectionForLogging=""
          SQLTask:TaskName=""
          SQLTask:IgnoreDatabasesInNotOnlineState="False"
          SQLTask:UseOriginalAmount="True"
          SQLTask:Percentage="-1"
          SQLTask:Sort="False"
          SQLTask:KeepOnline="True"
          SQLTask:SkipUnsupported="False" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:SelectedDatabases
            SQLTask:DatabaseName="crm3_cesar_iglesias" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\target_sales_head"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4D4BC078-824D-4CC5-8759-835E94DE459E}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="target_sales_head"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="----Llenar la target_sales_head---&#xA;------------------------------------------------------------------------------&#xA;&#xA;--El UPDATE no sirve&#xA;delete from target_sales_head&#xA;GO&#xA;&#xA;insert into target_sales_head (Create_User,Create_Date,&#xA;Modify_User, Modify_Date, Platform,&#xA;Code, Code_ofClient, Code_Family, Description, Date_Ini, Date_End, Code_Type,&#xA;Code_Level, Amount, Unit_Sales, Code_Status, Apply_Val)&#xA;select distinct &#xA;view_system_fields_erp.Create_user, view_system_fields_erp.Create_Date,&#xA;view_system_fields_erp.Modify_User, view_system_fields_erp.Modify_Date, view_system_fields_erp.Platform,&#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','')  &#xA;+ cast(ROW_NUMBER() OVER (order by Code) + 100000 as varchar(8)) as Code, &#xA;Code_ofClient, Code_Family, Description, &#xA;Date_Ini, Date_End, Code_Type, &#xA;Code_Level, Amount, Unit_Sales,&#xA;Code_Status, Apply_Val&#xA;from ERP_IMPLT_target_sales_head&#xA;cross join view_system_fields_erp&#xA;WHERE not exists (SELECT Code_ofClient, Code_Family FROM target_sales_head &#xA;WHERE ERP_IMPLT_target_sales_head.Code_ofClient = target_sales_head.Code_ofClient) &#xA;&#xA;------------------------------------------------------------------------------&#xA;--UPDATE&#xA;------------------------------------------------------------------------------&#xA;&#xA;UPDATE target_sales_head SET Create_User = View_System_Fields_ERP.Create_User , &#xA;Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , &#xA;&#x9;&#x9;Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, &#xA;&#x9;&#x9;Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Family = MOD.Code_Family, Description = MOD.Description, &#xA;Date_Ini = MOD.Date_Ini, Date_End = MOD.Date_End, Code_Type = MOD.Code_Type, &#xA;Code_Level = MOD.Code_Level, Amount = MOD.Amount, Unit_Sales = MOD.Unit_Sales,&#xA;Code_Status = MOD.Code_Status, Apply_Val = MOD.Apply_Val&#xA;FROM (select distinct Code_ofClient,&#xA;Code_Family, Description, &#xA;Date_Ini, Date_End, Code_Type, &#xA;Code_Level, Amount, Unit_Sales,&#xA;Code_Status, Apply_Val&#xA;FROM ERP_IMPLT_target_sales_head&#xA;EXCEPT&#xA;SELECT   Code_ofClient, &#xA;    Code_Family, Description, Date_Ini, Date_End, Code_Type, &#xA;Code_Level, Amount, Unit_Sales,&#xA;Code_Status, Apply_Val&#xA;FROM         target_sales_head) as MOD INNER JOIN target_sales_head &#xA;ON MOD.Code_ofClient = target_sales_head.Code_ofClient CROSS JOIN View_System_Fields_ERP" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\trucks"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="trucks"
      DTS:DTSID="{FC448E40-B3A7-4F8C-9824-D302C513C3D6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="trucks"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO trucks (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Registration, Code_Warehouse, Capacity, &#xA;                      Code_Type, Code_Seller)&#xA;SELECT distinct &#xA;View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date, &#xA; View_System_Fields_ERP.Platform,   &#xA;ERP_IMPLT_trucks.Code, &#xA;ERP_IMPLT_trucks.Description, Registration, warehouses.Code as Code_Warehouse, &#xA;ERP_IMPLT_trucks.Capacity, ERP_IMPLT_trucks.Code_Type, sellers.Code AS Code_Seller&#xA;FROM        ERP_IMPLT_trucks left join warehouses on ERP_IMPLT_trucks.Code_Warehouse = warehouses.Code_ofClient &#xA;left join sellers on ERP_IMPLT_trucks.Code_Seller = sellers.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code from trucks where Code = ERP_IMPLT_trucks.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE trucks SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;  Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;  Description = MOD.Description, Registration = MOD.Registration, &#xA;  Code_Warehouse = MOD.Code_Warehouse, &#xA;  Capacity = MOD.Capacity, Code_Type = MOD.Code_Type, Code_Seller = MOD.Code_Seller&#xA;FROM&#xA;(SELECT  ERP_IMPLT_trucks.Code, ERP_IMPLT_trucks.Description, &#xA;Registration, warehouses.Code as Code_Warehouse, &#xA;ERP_IMPLT_trucks.Capacity, ERP_IMPLT_trucks.Code_Type, sellers.code as Code_Seller&#xA;FROM       ERP_IMPLT_trucks left join warehouses on ERP_IMPLT_trucks.Code_Warehouse = warehouses.Code_ofClient &#xA;left join sellers on ERP_IMPLT_trucks.Code_Seller = sellers.Code_ofClient&#xA;WHERE ERP_IMPLT_trucks.Code_Warehouse IS NOT NULL&#xA;EXCEPT&#xA;SELECT  Code, Description, Registration, &#xA;Code_Warehouse, &#xA;Capacity, Code_Type, &#xA;Code_Seller&#xA;FROM         trucks) as MOD INNER JOIN trucks ON MOD.Code = trucks.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE trucks SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  trucks CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_trucks where Code = trucks.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE trucks SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  trucks CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_trucks where Code = trucks.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\trucks CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="trucks CI"
      DTS:DTSID="{3ADDFB4B-76D7-441B-AA65-5E8CC8EBF748}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="trucks CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="49">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE trucks SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  trucks CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_trucks where Code = trucks.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\type_unit"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="type_unit"
      DTS:DTSID="{7E60E07B-B821-4242-B719-86CFEA3FCFAC}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="type_unit"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Por si no hemos recibido todos los valores. Evitamos problemas de integridad&#xA;INSERT INTO ERP_IMPLT_type_unit (Code, Description, Source_Create, Transfer_status, Status_SAP)&#xA;SELECT Code, Description, '0' as Source_Create, '101' as Transfer_status, NULL as Status_SAP FROM&#xA;(SELECT     Code_Unit as Code, Code_Unit as Description&#xA;FROM         ERP_IMPLT_unit_control&#xA;UNION&#xA;SELECT     Unit_Measure AS Code, Unit_Measure AS Description&#xA;FROM         ERP_IMPLT_products_measure&#xA;UNION&#xA;SELECT     Unit_Type_Measure AS Code, Unit_Type_Measure AS Description&#xA;FROM         ERP_IMPLT_products_measure AS ERP_IMPLT_products_measure_2&#xA;UNION&#xA;SELECT     Unit_Measure_Weight AS Code, Unit_Measure_Weight AS Description&#xA;FROM         ERP_IMPLT_products_measure AS ERP_IMPLT_products_measure_1&#xA;UNION&#xA;SELECT     Unit_Type_Sales AS Code, Unit_Type_Sales AS Description&#xA;FROM         ERP_IMPLT_products_organization&#xA;UNION&#xA;SELECT     Unit_Type_Inv AS Code, Unit_Type_Inv AS Description&#xA;FROM         ERP_IMPLT_products_organization AS ERP_IMPLT_products_organization_1&#xA;UNION&#xA;SELECT     Unit_Type_Sales AS Code, Unit_Type_Sales AS Description&#xA;FROM         ERP_IMPLT_products&#xA;UNION&#xA;SELECT     Unit_Type_Inv AS Code, Unit_Type_Inv AS Description&#xA;FROM         ERP_IMPLT_products AS ERP_IMPLT_products_1) as TU&#xA;WHERE Code not in (SELECT Code from type_unit where Code = TU.Code) and Code not in (SELECT Code from ERP_IMPLT_type_unit where Code = TU.Code) and Code is not NULL&#xA;GO&#xA;&#xA;-- Alta&#xA;INSERT INTO type_unit (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Description, Orden)&#xA;SELECT     View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;                      View_System_Fields_ERP.Platform, Code, Description, 1 as Orden&#xA;FROM         ERP_IMPLT_type_unit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE not exists (SELECT code FROM type_unit where Code = ERP_IMPLT_type_unit.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE type_unit SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;Description = MOD.Description FROM&#xA;(SELECT  Code, Description&#xA;FROM         ERP_IMPLT_type_unit&#xA;EXCEPT&#xA;SELECT     Code, Description&#xA;FROM         type_unit) as MOD INNER JOIN type_unit ON MOD.Code = type_unit.Code CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE type_unit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  type_unit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code FROM ERP_IMPLT_type_unit where Code = type_unit.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE type_unit SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  type_unit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code FROM ERP_IMPLT_type_unit where Code = type_unit.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\type_unit CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="type_unit CI"
      DTS:DTSID="{783338CF-C5A5-4151-8191-7359996F469C}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="type_unit CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="48">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE type_unit SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  type_unit CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code FROM ERP_IMPLT_type_unit where Code = type_unit.Code)  &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\type_unit_control"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="type_unit_control"
      DTS:DTSID="{760122CC-D155-42D6-BB49-E195F73288D0}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="type_unit_control"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO type_unit_control (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code, Code_product, Control1, Control2, Control3, Control4, &#xA;                      Control5, Control6, Control7, Control8, Control9, Control10, Control11)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;&#x9;Code_Unit as Code, products.Code as Code_Product, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11&#xA;FROM        ERP_IMPLT_unit_control inner join products on ERP_IMPLT_unit_control.Code_product = products.Code_ofClient CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code, Code_Product from type_unit_control where Code_product = products.Code and Code = ERP_IMPLT_unit_control.Code_Unit)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE type_unit_control SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Control1 = MOD.Control1, Control2 = MOD.Control2, Control3 = MOD.Control3, Control4 = MOD.Control4, Control5 = MOD.Control5, Control6 = MOD.Control6, &#xA;&#x9;&#x9;Control7 = MOD.Control7, Control8 = MOD.Control8, Control9 = MOD.Control9, Control10 = MOD.Control10, Control11 = MOD.Control11&#xA;FROM&#xA;(SELECT Code_Unit as Code, products.Code as Code_Product, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11&#xA;FROM   ERP_IMPLT_unit_control inner join products on ERP_IMPLT_unit_control.Code_product = products.Code_ofClient &#xA;     EXCEPT&#xA;     SELECT  Code, Code_Product, Control1, Control2, Control3, Control4, Control5, Control6, Control7, Control8, Control9, Control10, Control11&#xA;FROM         type_unit_control) as MOD INNER JOIN type_unit_control ON MOD.Code_product = type_unit_control.Code_Product and MOD.Code = type_unit_control.Code&#xA;CROSS JOIN View_System_Fields_ERP&#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE type_unit_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  type_unit_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT ERP_IMPLT_unit_control.Code_Unit, ERP_IMPLT_unit_control.Code_product FROM ERP_IMPLT_unit_control inner join products on ERP_IMPLT_unit_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = type_unit_control.Code_Product and ERP_IMPLT_unit_control.Code_Unit = type_unit_control.Code and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE type_unit_control SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  type_unit_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT ERP_IMPLT_unit_control.Code_Unit, ERP_IMPLT_unit_control.Code_product FROM ERP_IMPLT_unit_control inner join products on ERP_IMPLT_unit_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = type_unit_control.Code_Product and ERP_IMPLT_unit_control.Code_Unit = type_unit_control.Code and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\type_unit_control CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="type_unit_control CI"
      DTS:DTSID="{DEDBABBB-8E55-4AC9-B03A-D6268E166273}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="type_unit_control CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="22">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE type_unit_control SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  type_unit_control CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT ERP_IMPLT_unit_control.Code_Unit, ERP_IMPLT_unit_control.Code_product FROM ERP_IMPLT_unit_control inner join products on ERP_IMPLT_unit_control.Code_product = products.Code_ofClient &#xA;&#x9;&#x9;where products.code = type_unit_control.Code_Product and ERP_IMPLT_unit_control.Code_Unit = type_unit_control.Code) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\unit_sales_organ_seller"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="unit_sales_organ_seller"
      DTS:DTSID="{5E05583F-BA65-4D90-8D29-5C2F1A840890}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="unit_sales_organ_seller"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO unit_sales_organ_seller (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Manager)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code_Unit_Org, Code_Sales_Org, sellers.Code as Code_Seller, sellers_1.Code as Code_Manager&#xA;FROM      ERP_IMPLT_unit_sales_organ_seller inner join  sellers on ERP_IMPLT_unit_sales_organ_seller.Code_Seller = sellers.Code_ofClient &#xA;left join sellers as sellers_1 on ERP_IMPLT_unit_sales_organ_seller.Code_Manager = sellers_1.Code_ofClient  CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Unit_Org, Code_Sales_Org, Code_Seller FROM unit_sales_organ_seller WHERE Code_Unit_Org = ERP_IMPLT_unit_sales_organ_seller.Code_Unit_Org &#xA;and Code_Sales_Org = ERP_IMPLT_unit_sales_organ_seller.Code_Sales_Org and Code_Seller = Sellers.Code)&#xA;GO&#xA;&#xA;-- Modificación&#xA;UPDATE unit_sales_organ_seller SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;&#x9;&#x9;Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;&#x9;&#x9;Code_Manager = MOD.Code_Manager &#xA;FROM&#xA;(SELECT  Code_Unit_Org, Code_Sales_Org, sellers.code as Code_Seller, sellers_1.code as Code_Manager&#xA;FROM        ERP_IMPLT_unit_sales_organ_seller inner join  sellers on ERP_IMPLT_unit_sales_organ_seller.Code_Seller = sellers.Code_ofClient &#xA;left join sellers as sellers_1 on ERP_IMPLT_unit_sales_organ_seller.Code_Manager = sellers_1.Code_ofClient &#xA;EXCEPT&#xA;SELECT     Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Manager&#xA;FROM         unit_sales_organ_seller) as MOD INNER JOIN unit_sales_organ_seller ON MOD.Code_Seller = unit_sales_organ_seller.Code_Seller and &#xA;MOD.Code_Unit_Org = unit_sales_organ_seller.Code_Unit_Org and MOD.Code_Sales_Org = unit_sales_organ_seller.Code_Sales_Org CROSS JOIN View_System_Fields_ERP&#xA;GO&#xA;&#xA;-- Baja&#xA;UPDATE unit_sales_organ_seller SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  unit_sales_organ_seller CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT sellers.Code FROM ERP_IMPLT_unit_sales_organ_seller inner join sellers on ERP_IMPLT_unit_sales_organ_seller.Code_Seller = sellers.Code_ofClient &#xA;where sellers.Code = unit_sales_organ_seller.Code_Seller and ERP_IMPLT_unit_sales_organ_seller.Code_Unit_Org = unit_sales_organ_seller.Code_Unit_Org &#xA;and ERP_IMPLT_unit_sales_organ_seller.Code_Sales_Org = unit_sales_organ_seller.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE unit_sales_organ_seller SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  unit_sales_organ_seller CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  delete_date is null and exists (SELECT sellers.Code FROM ERP_IMPLT_unit_sales_organ_seller inner join sellers on ERP_IMPLT_unit_sales_organ_seller.Code_Seller = sellers.Code_ofClient &#xA;where sellers.Code = unit_sales_organ_seller.Code_Seller and ERP_IMPLT_unit_sales_organ_seller.Code_Unit_Org = unit_sales_organ_seller.Code_Unit_Org &#xA;and ERP_IMPLT_unit_sales_organ_seller.Code_Sales_Org = unit_sales_organ_seller.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO&#xA;&#xA;-- Creamos el vendedor Virtual 9999 para todas las organizaciones&#xA;INSERT INTO unit_sales_organ_seller (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_Unit_Org, Code_Sales_Org, Code_Seller, Code_Manager)&#xA;SELECT  View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code_Unit_Org, Code_Sales_Org, 9999 as Code_Seller, NULL as Code_Manager&#xA;FROM      unit_sales_organization CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_Unit_Org, Code_Sales_Org, Code_Seller FROM unit_sales_organ_seller WHERE Code_Unit_Org = unit_sales_organization.Code_Unit_Org &#xA;and Code_Sales_Org = unit_sales_organization.Code_Sales_Org and Code_Seller = 9999)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\unit_sales_organ_seller CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="unit_sales_organ_seller CI"
      DTS:DTSID="{F82EE55F-95B6-4E2F-B5A2-C958ADFF24E6}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="unit_sales_organ_seller CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="32">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;-- Controlamos por si hemos creado manualmente el usuario genérico 9999&#xA;UPDATE unit_sales_organ_seller SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  unit_sales_organ_seller CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT sellers.Code, ERP_IMPLT_unit_sales_organ_seller.Code_Unit_Org, ERP_IMPLT_unit_sales_organ_seller.Code_Sales_Org &#xA;FROM ERP_IMPLT_unit_sales_organ_seller inner join sellers on ERP_IMPLT_unit_sales_organ_seller.Code_Seller = sellers.Code_ofClient where &#xA;Sellers.Code = unit_sales_organ_seller.Code_Seller and ERP_IMPLT_unit_sales_organ_seller.Code_Unit_Org = unit_sales_organ_seller.Code_Unit_Org &#xA;and ERP_IMPLT_unit_sales_organ_seller.Code_Sales_Org = unit_sales_organ_seller.Code_Sales_Org) and Code_Seller &lt;&gt; '9999'&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update accounts_organization"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A5A100C2-83B3-4C20-BC0C-CFE73DD91E7F}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update accounts_organization"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="UPDATE dbo.prj_accounts_organization SET price_schema = '1' WHERE price_schema IS NULL OR price_schema = '0'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\UPDATE ERP_Pricing"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A897CD5B-AC32-4C00-8A2A-0FACDEDDEAB0}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="UPDATE ERP_Pricing"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="UPDATE ERP_IMPLT_pricing_tables SET Code2 = '0' + Code2&#xA;WHERE LEN(ERP_IMPLT_pricing_tables.Code2) = 1&#xA;&#xA;UPDATE ERP_IMPLT_pricing_esc SET Code2 = '0' + Code2&#xA;WHERE LEN(ERP_IMPLT_pricing_esc.Code2) = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Update_Products_Measure"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{971982F7-808C-4777-B935-7D96B1155FBB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Update_Products_Measure"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="INSERT INTO products_measure (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_Product, Unit_Measure, Factor_Conversion)&#xA;SELECT        Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code as Code_Product, 'UN' as Unit_Measure, 1.000 as Factor_Conversion&#xA;                               FROM            products&#xA;                               WHERE        (Code NOT IN&#xA;                                                             (SELECT        Code_Product&#xA;                                                               FROM            products_measure))" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\users_counter"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="users_counter"
      DTS:DTSID="{AC4E2FBF-A049-459E-88E9-742514D078B3}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="users_counter"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Solamente tratamos las altas y usamos el vendedor asociado al usuario&#xA;INSERT INTO users_counter (Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, Platform, Code_User, Type, Series, N_Counter)&#xA;SELECT Create_User, Create_Date, Modify_User, Modify_Date, Delete_User, Delete_Date, &#xA;Platform, Code_User, Type, Series, N_Counter FROM&#xA;(SELECT     sellers.Create_User, &#xA;sellers.Create_Date, &#xA;sellers.Modify_User, &#xA;sellers.Modify_Date, &#xA;sellers.Delete_User, &#xA;sellers.Delete_Date, &#xA;sellers.Platform, &#xA;                      ERP_IMPLT_users.Code AS Code_User, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  'I' AS Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; -- '9' + CAST(sellers.Code AS varchar(10)) AS Series, --No se porque esta asi&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;-- '9' + CAST(RIGHT(sellers.Code,4) AS varchar(5))AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'9' + CAST(ROW_NUMBER() OVER (ORDER BY sellers.Code)AS varchar(5)) AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  0 AS N_Counter&#xA;FROM         ERP_IMPLT_users INNER JOIN&#xA;                      sellers ON ERP_IMPLT_users.Code = sellers.Code_ofClient&#xA;UNION&#xA;SELECT     sellers.Create_User, sellers.Create_Date, sellers.Modify_User, &#xA;sellers.Modify_Date, sellers.Delete_User, &#xA;sellers.Delete_Date, sellers.Platform, &#xA;                      ERP_IMPLT_users.Code AS Code_User, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  'O' AS Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--  '8' + CAST(sellers.Code AS varchar(10)) AS Series, --No se porque esta asi&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--'8' + CAST (RIGHT(sellers.Code,4) AS varchar(5))AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;'8' + CAST(ROW_NUMBER() OVER (ORDER BY sellers.Code)AS varchar(5)) AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  0 AS N_Counter&#xA;FROM         ERP_IMPLT_users INNER JOIN&#xA;                      sellers ON ERP_IMPLT_users.Code = sellers.Code_ofClient&#xA;UNION&#xA;SELECT     sellers.Create_User, sellers.Create_Date, sellers.Modify_User, sellers.Modify_Date, &#xA;sellers.Delete_User, sellers.Delete_Date, sellers.Platform, &#xA;                      ERP_IMPLT_users.Code AS Code_User, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  'R' AS Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--  '7' + CAST(sellers.Code AS varchar(10)) AS Series, --No se porque esta asi ES UN CAMPO DE 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; --'7' + CAST (RIGHT(sellers.Code,4) AS varchar(5))AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; '7' + CAST(ROW_NUMBER() OVER (ORDER BY sellers.Code)AS varchar(5)) AS Series,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  0 AS N_Counter&#xA;FROM         ERP_IMPLT_users INNER JOIN&#xA;                      sellers ON ERP_IMPLT_users.Code = sellers.Code_ofClient) as Counter&#xA;where Code_User not in (select Code_User from users_counter)&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\users_organizations"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="users_organizations"
      DTS:DTSID="{938016BB-ADB4-473F-991B-22C2E42A3C3A}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="users_organizations"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO users_organizations (Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_User, Code_Unit_Org, Code_Sales_Org)&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date,  View_System_Fields_ERP.Platform,   &#xA;Code_User, Code_Unit_Org, Code_Sales_Org&#xA;FROM        ERP_IMPLT_users_organizations CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org from users_organizations where Code_User = ERP_IMPLT_users_organizations.Code_User and &#xA;Code_Unit_Org = ERP_IMPLT_users_organizations.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_users_organizations.Code_Sales_Org)&#xA;GO&#xA;&#xA;-- Modificación (no existe modificación ya que solamente hay campos que forman parte de la PK)&#xA;&#xA;-- Baja&#xA;UPDATE users_organizations SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  users_organizations CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org from ERP_IMPLT_users_organizations where Code_User = users_organizations.Code_User and &#xA;Code_Unit_Org = users_organizations.Code_Unit_Org and Code_Sales_Org = users_organizations.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE users_organizations SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  users_organizations CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org from ERP_IMPLT_users_organizations where Code_User = users_organizations.Code_User and &#xA;Code_Unit_Org = users_organizations.Code_Unit_Org and Code_Sales_Org = users_organizations.Code_Sales_Org and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\users_organizations CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="users_organizations CI"
      DTS:DTSID="{6EF9766F-73B2-4545-9213-6A4C5001079D}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="users_organizations CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="33">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE users_organizations SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  users_organizations CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org from ERP_IMPLT_users_organizations where Code_User = ERP_IMPLT_users_organizations.Code_User and &#xA;Code_Unit_Org = ERP_IMPLT_users_organizations.Code_Unit_Org and Code_Sales_Org = ERP_IMPLT_users_organizations.Code_Sales_Org ) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\users_organizations_sellers"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="users_organizations_sellers"
      DTS:DTSID="{20DC31ED-5B32-441F-B844-9BA8696B6837}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="users_organizations_sellers"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;INSERT INTO users_organizations_sellers(Create_User, Create_Date, Modify_User, Modify_Date, Platform, Code_User, Code_Unit_Org, Code_Sales_Org, Code_Seller)&#xA;&#xA;SELECT distinct View_System_Fields_ERP.Create_User, View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, View_System_Fields_ERP.Modify_Date, &#xA;View_System_Fields_ERP.Platform,   &#xA;Code_User, &#xA;Code_Unit_Org, &#xA;Code_Sales_Org, &#xA;sellers.Code as Code_Seller&#xA;FROM        ERP_IMPLT_users_organizations_sellers &#xA;inner join sellers &#xA;on ERP_IMPLT_users_organizations_sellers.Code_Seller = sellers.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP&#xA;WHERE not exists &#xA;(SELECT Code_User, Code_Unit_Org, Code_Sales_Org, Code_Seller &#xA;from users_organizations_sellers &#xA;where Code_User = ERP_IMPLT_users_organizations_sellers.Code_User and &#xA;Code_Unit_Org = ERP_IMPLT_users_organizations_sellers.Code_Unit_Org &#xA;and Code_Sales_Org = ERP_IMPLT_users_organizations_sellers.Code_Sales_Org &#xA;and Code_Seller = sellers.Code)&#xA;GO&#xA;&#xA;-- Modificación (no existe modificación ya que solamente hay campos que forman parte de la PK)&#xA;&#xA;-- Baja&#xA;UPDATE users_organizations_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  users_organizations_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org, sellers.Code from ERP_IMPLT_users_organizations_sellers inner join sellers on ERP_IMPLT_users_organizations_sellers.Code_Seller = sellers.Code_ofClient &#xA;where Code_User = users_organizations_sellers.Code_User and Code_Unit_Org = users_organizations_sellers.Code_Unit_Org and Code_Sales_Org = users_organizations_sellers.Code_Sales_Org and sellers.Code = users_organizations_sellers.Code_Seller and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE users_organizations_sellers SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  users_organizations_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org, sellers.Code from ERP_IMPLT_users_organizations_sellers inner join sellers on ERP_IMPLT_users_organizations_sellers.Code_Seller = sellers.Code_ofClient &#xA;where Code_User = users_organizations_sellers.Code_User and Code_Unit_Org = users_organizations_sellers.Code_Unit_Org and Code_Sales_Org = users_organizations_sellers.Code_Sales_Org and sellers.Code = users_organizations_sellers.Code_Seller and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\users_organizations_sellers CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="users_organizations_sellers CI"
      DTS:DTSID="{16B5AD29-E1AF-456B-884E-87739F7B9498}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="users_organizations_sellers CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="34">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE users_organizations_sellers SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  users_organizations_sellers CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_User, Code_Unit_Org, Code_Sales_Org, sellers.Code from ERP_IMPLT_users_organizations_sellers inner join sellers on ERP_IMPLT_users_organizations_sellers.Code_Seller = sellers.Code_ofClient &#xA;where Code_User = users_organizations_sellers.Code_User and Code_Unit_Org = users_organizations_sellers.Code_Unit_Org and Code_Sales_Org = users_organizations_sellers.Code_Sales_Org and sellers.Code = users_organizations_sellers.Code_Seller) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\warehouses"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="warehouses"
      DTS:DTSID="{BA812AA6-071F-44AB-8F95-CFE673C94284}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="warehouses"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Alta&#xA;WITH TMP_WAREHOUSE AS(&#xA;SELECT &#xA;distinct View_System_Fields_ERP.Create_User, &#xA;View_System_Fields_ERP.Create_Date, &#xA;View_System_Fields_ERP.Modify_User, &#xA;View_System_Fields_ERP.Modify_Date,  &#xA;View_System_Fields_ERP.Platform,   &#xA;convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','') + cast(ROW_NUMBER() &#xA;OVER (order by Code_ofClient) + 100000 as varchar(8)) as Code, &#xA;Code_ofClient, &#xA;Pass, Pass_R, &#xA;Type_Central, &#xA; Description, &#xA; Code_Unit_Org, &#xA; Code_Sales_Org, &#xA; Code_Type, &#xA; Code_User, &#xA;Code_Warehouse_Dep,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Send_To_ERP_Mov, Capacity&#xA;FROM        ERP_IMPLT_warehouses CROSS JOIN View_System_Fields_ERP&#xA;WHERE ERP_IMPLT_warehouses.Code_ofClient is not null &#xA;AND not exists &#xA;(SELECT Code_ofClient from warehouses where Code_ofClient = ERP_IMPLT_warehouses.Code_ofClient)&#xA;)&#xA;&#xA;INSERT INTO warehouses (Create_User, Create_Date, Modify_User, Modify_Date,  &#xA;Platform, Code, Code_ofClient, Pass, Pass_R, Type_Central, &#xA;                    Description, Code_Unit_Org, Code_Sales_Org, Code_Type, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  Code_User, Code_Warehouse_Dep, Send_To_ERP_Mov, Capacity)&#xA;SELECT&#xA;Create_User, &#xA;Create_Date, &#xA;Modify_User, &#xA;Modify_Date,  &#xA;Platform,   &#xA; Code, &#xA;Code_ofClient, &#xA;Pass, Pass_R, &#xA;Type_Central, &#xA; Description, &#xA; Code_Unit_Org, &#xA; Code_Sales_Org, &#xA; Code_Type, &#xA; Code_User, &#xA;CASE WHEN Code_Warehouse_Dep IS NULL THEN NULL ELSE &#xA;(SELECT TOP 1 warehouses.code  FROM ERP_IMPLT_warehouses, warehouses &#xA;where ERP_IMPLT_warehouses.Code_ofClient = warehouses.Code_ofClient  &#xA;and warehouses.Code_ofClient = TMP_WAREHOUSE.Code_Warehouse_Dep AND ERP_IMPLT_warehouses.Code_ofClient is not null) &#xA;END AS Code_Warehouse_Dep,&#xA; Send_To_ERP_Mov, Capacity&#xA; FROM TMP_WAREHOUSE&#xA;GO&#xA;&#xA;&#xA;-- Modificación&#xA;/*&#xA;UPDATE warehouses SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;  Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, &#xA;  Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA;  Pass = MOD.Pass, Pass_R = MOD.Pass_R, Type_Central = MOD.Type_Central, &#xA;  Description = MOD.Description, &#xA;  Code_Unit_Org = MOD.Code_Unit_Org, &#xA;  Code_Sales_Org = MOD.Code_Sales_Org, &#xA;  Code_Type = MOD.Code_Type, &#xA;  Code_User = MOD.Code_User, &#xA;  Send_To_ERP_Mov = MOD.Send_To_ERP_Mov, Capacity = MOD.Capacity&#xA;FROM&#xA;(SELECT  Code_ofClient, Pass, Pass_R, Type_Central, Description, Code_Unit_Org, Code_Sales_Org, Code_Type, &#xA;Code_User, &#xA;Send_To_ERP_Mov, Capacity&#xA;FROM       ERP_IMPLT_warehouses &#xA;EXCEPT&#xA;SELECT  Code_ofClient, Pass, Pass_R, Type_Central, Description, Code_Unit_Org, Code_Sales_Org, Code_Type, &#xA;Code_User, &#xA;Send_To_ERP_Mov, Capacity&#xA;FROM         warehouses) as MOD INNER JOIN warehouses ON MOD.Code_ofClient = warehouses.Code_ofClient &#xA;CROSS JOIN View_System_Fields_ERP &#xA;GO &#xA;*/&#xA;-- Modificación&#xA;UPDATE warehouses SET Create_User = View_System_Fields_ERP.Create_User , Create_Date = View_System_Fields_ERP.Create_Date , &#xA;  Modify_User = View_System_Fields_ERP.Modify_User , Modify_Date = View_System_Fields_ERP.Modify_Date, Delete_User = NULL, &#xA;  Delete_Date = NULL, Platform = View_System_Fields_ERP.Platform, &#xA; -- Pass = MOD.Pass, &#xA; -- Pass_R = MOD.Pass_R, &#xA; -- Type_Central = MOD.Type_Central, &#xA;  Description = MOD.Description, &#xA; -- Code_Unit_Org = MOD.Code_Unit_Org, &#xA;  Code_Sales_Org = MOD.Code_Sales_Org, &#xA; -- Code_Type = MOD.Code_Type, &#xA;  Code_User = MOD.Code_User, &#xA;  Code_Warehouse_Dep = MOD.Code_Warehouse_Dep,&#xA; -- Send_To_ERP_Mov = MOD.Send_To_ERP_Mov, &#xA;  Capacity = MOD.Capacity&#xA;FROM&#xA;(SELECT --Warehouses.Code,&#xA;&#x9;   Warehouse1.Code_ofClient,&#xA;&#x9;   Warehouse1. Description,&#xA;&#x9;   Warehouse1.Code_Sales_Org,&#xA;&#x9;--   Warehouse1.Central,&#xA;&#x9;--   Warehouse1.Camion,&#xA;&#x9;  Warehouses.Code AS Code_Warehouse_Dep,&#xA;&#x9;  warehouse1.Code_User,&#xA;&#x9;  warehouse1.Capacity&#xA;&#x9; -- warehouse1.Pass, &#xA;&#x9; -- warehouse1.Pass_R, &#xA;&#x9;--  warehouse1.Type_Central, &#xA;&#x9;--  warehouse1.Code_Unit_Org, &#xA;&#x9;--  warehouse1.Code_Type,&#xA;&#x9; -- warehouse1.Send_To_ERP_Mov&#xA;--&#x9; CASE WHEN Warehouse1.Camion IS NULL&#xA;&#x9;--  THEN Warehouse1.Code_ofClient&#xA;&#x9; -- ELSE Warehouses.Code_ofClient END AS Plant2&#xA;&#x9;   FROM &#xA;(SELECT Code,&#xA;&#x9;   Code_ofClient,&#xA;&#x9;   Description,&#xA;&#x9;   Code_Sales_Org,&#xA;&#x9;   (CASE WHEN Code_Warehouse_Dep IS NULL THEN Code_ofClient END) Central,&#xA;       (CASE WHEN Code_Warehouse_Dep IS NOT NULL THEN Code_Warehouse_Dep END) Camion,&#xA;&#x9;   Code_User, Capacity--, Pass, Pass_R, Type_Central, Send_To_ERP_Mov&#xA;FROM ERP_IMPLT_warehouses)  Warehouse1&#xA;LEFT JOIN warehouses&#xA;ON  Warehouse1.Camion = warehouses.Code_ofClient&#xA;EXCEPT&#xA;SELECT  Code_ofClient, Description, Code_Sales_Org, &#xA;Code_Warehouse_Dep, Code_User, &#xA;Capacity &#xA;FROM         warehouses) as MOD INNER JOIN warehouses ON MOD.Code_ofClient = warehouses.Code_ofClient &#xA;AND warehouses.Code_Warehouse_Dep IS NULL&#xA;CROSS JOIN View_System_Fields_ERP &#xA;GO &#xA;&#xA;-- Baja&#xA;UPDATE warehouses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  warehouses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  exists (SELECT Code_ofClient FROM ERP_IMPLT_warehouses where Code_ofClient = warehouses.Code_ofClient and right(isnull(Status_SAP,'1'),1) = '3')&#xA;GO&#xA;&#xA;-- Quitar Baja&#xA;UPDATE warehouses SET Modify_Date = View_System_Fields_ERP.Modify_Date, Modify_User = View_System_Fields_ERP.Modify_User, Delete_Date = NULL, Delete_User = NULL&#xA;FROM  warehouses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is not NULL and exists (SELECT Code_ofClient FROM ERP_IMPLT_warehouses where Code_ofClient = warehouses.Code_ofClient and right(isnull(Status_SAP,'1'),1) &lt;&gt; '3')&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\warehouses CI"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="warehouses CI"
      DTS:DTSID="{6DA87A22-1A64-4FED-BF88-E06751F31D10}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="warehouses CI"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="35">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
          SQLTask:SqlStatementSource="-- Borrado por carga inicial&#xA;UPDATE warehouses SET Delete_Date = View_System_Fields_ERP.Create_Date, Delete_User = View_System_Fields_ERP.Create_User&#xA;FROM  warehouses CROSS JOIN&#xA;                      View_System_Fields_ERP&#xA;WHERE  Delete_Date is NULL and not exists (SELECT Code_ofClient FROM ERP_IMPLT_warehouses where Code_ofClient = warehouses.Code_ofClient) &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{BCAD9AFF-2C4A-4F0B-B252-988B14EFC853}"
      DTS:From="Package\prj_promtions_hierarchy"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\prj_promotions_destiny"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{141D3A2E-697D-46EE-A0AC-C1C5B1AA2286}"
      DTS:From="Package\Corrige Warehouses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\warehouses"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{397CA9F9-CBF0-4740-9621-F8B979299EE1}"
      DTS:From="Package\type_unit_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\prj_pricing_tables Mantenimiento"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{AF1FB4E5-1FDF-46CE-8289-421D93CDDD3B}"
      DTS:From="Package\products_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\products_hierarchy2"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{5005C694-0E8B-41F1-ADB6-6BF01D0B4FAF}"
      DTS:From="Package\Split_Imp_Final"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\Precios Usuario"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{24D974A9-DD95-454F-9F4B-DCD11C80924B}"
      DTS:From="Package\prj_hist_orders_sec"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\pre_prj_payment_accounts"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{EC948528-CAB6-4AC4-A7B0-23C4A85934DE}"
      DTS:From="Package\prj_payment_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\collections_pending"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 15]"
      DTS:CreationName=""
      DTS:DTSID="{8195FB90-2BDE-427A-9530-36F01F7B38C8}"
      DTS:From="Package\accounts_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 15"
      DTS:To="Package\Update accounts_organization"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 16]"
      DTS:CreationName=""
      DTS:DTSID="{9E62E71B-BC00-49B7-B60F-915BF87A7FC6}"
      DTS:From="Package\Update accounts_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 16"
      DTS:To="Package\accounts_function"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 17]"
      DTS:CreationName=""
      DTS:DTSID="{50BA1036-CF39-441C-82F4-9FC21B4AFD23}"
      DTS:From="Package\prj_orders_lines_lots"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 17"
      DTS:To="Package\loads_head" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 18]"
      DTS:CreationName=""
      DTS:DTSID="{04940C3F-B262-4BAB-B4E9-67707835B26A}"
      DTS:From="Package\Update_Products_Measure"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 18"
      DTS:To="Package\target_sales_head" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 19]"
      DTS:CreationName=""
      DTS:DTSID="{1DED4F50-EA59-4FC6-9172-B40CF4D4E3A5}"
      DTS:From="Package\collecting_type"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 19"
      DTS:To="Package\prj_products_assor_det"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{85E89918-07BD-4094-B633-4C5DF47B04FD}"
      DTS:From="Package\prj_pricing_tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\prj_pricing_tables_esc"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 20]"
      DTS:CreationName=""
      DTS:DTSID="{A0087549-9649-4F34-936A-A8DAC8CFC048}"
      DTS:From="Package\Promotions"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 20"
      DTS:To="Package\Update_Products_Measure"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 21]"
      DTS:CreationName=""
      DTS:DTSID="{91AA77BB-74FF-4BAA-BA65-A162CA27E56C}"
      DTS:From="Package\pre_prj_payment_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 21"
      DTS:To="Package\prj_payment_accounts"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 22]"
      DTS:CreationName=""
      DTS:DTSID="{020BF754-E8ED-4AD8-B794-179DE077650A}"
      DTS:From="Package\accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 22"
      DTS:To="Package\accounts CI"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 23]"
      DTS:CreationName=""
      DTS:DTSID="{75ACCDB6-75B3-491A-9731-15CBED8DAE07}"
      DTS:From="Package\contacts_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 23"
      DTS:To="Package\Corrige ruta"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 24]"
      DTS:CreationName=""
      DTS:DTSID="{61E4CF7F-15BF-44B0-8513-A23DBCC63EBA}"
      DTS:From="Package\Corrige ruta"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 24"
      DTS:To="Package\route_header"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 25]"
      DTS:CreationName=""
      DTS:DTSID="{63656BD3-D6A7-4D8E-B6ED-98B0BFF62F13}"
      DTS:From="Package\prj_pricing_tables_esc"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 25"
      DTS:To="Package\prj_promotions_head"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 26]"
      DTS:CreationName=""
      DTS:DTSID="{5AEB02B1-32AB-475D-BD94-608745BFD87E}"
      DTS:From="Package\prj_pricing_tables Mantenimiento"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 26"
      DTS:To="Package\UPDATE ERP_Pricing"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 27]"
      DTS:CreationName=""
      DTS:DTSID="{71E2EEEA-B6D3-4341-A656-8E61BF17FD91}"
      DTS:From="Package\UPDATE ERP_Pricing"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 27"
      DTS:To="Package\prj_pricing_tables"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 28]"
      DTS:CreationName=""
      DTS:DTSID="{06A9B2CD-3B82-4328-8563-1E7E941B4804}"
      DTS:From="Package\prj_orders_type_user"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 28"
      DTS:To="Package\prj_hist_orders_status" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 29]"
      DTS:CreationName=""
      DTS:DTSID="{F2A5BE3E-C5FD-49AB-A73E-ED90A3ED8A63}"
      DTS:From="Package\equipment_account"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 29"
      DTS:To="Package\Corrige errores del cliente en pedidos y cargas" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{EA4DC9CF-C029-433F-B9CE-B2CF15325CE3}"
      DTS:From="Package\prj_promotions_head"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\corrige hist_header"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 30]"
      DTS:CreationName=""
      DTS:DTSID="{4E37E91D-688A-4E2C-95BF-AA6A024CEB8C}"
      DTS:From="Package\Corrige prj_orders_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 30"
      DTS:To="Package\prj_orders_header" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 31]"
      DTS:CreationName=""
      DTS:DTSID="{F35BE105-1EA7-41D6-A2F6-D8880BCCBCC2}"
      DTS:From="Package\corrige hist_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 31"
      DTS:To="Package\prj_hist_orders_header"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 32]"
      DTS:CreationName=""
      DTS:DTSID="{62E190D2-04A1-4737-BA69-7AD95DB3CD73}"
      DTS:From="Package\prj_hist_orders_status"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 32"
      DTS:To="Package\Corrige Warehouses" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 33]"
      DTS:CreationName=""
      DTS:DTSID="{BA70978F-51BA-4BF5-88BC-2E3355D44078}"
      DTS:From="Package\unit_sales_organ_seller"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 33"
      DTS:To="Package\prj_des_array"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 34]"
      DTS:CreationName=""
      DTS:DTSID="{3C1150B7-E8D5-4ACB-AB3A-A020D70F79DC}"
      DTS:From="Package\prj_return_cause"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 34"
      DTS:To="Package\core_users"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 35]"
      DTS:CreationName=""
      DTS:DTSID="{30D6D36B-8927-4F49-91EF-ECA10888EB8D}"
      DTS:From="Package\prj_orders_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 35"
      DTS:To="Package\Complemento prj_orders_header" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 36]"
      DTS:CreationName=""
      DTS:DTSID="{3B355AC1-6682-446D-9B9E-A586D0DA9433}"
      DTS:From="Package\Complemento prj_orders_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 36"
      DTS:To="Package\prj_orders_lines" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 37]"
      DTS:CreationName=""
      DTS:DTSID="{8DF0A89A-E80A-4D5D-889C-6D2FBC7CF89C}"
      DTS:From="Package\target_sales_head"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 37"
      DTS:To="Package\Split_Imp_Final" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 38]"
      DTS:CreationName=""
      DTS:DTSID="{A2FBD2CC-677C-4426-A0A8-B5741905E614}"
      DTS:From="Package\prj_des_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 38"
      DTS:To="Package\prj_return_cause"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 39]"
      DTS:CreationName=""
      DTS:DTSID="{7F5B68F9-CDCB-42FF-8E89-59E8D94D9DB8}"
      DTS:From="Package\Corrige errores del cliente en pedidos y cargas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 39"
      DTS:To="Package\Corrige prj_orders_header" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{83FC90B6-8B95-4126-B69A-35C3E7461ABC}"
      DTS:From="Package\loads_orders"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\prj_products_assor" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 40]"
      DTS:CreationName=""
      DTS:DTSID="{982728C3-CA92-454B-9F87-DDABC07C384A}"
      DTS:From="Package\Modificación cliente"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 40"
      DTS:To="Package\Execute SQL Task" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 41]"
      DTS:CreationName=""
      DTS:DTSID="{22B74C65-EA00-4A70-8BF5-3AFF13B51C80}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 41"
      DTS:To="Package\Tarea Volver a generar índice" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 42]"
      DTS:CreationName=""
      DTS:DTSID="{D8BE22CA-E657-41AA-B03F-78AAD538E6E7}"
      DTS:From="Package\accounts_addresses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 42"
      DTS:To="Package\accounts_addresses CI"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 43]"
      DTS:CreationName=""
      DTS:DTSID="{7F0E3A86-CD4A-498E-A7F4-A8C24A044DBC}"
      DTS:From="Package\collections_pending"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 43"
      DTS:To="Package\collections_pending CI"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 44]"
      DTS:CreationName=""
      DTS:DTSID="{0653CA94-492B-4F84-A6A7-45C324016A87}"
      DTS:From="Package\route_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 44"
      DTS:To="Package\route_accounts CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{64103B29-EF85-4769-B690-C6BFEBE03A9E}"
      DTS:From="Package\prj_products_assor"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\collecting_type"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{0C6C9350-C7C6-4802-8106-BF5067699D6A}"
      DTS:From="Package\prj_products_assor_det"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\prj_products_assor_sel"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{575FCBC0-DFA4-46FF-8DA7-320A5218BDB4}"
      DTS:From="Package\prj_products_assor_sel"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\prj_promtions_hierarchy"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{3C1C1B02-2EF5-4F44-A5A1-5465AB19AC00}"
      DTS:From="Package\prj_promotions_destiny"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\prj_promotions_hier_gift"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{CD845619-3AD6-4517-83AD-6B12400ADBFC}"
      DTS:From="Package\prj_promotions_hier_gift"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Promotions"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción]"
      DTS:CreationName=""
      DTS:DTSID="{61475E42-6899-4681-B51C-CAF651647CF8}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_agrupation1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción"
      DTS:To="Package\accounts_agrupation1 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 1]"
      DTS:CreationName=""
      DTS:DTSID="{D783F594-20CC-4323-87F2-E8D9980762BC}"
      DTS:From="Package\accounts_agrupation1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 1"
      DTS:To="Package\accounts_agrupation2"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 10]"
      DTS:CreationName=""
      DTS:DTSID="{62F9BD13-4AA0-4A4E-ABE3-C9F35B700C84}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_payment_terms"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 10"
      DTS:To="Package\prj_payment_terms CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 101]"
      DTS:CreationName=""
      DTS:DTSID="{18F310BF-387E-477A-8B52-D6803BE055D7}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_pricing_tables"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 101"
      DTS:To="Package\prj_pricing_tables CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 103]"
      DTS:CreationName=""
      DTS:DTSID="{D4A59108-BD67-488A-9B2B-A85A71531EFE}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_hist_orders_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 103"
      DTS:To="Package\prj_hist_orders_header CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 104]"
      DTS:CreationName=""
      DTS:DTSID="{CF13704A-539B-429E-ADF1-D5BCCC817C38}"
      DTS:From="Package\prj_hist_orders_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 104"
      DTS:To="Package\prj_hist_orders_lines"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 105]"
      DTS:CreationName=""
      DTS:DTSID="{340A3DA2-BCED-49E6-AF01-E1F48DE1CECE}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_hist_orders_lines"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 105"
      DTS:To="Package\prj_hist_orders_lines CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 106]"
      DTS:CreationName=""
      DTS:DTSID="{F251A0C2-6403-4C0F-9533-C06654DA3CCB}"
      DTS:From="Package\prj_hist_orders_lines"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 106"
      DTS:To="Package\prj_hist_orders_sec"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 107]"
      DTS:CreationName=""
      DTS:DTSID="{77C450C5-7C33-464B-9941-0958A4F41C8F}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_hist_orders_sec"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 107"
      DTS:To="Package\prj_hist_orders_sec CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 11]"
      DTS:CreationName=""
      DTS:DTSID="{99A2F279-97EF-4DB8-99B7-11481C6F0291}"
      DTS:From="Package\prj_payment_terms"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 11"
      DTS:To="Package\prj_price_list"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 110]"
      DTS:CreationName=""
      DTS:DTSID="{205CDDFF-79E5-4B49-A7AB-A06973675871}"
      DTS:From="Package\collections_pending"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 110"
      DTS:To="Package\equipment_account"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 111]"
      DTS:CreationName=""
      DTS:DTSID="{AB907719-EF8E-40E9-81EA-C5168C147B5E}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\equipment_account"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 111"
      DTS:To="Package\equipment_account CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 116]"
      DTS:CreationName=""
      DTS:DTSID="{A0C776D5-5C19-4427-A75F-F09995BFC7E2}"
      DTS:From="Package\prj_orders_lines"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 116"
      DTS:To="Package\prj_orders_secuences" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 118]"
      DTS:CreationName=""
      DTS:DTSID="{9A8BE3E2-72FD-42BF-9F51-1DF7D9620A62}"
      DTS:From="Package\prj_orders_secuences"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 118"
      DTS:To="Package\prj_orders_lines_lots" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 12]"
      DTS:CreationName=""
      DTS:DTSID="{3FD36D6C-C983-4BEE-85FC-F19C5A851B6D}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_price_list"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 12"
      DTS:To="Package\prj_price_list CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 121]"
      DTS:CreationName=""
      DTS:DTSID="{9FD4394D-5AC2-4B85-A460-C1420E8E2282}"
      DTS:From="Package\loads_head"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 121"
      DTS:To="Package\loads_detail" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 122]"
      DTS:CreationName=""
      DTS:DTSID="{DBCE1D74-13F5-4CC1-9B14-C03B75A1FB1A}"
      DTS:From="Package\loads_detail"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 122"
      DTS:To="Package\loads_orders" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 124]"
      DTS:CreationName=""
      DTS:DTSID="{0EAEF4F9-56EF-4A27-8DE1-9AA01E241A3A}"
      DTS:From="Package\Precios Usuario"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 124"
      DTS:To="Package\Modificación cliente"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 13]"
      DTS:CreationName=""
      DTS:DTSID="{04FC13EA-4C3E-42FB-8C74-57147414C883}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\provinces"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 13"
      DTS:To="Package\provinces CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 14]"
      DTS:CreationName=""
      DTS:DTSID="{B8E66E42-CDF7-4E90-AC5A-A8FAD08D8058}"
      DTS:From="Package\prj_price_list"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 14"
      DTS:To="Package\provinces"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 15]"
      DTS:CreationName=""
      DTS:DTSID="{4613BF75-6988-4DE2-8C8E-604135E3632B}"
      DTS:From="Package\provinces"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 15"
      DTS:To="Package\products_array"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 16]"
      DTS:CreationName=""
      DTS:DTSID="{48FA5BD6-1616-4936-9DB4-319E3D6D9180}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 16"
      DTS:To="Package\products_array CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 18]"
      DTS:CreationName=""
      DTS:DTSID="{DF857BC2-5979-4C34-80D8-DD02FCF346EA}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_hierarchy2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 18"
      DTS:To="Package\products_hierarchy2 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 19]"
      DTS:CreationName=""
      DTS:DTSID="{69E1A0E8-989C-438A-88F1-C9B4856344DA}"
      DTS:From="Package\products_hierarchy2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 19"
      DTS:To="Package\products_hierarchy3"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 2]"
      DTS:CreationName=""
      DTS:DTSID="{138F12A7-1875-45F9-9CB3-6D44C1B9EA1A}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_agrupation2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 2"
      DTS:To="Package\accounts_agrupation2 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 20]"
      DTS:CreationName=""
      DTS:DTSID="{C79A2080-BFEF-4EDF-A7B0-63FEC79AF470}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_hierarchy3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 20"
      DTS:To="Package\products_hierarchy3 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 21]"
      DTS:CreationName=""
      DTS:DTSID="{5ACFA3F3-D325-44F2-B763-EAD17D7A49B8}"
      DTS:From="Package\products_hierarchy3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 21"
      DTS:To="Package\products_hierarchy4"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 22]"
      DTS:CreationName=""
      DTS:DTSID="{B0EA0E00-1021-4A86-BAD6-B41D56CF3BCB}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_hierarchy4"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 22"
      DTS:To="Package\products_hierarchy4 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 23]"
      DTS:CreationName=""
      DTS:DTSID="{5D08E49F-6200-474C-B261-0E92DA93C9A4}"
      DTS:From="Package\products_hierarchy4"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 23"
      DTS:To="Package\type_unit"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 24]"
      DTS:CreationName=""
      DTS:DTSID="{91E5D11F-C82D-4A9F-9663-82FFA07510A5}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\type_unit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 24"
      DTS:To="Package\type_unit CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 25]"
      DTS:CreationName=""
      DTS:DTSID="{F304E91C-D750-4839-AC6A-5835D367D18F}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_currency"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 25"
      DTS:To="Package\prj_currency CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 26]"
      DTS:CreationName=""
      DTS:DTSID="{0C830A3D-2922-427B-B2CF-F37FE49BB61A}"
      DTS:From="Package\type_unit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 26"
      DTS:To="Package\prj_currency"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 27]"
      DTS:CreationName=""
      DTS:DTSID="{7F891F85-B33E-4874-8EC5-217EA0AEC06E}"
      DTS:From="Package\equipment_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 27"
      DTS:To="Package\equipment_array CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 28]"
      DTS:CreationName=""
      DTS:DTSID="{79616F4A-890C-4636-ADAC-25F4E91BAE62}"
      DTS:From="Package\prj_currency"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 28"
      DTS:To="Package\equipment_array"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 29]"
      DTS:CreationName=""
      DTS:DTSID="{F9136E02-8589-4FD3-B1AC-B8BFF87C9266}"
      DTS:From="Package\equipment_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 29"
      DTS:To="Package\prj_configuration"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 3]"
      DTS:CreationName=""
      DTS:DTSID="{429789AB-3CD3-40FA-95C3-1C60043B7A06}"
      DTS:From="Package\accounts_agrupation2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 3"
      DTS:To="Package\accounts_agrupation3"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 30]"
      DTS:CreationName=""
      DTS:DTSID="{66F42F31-84DF-4D30-9476-F19B2EFC0C33}"
      DTS:From="Package\prj_configuration"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 30"
      DTS:To="Package\sellers"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 31]"
      DTS:CreationName=""
      DTS:DTSID="{782528E4-8396-4339-87AC-412E21F60868}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 31"
      DTS:To="Package\sellers CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 32]"
      DTS:CreationName=""
      DTS:DTSID="{AA76104E-9D22-4BFE-8EDC-151B149B9553}"
      DTS:From="Package\sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 32"
      DTS:To="Package\unit_sales_organ_seller"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 33]"
      DTS:CreationName=""
      DTS:DTSID="{86750081-3DF2-4747-AF9B-1569C2743B38}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\unit_sales_organ_seller"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 33"
      DTS:To="Package\unit_sales_organ_seller CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 34]"
      DTS:CreationName=""
      DTS:DTSID="{52574202-E1A6-4967-8460-08573C98B38D}"
      DTS:From="Package\route_sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 34"
      DTS:To="Package\route_accounts"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 35]"
      DTS:CreationName=""
      DTS:DTSID="{D95300C7-6E3E-4A5F-AD79-C93C984C8A51}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\route_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 35"
      DTS:To="Package\route_header CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 36]"
      DTS:CreationName=""
      DTS:DTSID="{E8E283D8-C761-421B-B1F1-3D51F08CF42F}"
      DTS:From="Package\route_header"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 36"
      DTS:To="Package\route_sellers"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 37]"
      DTS:CreationName=""
      DTS:DTSID="{FC7DCE4F-D10F-48BC-803F-FFE067ABBABC}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\route_sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 37"
      DTS:To="Package\route_sellers CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 39]"
      DTS:CreationName=""
      DTS:DTSID="{7269EAC8-46D6-4AC2-A516-D069632B3B17}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\core_users"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 39"
      DTS:To="Package\core_users CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 4]"
      DTS:CreationName=""
      DTS:DTSID="{5A6742E2-B851-4225-AEC8-1322F5F9C85F}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_agrupation3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 4"
      DTS:To="Package\accounts_agrupation3 CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 41]"
      DTS:CreationName=""
      DTS:DTSID="{C8068145-EC38-4D1D-965F-81C7BA8CEBFE}"
      DTS:From="Package\core_users"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 41"
      DTS:To="Package\users_organizations"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 42]"
      DTS:CreationName=""
      DTS:DTSID="{3D00F64D-EDDF-4F45-A936-735F5B7C32C0}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\users_organizations"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 42"
      DTS:To="Package\users_organizations CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 43]"
      DTS:CreationName=""
      DTS:DTSID="{C8B46FB3-C7D5-4AE2-A4D7-77CB3616A6C2}"
      DTS:From="Package\users_organizations"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 43"
      DTS:To="Package\users_organizations_sellers"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 44]"
      DTS:CreationName=""
      DTS:DTSID="{332FCF0E-5AAF-4434-BA2D-360B986A073B}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\users_organizations_sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 44"
      DTS:To="Package\users_organizations_sellers CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 45]"
      DTS:CreationName=""
      DTS:DTSID="{B22DFE8F-195F-4F98-934D-0F6F0C324B02}"
      DTS:From="Package\users_organizations_sellers"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 45"
      DTS:To="Package\prj_users_control"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 46]"
      DTS:CreationName=""
      DTS:DTSID="{A4DE238F-A3F4-4100-A8BA-C0E0C12E8CD6}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_users_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 46"
      DTS:To="Package\prj_users_control CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 47]"
      DTS:CreationName=""
      DTS:DTSID="{C52D0729-7E9C-41F7-B720-7EB8D378D0CE}"
      DTS:From="Package\prj_users_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 47"
      DTS:To="Package\users_counter"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 48]"
      DTS:CreationName=""
      DTS:DTSID="{B662CCED-8387-4C92-839A-F8F1DEDAE5F5}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_users_type_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 48"
      DTS:To="Package\prj_users_type_control CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 49]"
      DTS:CreationName=""
      DTS:DTSID="{A000D53B-BD32-4796-9024-94525FD861E2}"
      DTS:From="Package\users_counter"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 49"
      DTS:To="Package\prj_users_type_control"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 5]"
      DTS:CreationName=""
      DTS:DTSID="{3F69AB83-3E75-4A45-8EC0-778AE98EE643}"
      DTS:From="Package\accounts_agrupation3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 5"
      DTS:To="Package\accounts_array"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 50]"
      DTS:CreationName=""
      DTS:DTSID="{290BF979-9064-43B2-B50D-B15C0F659FBD}"
      DTS:From="Package\prj_users_type_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 50"
      DTS:To="Package\prj_orders_type_user"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 52]"
      DTS:CreationName=""
      DTS:DTSID="{65DAE450-1BB2-462C-95A1-03B5ED5FDB7D}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\warehouses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 52"
      DTS:To="Package\warehouses CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 54]"
      DTS:CreationName=""
      DTS:DTSID="{564D9253-9FC9-44E2-8FC5-53B74D2D5DB9}"
      DTS:From="Package\warehouses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 54"
      DTS:To="Package\trucks"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 55]"
      DTS:CreationName=""
      DTS:DTSID="{5B90C0E8-E7DD-45FB-9B0D-09F5164F5713}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\trucks"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 55"
      DTS:To="Package\trucks CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 56]"
      DTS:CreationName=""
      DTS:DTSID="{49528154-2320-44C7-A125-077EA8ED2447}"
      DTS:From="Package\accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 56"
      DTS:To="Package\accounts_org"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 57]"
      DTS:CreationName=""
      DTS:DTSID="{A581FEA3-B061-4BAF-A633-BAC089F2E1C7}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_org"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 57"
      DTS:To="Package\accounts_org CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 58]"
      DTS:CreationName=""
      DTS:DTSID="{B69D45D2-AC30-474C-8A70-C4B1EE411482}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 58"
      DTS:To="Package\accounts_organization CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 59]"
      DTS:CreationName=""
      DTS:DTSID="{6EDBFCF1-E878-42A9-BE5B-D42619AEECD6}"
      DTS:From="Package\accounts_org"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 59"
      DTS:To="Package\accounts_organization"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 6]"
      DTS:CreationName=""
      DTS:DTSID="{73B3AED2-7AA9-4227-9CFF-846595FAD540}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 6"
      DTS:To="Package\accounts_array CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 60]"
      DTS:CreationName=""
      DTS:DTSID="{B8D18DA3-038A-4644-B61D-27E997C685DF}"
      DTS:From="Package\trucks"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 60"
      DTS:To="Package\accounts"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 62]"
      DTS:CreationName=""
      DTS:DTSID="{CB7B4D1D-FBD0-49EF-9047-56552AF256B7}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\accounts_function"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 62"
      DTS:To="Package\accounts_function CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 63]"
      DTS:CreationName=""
      DTS:DTSID="{EE419C43-5B83-4235-ADF9-2EECC99FB5E3}"
      DTS:From="Package\accounts_function"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 63"
      DTS:To="Package\prj_accounts_credit"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 64]"
      DTS:CreationName=""
      DTS:DTSID="{037E161A-1873-4DC9-97E9-E942551C5925}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_accounts_credit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 64"
      DTS:To="Package\accounts_function CI 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 65]"
      DTS:CreationName=""
      DTS:DTSID="{E1BF83D8-4C6F-4B55-8FA8-8300B9FE785A}"
      DTS:From="Package\prj_accounts_credit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 65"
      DTS:To="Package\prj_accounts_organ_credit"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 66]"
      DTS:CreationName=""
      DTS:DTSID="{DF0A43D4-7687-4DB8-BA3B-7C7A4EADB26B}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_accounts_organ_credit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 66"
      DTS:To="Package\prj_accounts_organ_credit CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 67]"
      DTS:CreationName=""
      DTS:DTSID="{D92C45A4-4F11-4E55-8263-629E73FE0038}"
      DTS:From="Package\prj_accounts_organ_credit"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 67"
      DTS:To="Package\prj_accounts_tax"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 68]"
      DTS:CreationName=""
      DTS:DTSID="{0B67FC84-9BFE-4871-9432-F68257F87400}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_accounts_tax"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 68"
      DTS:To="Package\prj_accounts_tax CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 69]"
      DTS:CreationName=""
      DTS:DTSID="{EB7FAF52-AA69-4D2D-9E1C-297C5F69255E}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_account_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 69"
      DTS:To="Package\prj_account_control CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 7]"
      DTS:CreationName=""
      DTS:DTSID="{C8500AE1-9F4E-4246-BC87-3FA1F9C2FB77}"
      DTS:From="Package\accounts_array"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 7"
      DTS:To="Package\countries"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 70]"
      DTS:CreationName=""
      DTS:DTSID="{37328297-0EE0-474D-A2A9-E1E697913750}"
      DTS:From="Package\prj_accounts_tax"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 70"
      DTS:To="Package\prj_account_control"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 71]"
      DTS:CreationName=""
      DTS:DTSID="{2214161E-E3C2-42C4-8B86-21672E97A8DD}"
      DTS:From="Package\prj_account_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 71"
      DTS:To="Package\addresses"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 72]"
      DTS:CreationName=""
      DTS:DTSID="{86183BD0-CF82-4C4B-8B14-E2F7A7242ECC}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\addresses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 72"
      DTS:To="Package\addresses CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 73]"
      DTS:CreationName=""
      DTS:DTSID="{8981A632-4D58-4FAB-866D-AEBC0D9923E1}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\addresses_org"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 73"
      DTS:To="Package\addresses_org CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 74]"
      DTS:CreationName=""
      DTS:DTSID="{75733B49-8481-44D2-9600-E954234AFA75}"
      DTS:From="Package\addresses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 74"
      DTS:To="Package\addresses_org"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 75]"
      DTS:CreationName=""
      DTS:DTSID="{E25025E3-BC63-4F59-90B0-8425AF101F90}"
      DTS:From="Package\addresses_org"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 75"
      DTS:To="Package\addresses_organization"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 76]"
      DTS:CreationName=""
      DTS:DTSID="{FC4BC0E3-8938-4989-BB9E-BF331FBB7C99}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\addresses_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 76"
      DTS:To="Package\addresses_organization CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 77]"
      DTS:CreationName=""
      DTS:DTSID="{CEB3F9E6-9DEA-4EAB-B5D5-0694FAA7AD20}"
      DTS:From="Package\addresses_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 77"
      DTS:To="Package\accounts_addresses"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 79]"
      DTS:CreationName=""
      DTS:DTSID="{C1811B47-41D2-482C-9613-58B066E9CC2F}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\contacts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 79"
      DTS:To="Package\contacts CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 8]"
      DTS:CreationName=""
      DTS:DTSID="{8CCE88C6-A197-4C19-AE2F-8143263C5C44}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\countries"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 8"
      DTS:To="Package\countries CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 80]"
      DTS:CreationName=""
      DTS:DTSID="{A22CE140-4965-4FBE-9EB4-FE8753CB8B1D}"
      DTS:From="Package\accounts_addresses"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 80"
      DTS:To="Package\contacts"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 81]"
      DTS:CreationName=""
      DTS:DTSID="{04BCBB98-C4E5-426A-833C-A4C99B7673BE}"
      DTS:From="Package\contacts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 81"
      DTS:To="Package\contacts_organization"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 82]"
      DTS:CreationName=""
      DTS:DTSID="{D3449D51-5B9B-4739-9F91-46B2955C8981}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\contacts_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 82"
      DTS:To="Package\contacts_organization CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 83]"
      DTS:CreationName=""
      DTS:DTSID="{259B4C0E-1F17-4970-B637-87A76BB1EB86}"
      DTS:From="Package\contacts_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 83"
      DTS:To="Package\contacts_accounts"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 84]"
      DTS:CreationName=""
      DTS:DTSID="{74BDA806-D0F8-4D65-A294-5F9592FA0830}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\contacts_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 84"
      DTS:To="Package\contacts_accounts CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 86]"
      DTS:CreationName=""
      DTS:DTSID="{CF293353-1AEF-4FC2-A9A6-51DFB2624045}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 86"
      DTS:To="Package\products CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 87]"
      DTS:CreationName=""
      DTS:DTSID="{0BC280A8-17BF-46AA-AA92-EB7EBAFBD365}"
      DTS:From="Package\route_accounts"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 87"
      DTS:To="Package\products"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 88]"
      DTS:CreationName=""
      DTS:DTSID="{DAD599D2-CC7E-4127-96C6-BB59653A15E1}"
      DTS:From="Package\products"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 88"
      DTS:To="Package\products_organization"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 89]"
      DTS:CreationName=""
      DTS:DTSID="{2CC0671C-7BF4-4F1D-8F3D-67769D32D601}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 89"
      DTS:To="Package\products_organization CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 9]"
      DTS:CreationName=""
      DTS:DTSID="{A5878D23-AE04-40BB-8630-123EAD55BB9A}"
      DTS:From="Package\countries"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 9"
      DTS:To="Package\prj_payment_terms"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 90]"
      DTS:CreationName=""
      DTS:DTSID="{A044DD00-2450-4723-BA3A-3A73D3CE388C}"
      DTS:From="Package\products_organization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 90"
      DTS:To="Package\prj_products_tax"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 91]"
      DTS:CreationName=""
      DTS:DTSID="{F9B86DE2-7782-4A52-95C5-88FA5E6EBA9B}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_products_tax"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 91"
      DTS:To="Package\prj_products_tax CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 92]"
      DTS:CreationName=""
      DTS:DTSID="{319A5CF0-F420-4821-81A1-552DAFC8E899}"
      DTS:From="Package\prj_products_tax"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 92"
      DTS:To="Package\products_measure"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 93]"
      DTS:CreationName=""
      DTS:DTSID="{10B0FC80-92C5-4D0E-9295-BD906620EB79}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\products_measure"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 93"
      DTS:To="Package\products_measure CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 94]"
      DTS:CreationName=""
      DTS:DTSID="{81D0567E-4CB7-4098-BE75-27C854BF7F6B}"
      DTS:From="Package\products_measure"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 94"
      DTS:To="Package\prj_products_control"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 95]"
      DTS:CreationName=""
      DTS:DTSID="{44B06F39-0188-4E37-9F1A-A9510FC5CAFB}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\prj_products_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 95"
      DTS:To="Package\prj_products_control CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 96]"
      DTS:CreationName=""
      DTS:DTSID="{50D642E0-CF22-452D-8934-CA8A4E0AF145}"
      DTS:From="Package\prj_products_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 96"
      DTS:To="Package\type_unit_control"
      DTS:Value="2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 97]"
      DTS:CreationName=""
      DTS:DTSID="{C86B9E2F-10CB-4B2D-9DB5-E47561543CCA}"
      DTS:EvalOp="3"
      DTS:Expression="@TipoCarga == &quot;I&quot;"
      DTS:From="Package\type_unit_control"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 97"
      DTS:To="Package\type_unit_control CI" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 99]"
      DTS:CreationName=""
      DTS:DTSID="{16A1F9E2-0A16-42D3-A68F-4028CC840741}"
      DTS:From="Package\Tarea Volver a generar índice"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 99"
      DTS:To="Package\Tarea Actualizar estadísticas" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{5C7567D5-CA23-45F2-AC6F-D18DF037DF6F}"
      DTS:EventID="326246432"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="La propiedad de propagación del evento"
          DTS:DTSID="{64A8C4F9-015F-4ED8-8B8D-A397B0A4B73C}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Enviar correo error"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.SendMailTask.SendMailTask, Microsoft.SqlServer.SendMailTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Enviar correo error"
          DTS:Disabled="True"
          DTS:DTSID="{7B953157-88CF-4551-B0DB-CA250C17455A}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.SendMailTask.SendMailTask, Microsoft.SqlServer.SendMailTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Enviar correo error"
          DTS:TaskContact="Send Mail Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="MessageSource">(DT_WSTR, 12) @[System::ErrorCode] + ": " +  @[System::ErrorDescription]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SendMailTask:SendMailTaskData
              SendMailTask:SMTPServer="{B8089F13-B8EC-4DB3-8B55-4F649A16B977}"
              SendMailTask:From="nombre_proyecto@telynet.com"
              SendMailTask:To="soporte_proyecto@telynet.com;jefe_proyecto@telynet.com"
              SendMailTask:Subject="Error procesando STDB"
              SendMailTask:MessageSource="0: " xmlns:SendMailTask="www.microsoft.com/sqlserver/dts/tasks/sendmailtask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Inserta error en core pool mail"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{5a36270b-c84b-4f40-b459-5e3de30b1119}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Inserta error en core pool mail">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
              SQLTask:SqlStatementSource="INSERT INTO core_pool_email&#xA;           ( Code , Bodytext ,Subject ,[From],[To],Status&#xA;           )&#xA;SELECT  &#xA; convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','') AS CODE,&#xA;  'Error en el proceso de inserción de tablas Intermedias a CRM3_CI' AS Bodytext ,  &#xA;  'Error procesando CRM3_CI'  AS SUBJECT ,&#xA;  'soporte-Dominicana@telynet.com' AS [FROM],&#xA;  'ciglesias-dts@telynet.com,fgarcia@telynet.com,rcontreras@telynet.com' AS [TO],&#xA;  '1' AS STATUS&#xA;    WHERE convert(char(6),getdate(),12) + replace(convert(char(8),getdate(),14),':','') &#xA;  NOT IN  (select Code FROM core_pool_email )" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package.EventHandlers[OnError]\Inserta error en log"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{b03a0de4-50b8-43d1-b3c0-6462f413526f}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Inserta error en log">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{DB747C7F-1C9B-402E-8ED6-5BA82E639615}"
              SQLTask:SqlStatementSource="INSERT INTO monitor_log (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, &#xA;Code_Step, Notes, Date_Step, Hour_Step, Process_Id)&#xA;SELECT        Create_User, Create_Date, Modify_User, Modify_Date, Platform, 'I-ERP' AS Code, &#xA;'3' AS Code_Step, '(ImportLite) -' AS Notes,&#xA;LEFT(Create_Date, 8) AS Date_Step, RIGHT(Create_Date, 6) AS Hour_Step, '24' as Process_Id&#xA;FROM            View_System_Fields_ERP;&#xA;&#xA;INSERT INTO monitor_log (Create_User, Create_Date, Modify_User, Modify_Date,  Platform, Code, &#xA;Code_Step, Notes, Date_Step, Hour_Step, Process_Id)&#xA;SELECT        Create_User, Create_Date, Modify_User, Modify_Date, Platform, 'I-ERP' AS Code, &#xA;'2' AS Code_Step, 'Fin con Error Proceso Import ERP ( ImportLite)' AS Notes,&#xA;LEFT(Create_Date, 8) AS Date_Step, RIGHT(Create_Date, 6) AS Hour_Step, '24' as Process_Id&#xA;FROM            View_System_Fields_ERP;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CE6C8B90-5697-4A58-9888-F07C1175864C}"
          DTS:From="Package.EventHandlers[OnError]\Inserta error en log"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package.EventHandlers[OnError]\Inserta error en core pool mail" />
      </DTS:PrecedenceConstraints>
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="512" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph" xmlns:mssge="clr-namespace:Microsoft.SqlServer.Graph.Extended;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
        <NodeLayout
          Size="136,44"
          Id="Package\accounts"
          TopLeft="172.016846361186,1269.31132075472" />
        <NodeLayout
          Size="134,42"
          Id="Package\accounts CI"
          TopLeft="35.016846361186,1325.3679245283" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_addresses"
          TopLeft="1034.65835579515,1448.02830188679" />
        <NodeLayout
          Size="115,44"
          Id="Package\accounts_addresses CI"
          TopLeft="1055.63948787062,1525.87735849057" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation1"
          TopLeft="161.035714285714,190.103773584906" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation1 CI"
          TopLeft="161.035714285714,262.896226415094" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation2"
          TopLeft="333.903638814016,189.915094339623" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation2 CI"
          TopLeft="333.903638814016,264.783018867925" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation3"
          TopLeft="510.809299191374,190.783018867925" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_agrupation3 CI"
          TopLeft="510.771563342318,264.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_array"
          TopLeft="686.356469002695,190.783018867925" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_array CI"
          TopLeft="686.356469002695,265.650943396226" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_function"
          TopLeft="687.18665768194,1269.95283018868" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_function CI"
          TopLeft="687.224393530997,1346.82075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_function CI 1"
          TopLeft="856.922506738544,1346.82075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_org"
          TopLeft="345.983827493261,1268.06132075472" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_org CI"
          TopLeft="345.946091644205,1342.96698113208" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_organization"
          TopLeft="517.589697514226,1268.09905660377" />
        <NodeLayout
          Size="136,44"
          Id="Package\accounts_organization CI"
          TopLeft="518.738544474393,1342.96698113208" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses"
          TopLeft="518.469676549865,1447.99056603774" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses CI"
          TopLeft="518.431940700808,1523.87735849057" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses_org"
          TopLeft="690.205525606469,1448.02830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses_org CI"
          TopLeft="690.167789757412,1524.93396226415" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses_organization"
          TopLeft="861.941374663072,1447.99056603774" />
        <NodeLayout
          Size="136,44"
          Id="Package\addresses_organization CI"
          TopLeft="861.979110512129,1524.89622641509" />
        <NodeLayout
          Size="149,42"
          Id="Package\collecting_type"
          TopLeft="856,2429" />
        <NodeLayout
          Size="136,44"
          Id="Package\collections_pending"
          TopLeft="175.979110512129,2213.1179245283" />
        <NodeLayout
          Size="136,44"
          Id="Package\collections_pending CI"
          TopLeft="27.2369721473493,2263.24371069182" />
        <NodeLayout
          Size="187,43"
          Id="Package\Complemento prj_orders_header"
          TopLeft="83.611111111111,2419.16666666667" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts"
          TopLeft="176.016846361186,1644.82075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts CI"
          TopLeft="175.979110512129,1715.80188679245" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts_accounts"
          TopLeft="520.469676549865,1644.85849056604" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts_accounts CI"
          TopLeft="520.469676549865,1715.7641509434" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts_organization"
          TopLeft="349.790431266846,1644.85849056604" />
        <NodeLayout
          Size="136,44"
          Id="Package\contacts_organization CI"
          TopLeft="349.790431266846,1716.70754716981" />
        <NodeLayout
          Size="136,44"
          Id="Package\core_users"
          TopLeft="172.016846361186,902.632075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\core_users CI"
          TopLeft="172.054582210243,975.575471698113" />
        <NodeLayout
          Size="232,43"
          Id="Package\Corrige errores del cliente en pedidos y cargas"
          TopLeft="659.333333333333,2305.33333333333" />
        <NodeLayout
          Size="143,43"
          Id="Package\corrige hist_header"
          TopLeft="710,1954.33333333333" />
        <NodeLayout
          Size="165,43"
          Id="Package\Corrige prj_orders_header"
          TopLeft="468.512820512821,2332.71794871795" />
        <NodeLayout
          Size="135,42"
          Id="Package\Corrige ruta"
          TopLeft="681.166658980151,1648.19999734998" />
        <NodeLayout
          Size="174,42"
          Id="Package\Corrige Warehouses"
          TopLeft="636.3333187302,1070.59999491692" />
        <NodeLayout
          Size="136,44"
          Id="Package\countries"
          TopLeft="862.997978436657,190.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\countries CI"
          TopLeft="862.997978436657,267.537735849057" />
        <NodeLayout
          Size="171,42"
          Id="Package\equipment_account"
          TopLeft="688.205525606469,2214.14150943396" />
        <NodeLayout
          Size="115,44"
          Id="Package\equipment_account CI"
          TopLeft="922.919603980925,2243.02007740687" />
        <NodeLayout
          Size="136,44"
          Id="Package\equipment_array"
          TopLeft="167.148921832884,530.745283018868" />
        <NodeLayout
          Size="136,44"
          Id="Package\equipment_array CI"
          TopLeft="167.148921832884,605.61320754717" />
        <NodeLayout
          Size="140,43"
          Id="Package\Execute SQL Task"
          TopLeft="24.6666666666667,2668.66666666667" />
        <NodeLayout
          Size="136,44"
          Id="Package\loads_detail"
          TopLeft="346.771563342318,2505.46226415094" />
        <NodeLayout
          Size="136,44"
          Id="Package\loads_head"
          TopLeft="178.054582210243,2505.53773584906" />
        <NodeLayout
          Size="136,44"
          Id="Package\loads_orders"
          TopLeft="518.469676549865,2505.46226415094" />
        <NodeLayout
          Size="136,44"
          Id="Package\Modificación cliente"
          TopLeft="161.542452830189,2607.97439353099" />
        <NodeLayout
          Size="207,42"
          Id="Package\pre_prj_payment_accounts"
          TopLeft="623,2086" />
        <NodeLayout
          Size="136,44"
          Id="Package\Precios Usuario"
          TopLeft="443.575471698113,2611.44272237197" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_account_control"
          TopLeft="176.723045822102,1448.59433962264" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_account_control CI"
          TopLeft="176.798517520216,1524.51886792453" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_accounts_credit"
          TopLeft="856.922506738544,1269.99056603774" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_accounts_organ_credit"
          TopLeft="1029.63948787062,1270.02830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_accounts_organ_credit CI"
          TopLeft="1029.63948787062,1348.82075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_accounts_tax"
          TopLeft="1199.41307277628,1269.95283018868" />
        <NodeLayout
          Size="114,44"
          Id="Package\prj_accounts_tax CI"
          TopLeft="1220.54514824797,1350.82075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_configuration"
          TopLeft="512.469676549865,530.632075471698" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_currency"
          TopLeft="164.997978436658,364.066037735849" />
        <NodeLayout
          Size="117,44"
          Id="Package\prj_currency CI"
          TopLeft="187.828167115903,432.971698113208" />
        <NodeLayout
          Size="124,43"
          Id="Package\prj_des_array"
          TopLeft="517.222222222222,716.833333333333" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_hist_orders_header"
          TopLeft="846.224393530997,2018.06603773585" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_hist_orders_header CI"
          TopLeft="846.148921832884,2091.95283018868" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_hist_orders_lines"
          TopLeft="1021.92250673854,2018.06603773585" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_hist_orders_lines CI"
          TopLeft="1021.9602425876,2091.95283018868" />
        <NodeLayout
          Size="171,42"
          Id="Package\prj_hist_orders_sec"
          TopLeft="1197.65835579514,2018.06603773585" />
        <NodeLayout
          Size="119,44"
          Id="Package\prj_hist_orders_sec CI"
          TopLeft="1254.5640161725,2091.89622641509" />
        <NodeLayout
          Size="152,43"
          Id="Package\prj_hist_orders_status"
          TopLeft="985.666666666667,1070.66666666667" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_orders_header"
          TopLeft="78.441374663073,2330.99842767295" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_orders_lines"
          TopLeft="346.809299191374,2393.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_orders_lines_lots"
          TopLeft="689.29986522911,2393.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_orders_secuences"
          TopLeft="520.545148247978,2393.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_orders_type_user"
          TopLeft="1205.37533692722,902.632075471698" />
        <NodeLayout
          Size="186,42"
          Id="Package\prj_payment_accounts"
          TopLeft="440.777777777778,2171.77777777778" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_payment_terms"
          TopLeft="1033.67722371968,190.594339622642" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_payment_terms CI"
          TopLeft="1033.63948787062,267.424528301887" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_price_list"
          TopLeft="1205.29986522911,190.556603773585" />
        <NodeLayout
          Size="116,44"
          Id="Package\prj_price_list CI"
          TopLeft="1205.41307277628,267.424528301887" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_pricing_tables"
          TopLeft="44.4004986799465,2089.11257733009" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_pricing_tables CI"
          TopLeft="35.8627629426493,2157.0283007245" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_pricing_tables Mantenimiento"
          TopLeft="375.350176739122,1969.58805116681" />
        <NodeLayout
          Size="183,42"
          Id="Package\prj_pricing_tables_esc"
          TopLeft="250.833329595625,2071.73332973798" />
        <NodeLayout
          Size="169,42"
          Id="Package\prj_products_assor"
          TopLeft="703.535714285714,2508" />
        <NodeLayout
          Size="190,42"
          Id="Package\prj_products_assor_det"
          TopLeft="963.535714285714,2336" />
        <NodeLayout
          Size="187,42"
          Id="Package\prj_products_assor_sel"
          TopLeft="1183.53571428571,2343" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_products_control"
          TopLeft="862.922506738544,1827.12264150943" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_products_control CI"
          TopLeft="862.922506738544,1898.02830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_products_tax"
          TopLeft="520.507412398922,1827.12264150943" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_products_tax CI"
          TopLeft="520.507412398922,1898.02830188679" />
        <NodeLayout
          Size="156,43"
          Id="Package\prj_promotions_destiny"
          TopLeft="1203.33333333333,2535.66666666667" />
        <NodeLayout
          Size="179,42"
          Id="Package\prj_promotions_head"
          TopLeft="540.535714285714,2013" />
        <NodeLayout
          Size="195,42"
          Id="Package\prj_promotions_hier_gift"
          TopLeft="1177.82417582417,2630.44230769231" />
        <NodeLayout
          Size="194,42"
          Id="Package\prj_promtions_hierarchy"
          TopLeft="1173.03571428571,2429.5" />
        <NodeLayout
          Size="135,43"
          Id="Package\prj_return_cause"
          TopLeft="512.444444444444,787.777777777778" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_users_control"
          TopLeft="691.18665768194,902.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_users_control CI"
          TopLeft="691.262129380054,978.481132075472" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_users_type_control"
          TopLeft="1038.02942497754,900.447589098533" />
        <NodeLayout
          Size="136,44"
          Id="Package\prj_users_type_control CI"
          TopLeft="1038.02942497754,978.25890985325" />
        <NodeLayout
          Size="136,44"
          Id="Package\products"
          TopLeft="172.016846361186,1826.44339622642" />
        <NodeLayout
          Size="136,44"
          Id="Package\products CI"
          TopLeft="171.979110512129,1896.21698113208" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_array"
          TopLeft="1069.38948787062,365.353773584906" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_array CI"
          TopLeft="1069.46495956873,439.202830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy2"
          TopLeft="865.941374663072,364.028301886793" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy2 CI"
          TopLeft="865.941374663072,437.915094339623" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy3"
          TopLeft="687.224393530997,364.028301886793" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy3 CI"
          TopLeft="687.148921832884,435.952830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy4"
          TopLeft="513.41307277628,364.066037735849" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_hierarchy4 CI"
          TopLeft="513.41307277628,435.009433962264" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_measure"
          TopLeft="690.167789757412,1827.16037735849" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_measure CI"
          TopLeft="690.205525606469,1898.02830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_organization"
          TopLeft="344.994833794987,1826.33144655638" />
        <NodeLayout
          Size="136,44"
          Id="Package\products_organization CI"
          TopLeft="345.865902964959,1898.14150943396" />
        <NodeLayout
          Size="132,42"
          Id="Package\Promotions"
          TopLeft="1207.69230769231,2727" />
        <NodeLayout
          Size="136,44"
          Id="Package\provinces"
          TopLeft="1238.14420485175,365.542452830189" />
        <NodeLayout
          Size="136,44"
          Id="Package\provinces CI"
          TopLeft="1235.60646900269,440.066037735849" />
        <NodeLayout
          Size="136,44"
          Id="Package\route_accounts"
          TopLeft="1202.54514824797,1644.89622641509" />
        <NodeLayout
          Size="113,44"
          Id="Package\route_accounts CI"
          TopLeft="1225.41307277628,1715.83962264151" />
        <NodeLayout
          Size="136,44"
          Id="Package\route_header"
          TopLeft="862.884770889488,1644.89622641509" />
        <NodeLayout
          Size="136,44"
          Id="Package\route_header CI"
          TopLeft="862.771563342318,1715.80188679245" />
        <NodeLayout
          Size="139,42"
          Id="Package\route_sellers"
          TopLeft="1035.63948787062,1644.89622641509" />
        <NodeLayout
          Size="136,44"
          Id="Package\route_sellers CI"
          TopLeft="1035.63948787062,1715.83962264151" />
        <NodeLayout
          Size="136,44"
          Id="Package\sellers"
          TopLeft="168.092318059299,715.160377358491" />
        <NodeLayout
          Size="136,44"
          Id="Package\sellers CI"
          TopLeft="168.092318059299,788.971698113208" />
        <NodeLayout
          Size="152,42"
          Id="Package\Split_Imp_Final"
          TopLeft="686.25,2606.25" />
        <NodeLayout
          Size="136,44"
          Id="Package\Tarea Actualizar estadísticas"
          TopLeft="348.922506738544,2724.44339622642" />
        <NodeLayout
          Size="136,44"
          Id="Package\Tarea Volver a generar índice"
          TopLeft="178.243261455526,2721.90566037736" />
        <NodeLayout
          Size="140,43"
          Id="Package\target_sales_head"
          TopLeft="945.641025641026,2574.61538461538" />
        <NodeLayout
          Size="136,44"
          Id="Package\trucks"
          TopLeft="344.771563342318,1088.29245283019" />
        <NodeLayout
          Size="123,44"
          Id="Package\trucks CI"
          TopLeft="344.696091644205,1160.51257861635" />
        <NodeLayout
          Size="136,44"
          Id="Package\type_unit"
          TopLeft="334.733827493261,364.066037735849" />
        <NodeLayout
          Size="136,44"
          Id="Package\type_unit CI"
          TopLeft="334.658355795148,433.952830188679" />
        <NodeLayout
          Size="136,44"
          Id="Package\type_unit_control"
          TopLeft="1038.65835579515,1827.16037735849" />
        <NodeLayout
          Size="137,44"
          Id="Package\type_unit_control CI"
          TopLeft="1073.56401617251,1901.04716981132" />
        <NodeLayout
          Size="136,44"
          Id="Package\unit_sales_organ_seller"
          TopLeft="340.771563342318,715.047169811321" />
        <NodeLayout
          Size="116,44"
          Id="Package\unit_sales_organ_seller CI"
          TopLeft="346.658355795148,788.858490566038" />
        <NodeLayout
          Size="221,42"
          Id="Package\Update accounts_organization"
          TopLeft="585.555555555556,1162.22222222222" />
        <NodeLayout
          Size="177,42"
          Id="Package\UPDATE ERP_Pricing"
          TopLeft="51.6666658967733,1974.19999688506" />
        <NodeLayout
          Size="204,42"
          Id="Package\Update_Products_Measure"
          TopLeft="875.615384615385,2671.76923076923" />
        <NodeLayout
          Size="136,44"
          Id="Package\users_counter"
          TopLeft="862.997978436657,902.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\users_organizations"
          TopLeft="342.733827493261,902.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\users_organizations CI"
          TopLeft="342.733827493261,976.481132075472" />
        <NodeLayout
          Size="136,44"
          Id="Package\users_organizations_sellers"
          TopLeft="519.488544474393,902.669811320755" />
        <NodeLayout
          Size="136,44"
          Id="Package\users_organizations_sellers CI"
          TopLeft="519.488544474393,976.518867924528" />
        <NodeLayout
          Size="136,44"
          Id="Package\warehouses"
          TopLeft="166.747978436658,1048.05974842767" />
        <NodeLayout
          Size="136,44"
          Id="Package\warehouses CI"
          TopLeft="169.785714285714,1158.88993710692" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="1270.03571428571,2471.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="11.2976190476234,64.1666666666661"
              Start="0,0"
              End="11.2976190476234,56.6666666666661">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.083333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.083333333333"
                    Point2="0,32.083333333333"
                    Point3="4,32.083333333333" />
                  <mssgle:LineSegment
                    End="7.29761904762336,32.083333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="7.29761904762336,32.083333333333"
                    Point2="11.2976190476234,32.083333333333"
                    Point3="11.2976190476234,36.083333333333" />
                  <mssgle:LineSegment
                    End="11.2976190476234,56.6666666666661" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.6556436011883,37.083333333333,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="636.3333187302,1091.59999491692">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-333.585340293542,-27.54024648925"
              Start="0,0"
              End="-326.085340293542,-27.54024648925">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-189.128354906788,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-189.128354906788,0"
                    Point2="-193.128354906788,0"
                    Point3="-193.128354906788,-4" />
                  <mssgle:LineSegment
                    End="-193.128354906788,-23.54024648925" />
                  <mssgle:CubicBezierSegment
                    Point1="-193.128354906788,-23.54024648925"
                    Point2="-193.128354906788,-27.54024648925"
                    Point3="-197.128354906788,-27.54024648925" />
                  <mssgle:LineSegment
                    End="-326.085340293542,-27.54024648925" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-218.432808031788,1,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="1085.32502246182,1871.16037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-641.974845722694,98.4276738083199"
              Start="0,0"
              End="-641.974845722694,90.9276738083199">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.0577742243163" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.0577742243163"
                    Point2="0,40.0577742243163"
                    Point3="-4,40.0577742243163" />
                  <mssgle:LineSegment
                    End="-637.974845722694,40.0577742243163" />
                  <mssgle:CubicBezierSegment
                    Point1="-637.974845722694,40.0577742243163"
                    Point2="-641.974845722694,40.0577742243163"
                    Point3="-641.974845722694,44.0577742243163" />
                  <mssgle:LineSegment
                    End="-641.974845722694,90.9276738083199" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-346.291875986347,45.0577742243163,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="1069.38948787062,386.691037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-67.4481132075484,0"
              Start="0,0"
              End="-59.9481132075484,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-59.9481132075484,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.2785097287742,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="686.25,2630.34636118599">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-106.674528301887,0"
              Start="0,0"
              End="-99.174528301887,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-99.174528301887,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-74.8917172759435,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="1255.99168912847,2060.06603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-529.491689128473,25.9339622641501"
              Start="0,0"
              End="-529.491689128473,18.4339622641501">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,6.51782942346757" />
                  <mssgle:CubicBezierSegment
                    Point1="0,6.51782942346757"
                    Point2="0,10.5178294234676"
                    Point3="-4,10.5178294234676" />
                  <mssgle:LineSegment
                    End="-525.491689128473,10.5178294234676" />
                  <mssgle:CubicBezierSegment
                    Point1="-525.491689128473,10.5178294234676"
                    Point2="-529.491689128473,10.5178294234676"
                    Point3="-529.491689128473,14.5178294234676" />
                  <mssgle:LineSegment
                    End="-529.491689128473,18.4339622641501" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-290.050297689237,15.5178294234676,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="440.777777777778,2192.77777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-128.798667265649,36.34014675052"
              Start="0,0"
              End="-121.298667265649,36.34014675052">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-70.5676494695863,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-70.5676494695863,0"
                    Point2="-74.5676494695863,0"
                    Point3="-74.5676494695863,4" />
                  <mssgle:LineSegment
                    End="-74.5676494695863,32.34014675052" />
                  <mssgle:CubicBezierSegment
                    Point1="-74.5676494695863,32.34014675052"
                    Point2="-74.5676494695863,36.34014675052"
                    Point3="-78.5676494695863,36.34014675052" />
                  <mssgle:LineSegment
                    End="-121.298667265649,36.34014675052" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-99.8721025945863,-17.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 15]"
          TopLeft="585.589697514226,1268.09905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="74.9658580413297,-63.8768343815477"
              Start="0,0"
              End="74.9658580413297,-56.3768343815477">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-34.050621019736" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-34.050621019736"
                    Point2="0,-38.050621019736"
                    Point3="4,-38.050621019736" />
                  <mssgle:LineSegment
                    End="70.9658580413297,-38.050621019736" />
                  <mssgle:CubicBezierSegment
                    Point1="70.9658580413297,-38.050621019736"
                    Point2="74.9658580413297,-38.050621019736"
                    Point3="74.9658580413297,-42.050621019736" />
                  <mssgle:LineSegment
                    End="74.9658580413297,-56.3768343815477" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="12.1784758956648,-33.050621019736,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 16]"
          TopLeft="731.555555555556,1204.22222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="23.6311021263843,65.7306079664579"
              Start="0,0"
              End="23.6311021263843,58.2306079664579">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5757175066541" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5757175066541"
                    Point2="0,26.5757175066541"
                    Point3="4,26.5757175066541" />
                  <mssgle:LineSegment
                    End="19.6311021263843,26.5757175066541" />
                  <mssgle:CubicBezierSegment
                    Point1="19.6311021263843,26.5757175066541"
                    Point2="23.6311021263843,26.5757175066541"
                    Point3="23.6311021263843,30.5757175066541" />
                  <mssgle:LineSegment
                    End="23.6311021263843,58.2306079664579" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.4889020618079,31.5757175066541,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 17]"
          TopLeft="757.29986522911,2437.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-511.245283018867,68.03773584906"
              Start="0,0"
              End="-511.245283018867,60.53773584906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.01886792453" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.01886792453"
                    Point2="0,34.01886792453"
                    Point3="-4,34.01886792453" />
                  <mssgle:LineSegment
                    End="-507.245283018867,34.01886792453" />
                  <mssgle:CubicBezierSegment
                    Point1="-507.245283018867,34.01886792453"
                    Point2="-511.245283018867,34.01886792453"
                    Point3="-511.245283018867,38.01886792453" />
                  <mssgle:LineSegment
                    End="-511.245283018867,60.53773584906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 18]"
          TopLeft="977.615384615385,2671.76923076923">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="38.0256410256411,-54.4871794871797"
              Start="0,0"
              End="38.0256410256411,-46.9871794871797">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-23.2435897435898" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-23.2435897435898"
                    Point2="0,-27.2435897435898"
                    Point3="4,-27.2435897435898" />
                  <mssgle:LineSegment
                    End="34.0256410256411,-27.2435897435898" />
                  <mssgle:CubicBezierSegment
                    Point1="34.0256410256411,-27.2435897435898"
                    Point2="38.0256410256411,-27.2435897435898"
                    Point3="38.0256410256411,-31.2435897435898" />
                  <mssgle:LineSegment
                    End="38.0256410256411,-46.9871794871797" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 19]"
          TopLeft="930.666666666667,2429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="97.5357142857141,-51"
              Start="0,0"
              End="97.5357142857141,-43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-26.3444676409186" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-26.3444676409186"
                    Point2="0,-30.3444676409186"
                    Point3="4,-30.3444676409186" />
                  <mssgle:LineSegment
                    End="93.5357142857141,-30.3444676409186" />
                  <mssgle:CubicBezierSegment
                    Point1="93.5357142857141,-30.3444676409186"
                    Point2="97.5357142857141,-30.3444676409186"
                    Point3="97.5357142857141,-34.3444676409186" />
                  <mssgle:LineSegment
                    End="97.5357142857141,-43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="23.4634040178571,-25.3444676409186,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="180.400498679947,2111.11257733009">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="70.4328309156789,-18.3792475921041"
              Start="0,0"
              End="62.9328309156789,-18.3792475921041">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.2164154578394,0" />
                  <mssgle:CubicBezierSegment
                    Point1="31.2164154578394,0"
                    Point2="35.2164154578394,0"
                    Point3="35.2164154578394,-4" />
                  <mssgle:LineSegment
                    End="35.2164154578394,-14.3792475921041" />
                  <mssgle:CubicBezierSegment
                    Point1="35.2164154578394,-14.3792475921041"
                    Point2="35.2164154578394,-18.3792475921041"
                    Point3="39.2164154578394,-18.3792475921041" />
                  <mssgle:LineSegment
                    End="62.9328309156789,-18.3792475921041" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="9.9119623328394,1,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 20]"
          TopLeft="1207.69230769231,2748">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-128.076923076923,-55.2307692307695"
              Start="0,0"
              End="-120.576923076923,-55.2307692307695">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-60.0384615384615,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-60.0384615384615,0"
                    Point2="-64.0384615384615,0"
                    Point3="-64.0384615384615,-4" />
                  <mssgle:LineSegment
                    End="-64.0384615384615,-51.2307692307695" />
                  <mssgle:CubicBezierSegment
                    Point1="-64.0384615384615,-51.2307692307695"
                    Point2="-64.0384615384615,-55.2307692307695"
                    Point3="-68.0384615384615,-55.2307692307695" />
                  <mssgle:LineSegment
                    End="-120.576923076923,-55.2307692307695" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-89.3429146634615,1,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 21]"
          TopLeft="726.5,2128">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-192.722222222222,43.7777777777801"
              Start="0,0"
              End="-192.722222222222,36.2777777777801">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.8888888888901" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.8888888888901"
                    Point2="0,21.8888888888901"
                    Point3="-4,21.8888888888901" />
                  <mssgle:LineSegment
                    End="-188.722222222222,21.8888888888901" />
                  <mssgle:CubicBezierSegment
                    Point1="-188.722222222222,21.8888888888901"
                    Point2="-192.722222222222,21.8888888888901"
                    Point3="-192.722222222222,25.8888888888901" />
                  <mssgle:LineSegment
                    End="-192.722222222222,36.2777777777801" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-121.665564236111,26.8888888888901,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 22]"
          TopLeft="172.016846361186,1291.31132075472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-70,34.0566037735798"
              Start="0,0"
              End="-70,26.5566037735798">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-66,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-66,0"
                    Point2="-70,0"
                    Point3="-70,4" />
                  <mssgle:LineSegment
                    End="-70,26.5566037735798" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-95.304453125,-17.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 23]"
          TopLeft="656.469676549865,1668.02924395801">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="24.6969824302861,0"
              Start="0,0"
              End="17.1969824302861,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.1969824302861,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-16.705961909857,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 24]"
          TopLeft="816.499992313484,1668.04811188253">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="46.3847785760036,0"
              Start="0,0"
              End="38.8847785760036,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38.8847785760036,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.8620638369982,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 25]"
          TopLeft="434.166662928959,2092.73332973798">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="106.369051356755,-58.733329737981"
              Start="0,0"
              End="98.8690513567552,-58.733329737981">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.1845256783776,0" />
                  <mssgle:CubicBezierSegment
                    Point1="49.1845256783776,0"
                    Point2="53.1845256783776,0"
                    Point3="53.1845256783776,-4" />
                  <mssgle:LineSegment
                    End="53.1845256783776,-54.733329737981" />
                  <mssgle:CubicBezierSegment
                    Point1="53.1845256783776,-54.733329737981"
                    Point2="53.1845256783776,-58.733329737981"
                    Point3="57.1845256783776,-58.733329737981" />
                  <mssgle:LineSegment
                    End="98.8690513567552,-58.733329737981" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="27.8800725533776,1,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 26]"
          TopLeft="375.350176739122,1993.39402402594">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-147.016844175682,0"
              Start="0,0"
              End="-139.516844175682,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-139.516844175682,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-95.062875212841,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 27]"
          TopLeft="139.999999230107,2016.19999688506">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-27.5995005501601,72.9125804450237"
              Start="0,0"
              End="-27.5995005501601,65.4125804450237">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.4562902225118" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.4562902225118"
                    Point2="0,36.4562902225118"
                    Point3="-4,36.4562902225118" />
                  <mssgle:LineSegment
                    End="-23.5995005501601,36.4562902225118" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.5995005501601,36.4562902225118"
                    Point2="-27.5995005501601,36.4562902225118"
                    Point3="-27.5995005501601,40.4562902225118" />
                  <mssgle:LineSegment
                    End="-27.5995005501601,65.4125804450237" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-39.1042034000801,41.4562902225118,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 28]"
          TopLeft="1273.37533692722,946.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-211.708670260553,124.034591194968"
              Start="0,0"
              End="-211.708670260553,116.534591194968">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.0172955974842" />
                  <mssgle:CubicBezierSegment
                    Point1="0,58.0172955974842"
                    Point2="0,62.0172955974842"
                    Point3="-4,62.0172955974842" />
                  <mssgle:LineSegment
                    End="-207.708670260553,62.0172955974842" />
                  <mssgle:CubicBezierSegment
                    Point1="-207.708670260553,62.0172955974842"
                    Point2="-211.708670260553,62.0172955974842"
                    Point3="-211.708670260553,66.0172955974842" />
                  <mssgle:LineSegment
                    End="-211.708670260553,116.534591194968" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 29]"
          TopLeft="774.436096136568,2256.14150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,49.191823899373"
              Start="0,0"
              End="0,41.691823899373">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.691823899373" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="629.869047619047,2013">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="80.1309523809525,-37.3333333333335"
              Start="0,0"
              End="72.6309523809525,-37.3333333333335">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-33.3333333333335" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-33.3333333333335"
                    Point2="0,-37.3333333333335"
                    Point3="4,-37.3333333333335" />
                  <mssgle:LineSegment
                    End="72.6309523809525,-37.3333333333335" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="13.0110230654762,-32.3333333333335,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 30]"
          TopLeft="468.512820512821,2353.52485486212">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-254.071445849748,0"
              Start="0,0"
              End="-246.571445849748,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-246.571445849748,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 31]"
          TopLeft="852.666666666667,1975.66666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="61.5577268643304,42.3993710691834"
              Start="0,0"
              End="61.5577268643304,34.8993710691834">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="57.5577268643304,0" />
                  <mssgle:CubicBezierSegment
                    Point1="57.5577268643304,0"
                    Point2="61.5577268643304,0"
                    Point3="61.5577268643304,4" />
                  <mssgle:LineSegment
                    End="61.5577268643304,34.8993710691834" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="36.2532737393304,-17.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 32]"
          TopLeft="985.666666666667,1091.79999745846">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-175.333347936467,0"
              Start="0,0"
              End="-167.833347936467,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-167.833347936467,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 33]"
          TopLeft="476.771563342318,737.606918238994">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="40.4506588799036,0"
              Start="0,0"
              End="32.9506588799036,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.9506588799036,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.8291236850482,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 34]"
          TopLeft="580.111111111111,830.444444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-340.094264749925,72.1876310272537"
              Start="0,0"
              End="-340.094264749925,64.6876310272537">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.0938155136269" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.0938155136269"
                    Point2="0,36.0938155136269"
                    Point3="-4,36.0938155136269" />
                  <mssgle:LineSegment
                    End="-336.094264749925,36.0938155136269" />
                  <mssgle:CubicBezierSegment
                    Point1="-336.094264749925,36.0938155136269"
                    Point2="-340.094264749925,36.0938155136269"
                    Point3="-340.094264749925,40.0938155136269" />
                  <mssgle:LineSegment
                    End="-340.094264749925,64.6876310272537" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-195.351585499963,41.0938155136269,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 35]"
          TopLeft="146.441374663073,2374.99842767295">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="30.5030697813713,44.1682389937137"
              Start="0,0"
              End="30.5030697813713,36.6682389937137">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.0841194968568" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.0841194968568"
                    Point2="0,22.0841194968568"
                    Point3="4,22.0841194968568" />
                  <mssgle:LineSegment
                    End="26.5030697813713,22.0841194968568" />
                  <mssgle:CubicBezierSegment
                    Point1="26.5030697813713,22.0841194968568"
                    Point2="30.5030697813713,22.0841194968568"
                    Point3="30.5030697813713,26.0841194968568" />
                  <mssgle:LineSegment
                    End="30.5030697813713,36.6682389937137" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 36]"
          TopLeft="270.277777777778,2440.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="76.5315214135964,-25"
              Start="0,0"
              End="69.0315214135964,-25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="34.2657607067982,0" />
                  <mssgle:CubicBezierSegment
                    Point1="34.2657607067982,0"
                    Point2="38.2657607067982,0"
                    Point3="38.2657607067982,-4" />
                  <mssgle:LineSegment
                    End="38.2657607067982,-21" />
                  <mssgle:CubicBezierSegment
                    Point1="38.2657607067982,-21"
                    Point2="38.2657607067982,-25"
                    Point3="42.2657607067982,-25" />
                  <mssgle:LineSegment
                    End="69.0315214135964,-25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 37]"
          TopLeft="945.641025641026,2595.94871794872">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-107.391025641026,31.3012820512822"
              Start="0,0"
              End="-99.8910256410256,31.3012820512822">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-49.6955128205128,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-49.6955128205128,0"
                    Point2="-53.6955128205128,0"
                    Point3="-53.6955128205128,4" />
                  <mssgle:LineSegment
                    End="-53.6955128205128,27.3012820512822" />
                  <mssgle:CubicBezierSegment
                    Point1="-53.6955128205128,27.3012820512822"
                    Point2="-53.6955128205128,31.3012820512822"
                    Point3="-57.6955128205128,31.3012820512822" />
                  <mssgle:LineSegment
                    End="-99.8910256410256,31.3012820512822" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 38]"
          TopLeft="579.666666666666,759.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,28.2777777777779"
              Start="0,0"
              End="0,20.7777777777779">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7777777777779" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,4.58420138888895,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 39]"
          TopLeft="659.333333333333,2326.66666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-25.4871794871792,27.3846153846139"
              Start="0,0"
              End="-17.9871794871792,27.3846153846139">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-8.74358974358961,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-8.74358974358961,0"
                    Point2="-12.7435897435896,0"
                    Point3="-12.7435897435896,4" />
                  <mssgle:LineSegment
                    End="-12.7435897435896,23.3846153846139" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.7435897435896,23.3846153846139"
                    Point2="-12.7435897435896,27.3846153846139"
                    Point3="-16.7435897435896,27.3846153846139" />
                  <mssgle:LineSegment
                    End="-17.9871794871792,27.3846153846139" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="654.469676549865,2528.23113207547">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="49.066037735849,0"
              Start="0,0"
              End="41.566037735849,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.566037735849,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 40]"
          TopLeft="161.542452830189,2629.97439353099">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-66.8757861635223,38.6922731356772"
              Start="0,0"
              End="-66.8757861635223,31.1922731356772">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-62.8757861635223,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-62.8757861635223,0"
                    Point2="-66.8757861635223,0"
                    Point3="-66.8757861635223,4" />
                  <mssgle:LineSegment
                    End="-66.8757861635223,31.1922731356772" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 41]"
          TopLeft="164.666666666667,2690">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="81.5765947888594,31.9056603773597"
              Start="0,0"
              End="81.5765947888594,24.4056603773597">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="77.5765947888594,0" />
                  <mssgle:CubicBezierSegment
                    Point1="77.5765947888594,0"
                    Point2="81.5765947888594,0"
                    Point3="81.5765947888594,4" />
                  <mssgle:LineSegment
                    End="81.5765947888594,24.4056603773597" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 42]"
          TopLeft="1123.99168912848,1492.02830188679">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-11.01886792453,33.8490566037801"
              Start="0,0"
              End="-11.01886792453,26.3490566037801">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.77577885037565" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.77577885037565"
                    Point2="0,13.7757788503756"
                    Point3="-4,13.7757788503756" />
                  <mssgle:LineSegment
                    End="-7.01886792453001,13.7757788503756" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.01886792453001,13.7757788503756"
                    Point2="-11.01886792453,13.7757788503756"
                    Point3="-11.01886792453,17.7757788503756" />
                  <mssgle:LineSegment
                    End="-11.01886792453,26.3490566037801" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.813887087265,18.7757788503756,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 43]"
          TopLeft="175.979110512129,2235.1179245283">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-80.7421383647797,28.1257861635236"
              Start="0,0"
              End="-80.7421383647797,20.6257861635236">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-76.7421383647797,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-76.7421383647797,0"
                    Point2="-80.7421383647797,0"
                    Point3="-80.7421383647797,4" />
                  <mssgle:LineSegment
                    End="-80.7421383647797,20.6257861635236" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-106.04659148978,-17.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 44]"
          TopLeft="1291.8784815813,1688.89622641509">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-9.7987421383566,26.94339622642"
              Start="0,0"
              End="-9.7987421383566,19.44339622642">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,6.96533567354302" />
                  <mssgle:CubicBezierSegment
                    Point1="0,6.96533567354302"
                    Point2="0,10.965335673543"
                    Point3="-4,10.965335673543" />
                  <mssgle:LineSegment
                    End="-5.7987421383566,10.965335673543" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.7987421383566,10.965335673543"
                    Point2="-9.7987421383566,10.965335673543"
                    Point3="-9.7987421383566,14.965335673543" />
                  <mssgle:LineSegment
                    End="-9.7987421383566,19.44339622642" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="788.035714285714,2508">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="118.964285714286,-37"
              Start="0,0"
              End="118.964285714286,-29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-17.9641434262948" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-17.9641434262948"
                    Point2="0,-21.9641434262948"
                    Point3="4,-21.9641434262948" />
                  <mssgle:LineSegment
                    End="114.964285714286,-21.9641434262948" />
                  <mssgle:CubicBezierSegment
                    Point1="114.964285714286,-21.9641434262948"
                    Point2="118.964285714286,-21.9641434262948"
                    Point3="118.964285714286,-25.9641434262948" />
                  <mssgle:LineSegment
                    End="118.964285714286,-29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="34.177689732143,-16.9641434262948,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="1153.53571428571,2360.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="29.9999999999959,0"
              Start="0,0"
              End="22.4999999999959,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.4999999999959,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-14.0544531250021,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="1273.45238095238,2385">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,44.5"
              Start="0,0"
              End="0,37">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,12.6953125,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="1278.24542124542,2578.33333333334">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,52.108974358971"
              Start="0,0"
              End="0,44.608974358971">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.608974358971" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,16.4997996794855,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="1274.42490842491,2672.44230769231">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,54.5576923076924"
              Start="0,0"
              End="0,47.0576923076924">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.0576923076924" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-25.304453125,17.7241586538462,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción]"
          TopLeft="228.922506738544,234.028301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,28.867924528302"
              Start="0,0"
              End="0,21.367924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.367924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,2.683962264151,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 1]"
          TopLeft="296.809299191374,212.066037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="37.0943396226415,-0.188679245282856"
              Start="0,0"
              End="29.5943396226415,-0.188679245282856">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.5283018867924,0" />
                  <mssgle:LineSegment
                    End="18.5283018867924,-0.188679245282856" />
                  <mssgle:LineSegment
                    End="29.5943396226415,-0.188679245282856" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.7761512382076,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 10]"
          TopLeft="1101.56401617251,234.518867924528">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566166,32.9056603773585"
              Start="0,0"
              End="-0.0377358490566166,25.4056603773585">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4528301886792" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,16.4528301886792" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,25.4056603773585" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.01886792452831,21.4528301886792,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 101]"
          TopLeft="112.400498679947,2133.11257733009">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-8.53773573729721,23.9157233944143"
              Start="0,0"
              End="-8.53773573729721,16.4157233944143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.95786169720714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.95786169720714"
                    Point2="0,11.9578616972071"
                    Point3="-4,11.9578616972071" />
                  <mssgle:LineSegment
                    End="-4.53773573729721,11.9578616972071" />
                  <mssgle:CubicBezierSegment
                    Point1="-4.53773573729721,11.9578616972071"
                    Point2="-8.53773573729721,11.9578616972071"
                    Point3="-8.53773573729721,15.9578616972071" />
                  <mssgle:LineSegment
                    End="-8.53773573729721,16.4157233944143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-12.2688678686486,16.9578616972071,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 103]"
          TopLeft="914.073450134771,2061.99056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.9622641509436"
              Start="0,0"
              End="0,22.4622641509436">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4622641509436" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.2311320754718,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 104]"
          TopLeft="981.997978436657,2040.02830188679">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.9245283018868,0"
              Start="0,0"
              End="32.4245283018868,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.4245283018868,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-9.0921889740566,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 105]"
          TopLeft="1089.8281671159,2061.99056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.9622641509436"
              Start="0,0"
              End="0,22.4622641509436">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4622641509436" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.2311320754718,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 106]"
          TopLeft="1157.92250673854,2039.56603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.7358490565996,0"
              Start="0,0"
              End="32.2358490565996,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.2358490565996,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-9.1865285967002,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 107]"
          TopLeft="1312.19451931716,2060.06603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,31.8301886792401"
              Start="0,0"
              End="0,24.3301886792401">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.3301886792401" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.16509433962005,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 11]"
          TopLeft="1169.45080862533,212.556603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.8490566037735,-0.0377358490566166"
              Start="0,0"
              End="28.3490566037735,-0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.9245283018868,0" />
                  <mssgle:LineSegment
                    End="17.9245283018868,-0.0377358490566166" />
                  <mssgle:LineSegment
                    End="28.3490566037735,-0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.3799248231132,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 110]"
          TopLeft="311.979110512129,2235.12971698113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="376.22641509434,0"
              Start="0,0"
              End="368.72641509434,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="368.72641509434,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="159.05875442217,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 111]"
          TopLeft="858.872192273136,2235.14150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="64.0474117077894,29.8785679729067"
              Start="0,0"
              End="56.5474117077894,29.8785679729067">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.0237058538947,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28.0237058538947,0"
                    Point2="32.0237058538947,0"
                    Point3="32.0237058538947,4" />
                  <mssgle:LineSegment
                    End="32.0237058538947,25.8785679729067" />
                  <mssgle:CubicBezierSegment
                    Point1="32.0237058538947,25.8785679729067"
                    Point2="32.0237058538947,29.8785679729067"
                    Point3="36.0237058538947,29.8785679729067" />
                  <mssgle:LineSegment
                    End="56.5474117077894,29.8785679729067" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="24.0237058538947,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 116]"
          TopLeft="482.582884097035,2415.46226415094">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="37.9622641509434,0"
              Start="0,0"
              End="30.4622641509434,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.4622641509434,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 118]"
          TopLeft="656.318733153639,2415.46226415094">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="32.9811320754717,0"
              Start="0,0"
              End="25.4811320754717,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.4811320754717,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 12]"
          TopLeft="1252.4319407008,234.481132075472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="10.867924528302,32.9433962264151"
              Start="0,0"
              End="10.867924528302,25.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.7169811320754" />
                  <mssgle:LineSegment
                    End="10.867924528302,24.7169811320754" />
                  <mssgle:LineSegment
                    End="10.867924528302,25.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-2.566037735849,29.7169811320754,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 121]"
          TopLeft="313.828167115903,2527.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="32.9433962264151,-0.0754716981132333"
              Start="0,0"
              End="25.4433962264151,-0.0754716981132333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.4528301886793,0" />
                  <mssgle:LineSegment
                    End="16.4528301886793,-0.0754716981132333" />
                  <mssgle:LineSegment
                    End="25.4433962264151,-0.0754716981132333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 122]"
          TopLeft="482.545148247978,2527.42452830189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.9245283018868,0"
              Start="0,0"
              End="28.4245283018868,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.4245283018868,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 124]"
          TopLeft="443.575471698113,2631.70855795148">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-146.033018867924,0"
              Start="0,0"
              End="-138.533018867924,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-138.533018867924,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-94.570962558962,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 13]"
          TopLeft="1304.87533692722,409.542452830189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.52358490566"
              Start="0,0"
              End="0,23.02358490566">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.02358490566" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.51179245283,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 14]"
          TopLeft="1294.63319856245,234.556603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="11.5110062893073,130.985849056604"
              Start="0,0"
              End="11.5110062893073,123.485849056604">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.3081943835017" />
                  <mssgle:CubicBezierSegment
                    Point1="0,49.3081943835017"
                    Point2="0,53.3081943835017"
                    Point3="4,53.3081943835017" />
                  <mssgle:LineSegment
                    End="7.51100628930726,53.3081943835017" />
                  <mssgle:CubicBezierSegment
                    Point1="7.51100628930726,53.3081943835017"
                    Point2="11.5110062893073,53.3081943835017"
                    Point3="11.5110062893073,57.3081943835017" />
                  <mssgle:LineSegment
                    End="11.5110062893073,123.485849056604" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.5489499803464,58.3081943835017,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 15]"
          TopLeft="1238.14420485175,387.410377358491">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-32.9811320754718,0"
              Start="0,0"
              End="-25.4811320754718,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-25.4811320754718,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-38.0450191627359,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 16]"
          TopLeft="1137.31401617251,409.278301886793">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.9245283018868"
              Start="0,0"
              End="0,22.4245283018868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4245283018868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.2122641509434,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 18]"
          TopLeft="933.828167115903,407.952830188679">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.9622641509434"
              Start="0,0"
              End="0,22.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.2311320754717,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 19]"
          TopLeft="865.941374663072,385.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-42.9433962264151,0"
              Start="0,0"
              End="-35.4433962264151,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-35.4433962264151,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-43.0261512382076,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 2]"
          TopLeft="401.790431266846,233.83962264151">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.9433962264151"
              Start="0,0"
              End="0,23.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.72169811320755,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 20]"
          TopLeft="755.111185983827,407.952830188679">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0754716981132333,28"
              Start="0,0"
              End="-0.0754716981132333,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14" />
                  <mssgle:LineSegment
                    End="-0.0754716981132333,14" />
                  <mssgle:LineSegment
                    End="-0.0754716981132333,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.03773584905662,19,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 21]"
          TopLeft="687.224393530997,385.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-38.0377358490566,0.0377358490566166"
              Start="0,0"
              End="-30.5377358490566,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-19.0188679245283,0" />
                  <mssgle:LineSegment
                    End="-19.0188679245283,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="-30.5377358490566,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-44.3233210495283,-21.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 22]"
          TopLeft="581.29986522911,407.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,27.0188679245283"
              Start="0,0"
              End="0,19.5188679245283">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5188679245283" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.75943396226415,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 23]"
          TopLeft="513.41307277628,386.028301886793">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-42.9056603773585,0"
              Start="0,0"
              End="-35.4056603773585,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-35.4056603773585,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-43.0072833136793,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 24]"
          TopLeft="402.620619946091,407.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0754716981132049,25.9622641509434"
              Start="0,0"
              End="-0.0754716981132049,18.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.9811320754717" />
                  <mssgle:LineSegment
                    End="-0.0754716981132049,12.9811320754717" />
                  <mssgle:LineSegment
                    End="-0.0754716981132049,18.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.0377358490566,17.9811320754717,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 25]"
          TopLeft="253.63948787062,407.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-7.39622641509434,24.9811320754717"
              Start="0,0"
              End="-7.39622641509434,17.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.7547169811321" />
                  <mssgle:LineSegment
                    End="-7.39622641509434,18.7547169811321" />
                  <mssgle:LineSegment
                    End="-7.39622641509434,17.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-11.6981132075472,23.7547169811321,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 26]"
          TopLeft="334.733827493261,386.028301886793">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-33.9622641509434,0"
              Start="0,0"
              End="-26.4622641509434,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-26.4622641509434,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-38.5355852004717,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 27]"
          TopLeft="235.035714285714,574.669811320755">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.9433962264151"
              Start="0,0"
              End="0,23.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 28]"
          TopLeft="170.620619946092,407.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="64.4150943396226,122.754716981132"
              Start="0,0"
              End="64.4150943396226,115.254716981132">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,92.0754716981132" />
                  <mssgle:LineSegment
                    End="64.4150943396226,92.0754716981132" />
                  <mssgle:LineSegment
                    End="64.4150943396226,115.254716981132" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="6.9030940448113,97.0754716981132,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 29]"
          TopLeft="302.922506738544,552.707547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="209.547169811321,-0.11320754716985"
              Start="0,0"
              End="202.047169811321,-0.11320754716985">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="104.754716981132,0" />
                  <mssgle:LineSegment
                    End="104.754716981132,-0.11320754716985" />
                  <mssgle:LineSegment
                    End="202.047169811321,-0.11320754716985" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="79.450263856132,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 3]"
          TopLeft="469.677223719676,211.877358490566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="41.1320754716981,0.867924528301728"
              Start="0,0"
              End="33.6320754716981,0.867924528301728">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.5660377358491,0" />
                  <mssgle:LineSegment
                    End="20.5660377358491,0.867924528301728" />
                  <mssgle:LineSegment
                    End="33.6320754716981,0.867924528301728" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.7384153891509,-21.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 30]"
          TopLeft="580.356469002695,574.556603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-344.377358490566,140.603773584906"
              Start="0,0"
              End="-344.377358490566,133.103773584906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,91.0566037735849" />
                  <mssgle:LineSegment
                    End="-344.377358490566,91.0566037735849" />
                  <mssgle:LineSegment
                    End="-344.377358490566,133.103773584906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-197.493132370283,96.0566037735849,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 31]"
          TopLeft="235.979110512129,759.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.8867924528302"
              Start="0,0"
              End="0,22.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.1933962264151,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 32]"
          TopLeft="303.865902964959,737.122641509434">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.9056603773585,-0.11320754716985"
              Start="0,0"
              End="29.4056603773585,-0.11320754716985">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.4528301886793,0" />
                  <mssgle:LineSegment
                    End="18.4528301886793,-0.11320754716985" />
                  <mssgle:LineSegment
                    End="29.4056603773585,-0.11320754716985" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.8516229363207,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 33]"
          TopLeft="408.658355795148,758.971698113208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-4.11320754716979,29.8867924528302"
              Start="0,0"
              End="-4.11320754716979,22.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4150943396227" />
                  <mssgle:LineSegment
                    End="-4.11320754716979,22.4150943396227" />
                  <mssgle:LineSegment
                    End="-4.11320754716979,22.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.0566037735849,27.4150943396227,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 34]"
          TopLeft="1174.63948787062,1666.39622641509">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="27.9056603773499,0"
              Start="0,0"
              End="20.4056603773499,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.4056603773499,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.1016229363251,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 35]"
          TopLeft="930.771563342318,1688.82075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.11320754716985,26.9811320754717"
              Start="0,0"
              End="-0.11320754716985,19.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.4716981132075" />
                  <mssgle:LineSegment
                    End="-0.11320754716985,13.4716981132075" />
                  <mssgle:LineSegment
                    End="-0.11320754716985,19.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.05660377358493,18.4716981132075,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 36]"
          TopLeft="998.884770889488,1666.39622641509">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.7547169811321,0"
              Start="0,0"
              End="29.2547169811321,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.2547169811321,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.677094634434,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 37]"
          TopLeft="1104.38948787062,1686.89622641509">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,28.94339622642"
              Start="0,0"
              End="0,21.44339622642">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.44339622642" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,2.72169811321,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 39]"
          TopLeft="239.903638814016,946.556603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.0377358490566024,29.0188679245283"
              Start="0,0"
              End="0.0377358490566024,21.5188679245283">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.5283018867924" />
                  <mssgle:LineSegment
                    End="0.0377358490566024,14.5283018867924" />
                  <mssgle:LineSegment
                    End="0.0377358490566024,21.5188679245283" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.9811320754717,19.5283018867924,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 4]"
          TopLeft="578.696091644205,234.707547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566166,29.9622641509435"
              Start="0,0"
              End="-0.0377358490566166,22.4622641509435">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.9811320754718" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,14.9811320754718" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,22.4622641509435" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.01886792452831,19.9811320754718,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 41]"
          TopLeft="307.790431266846,924.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.9433962264151,0.0377358490566166"
              Start="0,0"
              End="27.4433962264151,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.4716981132076,0" />
                  <mssgle:LineSegment
                    End="17.4716981132076,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="27.4433962264151,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.8327550117924,-21.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 42]"
          TopLeft="410.620619946091,946.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.8867924528302"
              Start="0,0"
              End="0,22.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.1933962264151,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 43]"
          TopLeft="478.507412398922,924.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="40.9811320754717,0"
              Start="0,0"
              End="33.4811320754717,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="33.4811320754717,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.56388708726415,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 44]"
          TopLeft="587.375336927223,946.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,29.9245283018868"
              Start="0,0"
              End="0,22.4245283018868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4245283018868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.2122641509434,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 45]"
          TopLeft="655.262129380054,924.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.9245283018868,0"
              Start="0,0"
              End="28.4245283018868,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.4245283018868,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-11.0921889740566,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 46]"
          TopLeft="759.073450134771,946.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.0754716981132333,31.8867924528302"
              Start="0,0"
              End="0.0754716981132333,24.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.9622641509434" />
                  <mssgle:LineSegment
                    End="0.0754716981132333,15.9622641509434" />
                  <mssgle:LineSegment
                    End="0.0754716981132333,24.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.96226415094338,20.9622641509434,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 47]"
          TopLeft="826.960242587601,924.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.0377358490566,0"
              Start="0,0"
              End="28.5377358490566,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.5377358490566,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-11.0355852004717,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 48]"
          TopLeft="1105.91621743037,944.37211740042">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,33.8867924528302"
              Start="0,0"
              End="0,26.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,5.1933962264151,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 49]"
          TopLeft="998.997978436657,923.558700209644">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.0314465408861,0"
              Start="0,0"
              End="31.5314465408861,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.5314465408861,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-9.53872985455695,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 5]"
          TopLeft="646.582884097035,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.7735849056604,0"
              Start="0,0"
              End="32.2735849056604,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.2735849056604,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-9.1676606721698,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 50]"
          TopLeft="1174.02942497754,923.539832285115">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="31.3459119496767,0"
              Start="0,0"
              End="23.8459119496767,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="23.8459119496767,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.3814971501617,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 52]"
          TopLeft="236.266846361186,1092.05974842767">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,66.8301886792453"
              Start="0,0"
              End="0,59.3301886792453">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.3301886792453" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,21.6650943396227,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 54]"
          TopLeft="302.747978436658,1076.05974842767">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="42.02358490566,34.2327044025167"
              Start="0,0"
              End="34.52358490566,34.2327044025167">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="13.6941410129095,0" />
                  <mssgle:CubicBezierSegment
                    Point1="13.6941410129095,0"
                    Point2="17.6941410129095,0"
                    Point3="17.6941410129095,4" />
                  <mssgle:LineSegment
                    End="17.6941410129095,30.2327044025167" />
                  <mssgle:CubicBezierSegment
                    Point1="17.6941410129095,30.2327044025167"
                    Point2="17.6941410129095,34.2327044025167"
                    Point3="21.6941410129095,34.2327044025167" />
                  <mssgle:LineSegment
                    End="34.52358490566,34.2327044025167" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.6103121120905,-17.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 55]"
          TopLeft="434.104896675651,1132.29245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-27.9088050314463,28.2201257861634"
              Start="0,0"
              End="-27.9088050314463,20.7201257861634">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.48493491297348" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.48493491297348"
                    Point2="0,11.4849349129735"
                    Point3="-4,11.4849349129735" />
                  <mssgle:LineSegment
                    End="-23.9088050314463,11.4849349129735" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.9088050314463,11.4849349129735"
                    Point2="-27.9088050314463,11.4849349129735"
                    Point3="-27.9088050314463,15.4849349129735" />
                  <mssgle:LineSegment
                    End="-27.9088050314463,20.7201257861634" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-21.9544025157231,16.4849349129735,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 56]"
          TopLeft="308.016846361186,1290.68632075472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="37.9669811320755,0"
              Start="0,0"
              End="30.4669811320755,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.4669811320755,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.0709625589623,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 57]"
          TopLeft="413.851752021563,1311.9858490566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.9811320754718"
              Start="0,0"
              End="0,23.4811320754718">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4811320754718" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.7405660377359,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 58]"
          TopLeft="586.16412099431,1312.09905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.8679245283101"
              Start="0,0"
              End="0,23.3679245283101">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.3679245283101" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.68396226415505,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 59]"
          TopLeft="481.983827493261,1290.08018867925">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.6058700209649,0"
              Start="0,0"
              End="28.1058700209649,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.1058700209649,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-11.2515181145176,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 6]"
          TopLeft="754.243261455525,234.707547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,30.9433962264152"
              Start="0,0"
              End="0,23.4433962264152">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.4433962264152" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,3.7216981132076,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 60]"
          TopLeft="474.922506738544,1132.21698113208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-235.018867924528,137.094339622642"
              Start="0,0"
              End="-235.018867924528,129.594339622642">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,86.3773584905661" />
                  <mssgle:LineSegment
                    End="-235.018867924528,86.3773584905661" />
                  <mssgle:LineSegment
                    End="-235.018867924528,129.594339622642" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-142.813887087264,91.3773584905661,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 62]"
          TopLeft="755.073450134771,1313.87735849057">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.0377358490566166,32.9433962264151"
              Start="0,0"
              End="0.0377358490566166,25.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4528301886792" />
                  <mssgle:LineSegment
                    End="0.0377358490566166,16.4528301886792" />
                  <mssgle:LineSegment
                    End="0.0377358490566166,25.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.98113207547169,21.4528301886792,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 63]"
          TopLeft="822.960242587601,1291.91509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="33.9622641509434,0.0377358490566024"
              Start="0,0"
              End="26.4622641509434,0.0377358490566024">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.9811320754717,0" />
                  <mssgle:LineSegment
                    End="16.9811320754717,0.0377358490566024" />
                  <mssgle:LineSegment
                    End="26.4622641509434,0.0377358490566024" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.3233210495283,-21.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 64]"
          TopLeft="924.809299191374,1313.91509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,32.9056603773585"
              Start="0,0"
              End="0,25.4056603773585">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.4056603773585" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.70283018867925,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 65]"
          TopLeft="992.696091644205,1291.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.9433962264151,0.0377358490566024"
              Start="0,0"
              End="29.4433962264151,0.0377358490566024">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.4528301886793,0" />
                  <mssgle:LineSegment
                    End="18.4528301886793,0.0377358490566024" />
                  <mssgle:LineSegment
                    End="29.4433962264151,0.0377358490566024" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.8516229363207,-21.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 66]"
          TopLeft="1097.52628032345,1313.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,34.8679245283019"
              Start="0,0"
              End="0,27.3679245283019">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.3679245283019" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,5.68396226415095,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 67]"
          TopLeft="1165.41307277628,1291.99056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34,-0.0754716981132049"
              Start="0,0"
              End="26.5,-0.0754716981132049">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.9811320754717,0" />
                  <mssgle:LineSegment
                    End="16.9811320754717,-0.0754716981132049" />
                  <mssgle:LineSegment
                    End="26.5,-0.0754716981132049" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.3233210495283,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 68]"
          TopLeft="1288.05458221024,1313.87735849057">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-10.6415094339623,36.9433962264151"
              Start="0,0"
              End="-10.6415094339623,29.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6981132075472" />
                  <mssgle:LineSegment
                    End="-10.6415094339623,27.6981132075472" />
                  <mssgle:LineSegment
                    End="-10.6415094339623,29.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.3207547169811,32.6981132075472,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 69]"
          TopLeft="244.647574123989,1492.51886792453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.25,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 7]"
          TopLeft="822.130053908356,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="40.8679245283018,-0.113207547169623"
              Start="0,0"
              End="33.3679245283018,-0.113207547169623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.4150943396226,0" />
                  <mssgle:LineSegment
                    End="20.4150943396226,-0.113207547169623" />
                  <mssgle:LineSegment
                    End="33.3679245283018,-0.113207547169623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-4.8893587853774,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 70]"
          TopLeft="1246.07973944295,1313.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-1001.35669362085,134.64150943396"
              Start="0,0"
              End="-1001.35669362085,127.14150943396">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.795963141728" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.795963141728"
                    Point2="0,54.795963141728"
                    Point3="-4,54.795963141728" />
                  <mssgle:LineSegment
                    End="-997.356693620849,54.795963141728" />
                  <mssgle:CubicBezierSegment
                    Point1="-997.356693620849,54.795963141728"
                    Point2="-1001.35669362085,54.795963141728"
                    Point3="-1001.35669362085,58.795963141728" />
                  <mssgle:LineSegment
                    End="-1001.35669362085,127.14150943396" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-525.982799935425,59.795963141728,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 71]"
          TopLeft="312.723045822102,1470.29245283019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="205.746630727763,0"
              Start="0,0"
              End="198.246630727763,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="198.246630727763,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="73.8188622388815,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 72]"
          TopLeft="586.356469002695,1491.91509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566166,31.9622641509434"
              Start="0,0"
              End="-0.0377358490566166,24.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.9622641509434" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,15.9622641509434" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,24.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.01886792452831,20.9622641509434,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 73]"
          TopLeft="758.092318059299,1491.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566166,32.9811320754717"
              Start="0,0"
              End="-0.0377358490566166,25.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4905660377358" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,16.4905660377358" />
                  <mssgle:LineSegment
                    End="-0.0377358490566166,25.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.01886792452831,21.4905660377358,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 74]"
          TopLeft="654.243261455525,1469.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.9622641509434,0.0377358490566166"
              Start="0,0"
              End="28.4622641509434,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.9622641509434,0" />
                  <mssgle:LineSegment
                    End="17.9622641509434,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="28.4622641509434,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.3421889740566,-21.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 75]"
          TopLeft="825.979110512129,1469.99056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="35.9622641509434,-0.0377358490566166"
              Start="0,0"
              End="28.4622641509434,-0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.9622641509434,0" />
                  <mssgle:LineSegment
                    End="17.9622641509434,-0.0377358490566166" />
                  <mssgle:LineSegment
                    End="28.4622641509434,-0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.3421889740566,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 76]"
          TopLeft="929.828167115903,1491.91509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.037735849056503,32.9811320754717"
              Start="0,0"
              End="0.037735849056503,25.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.4905660377358" />
                  <mssgle:LineSegment
                    End="0.037735849056503,16.4905660377358" />
                  <mssgle:LineSegment
                    End="0.037735849056503,25.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.98113207547175,21.4905660377358,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 77]"
          TopLeft="997.714959568733,1469.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.9433962264151,0.0377358490566166"
              Start="0,0"
              End="29.4433962264151,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.4528301886793,0" />
                  <mssgle:LineSegment
                    End="18.4528301886793,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="29.4433962264151,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.8516229363207,-21.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 79]"
          TopLeft="243.903638814016,1688.74528301887">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566024,27.0566037735849"
              Start="0,0"
              End="-0.0377358490566024,19.5566037735849">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.5094339622642" />
                  <mssgle:LineSegment
                    End="-0.0377358490566024,13.5094339622642" />
                  <mssgle:LineSegment
                    End="-0.0377358490566024,19.5566037735849" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.0188679245283,18.5094339622642,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 8]"
          TopLeft="930.884770889488,234.594339622642">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,32.943396226415"
              Start="0,0"
              End="0,25.443396226415">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.443396226415" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,4.7216981132075,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 80]"
          TopLeft="1040.28099730458,1491.95283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-796.377358490566,152.867924528302"
              Start="0,0"
              End="-796.377358490566,145.367924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,103.320754716981" />
                  <mssgle:LineSegment
                    End="-796.377358490566,103.320754716981" />
                  <mssgle:LineSegment
                    End="-796.377358490566,145.367924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-423.493132370283,108.320754716981,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 81]"
          TopLeft="311.790431266846,1666.78301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="38,0.0377358490566166"
              Start="0,0"
              End="30.5,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.9811320754717,0" />
                  <mssgle:LineSegment
                    End="18.9811320754717,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="30.5,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.3233210495283,-21.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 82]"
          TopLeft="417.677223719676,1688.78301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,27.9245283018868"
              Start="0,0"
              End="0,20.4245283018868">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4245283018868" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,2.2122641509434,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 83]"
          TopLeft="485.564016172506,1666.82075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.9056603773585,0"
              Start="0,0"
              End="27.4056603773585,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.4056603773585,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-11.6016229363208,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 84]"
          TopLeft="588.356469002695,1688.78301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,26.9811320754717"
              Start="0,0"
              End="0,19.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.74056603773585,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 86]"
          TopLeft="239.903638814016,1870.3679245283">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-0.0377358490566024,25.8490566037735"
              Start="0,0"
              End="-0.0377358490566024,18.3490566037735">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.9056603773585" />
                  <mssgle:LineSegment
                    End="-0.0377358490566024,12.9056603773585" />
                  <mssgle:LineSegment
                    End="-0.0377358490566024,18.3490566037735" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.0188679245283,17.9056603773585,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 87]"
          TopLeft="1208.16778975741,1688.82075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-968.264150943396,137.622641509434"
              Start="0,0"
              End="-968.264150943396,130.122641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,90.1132075471698" />
                  <mssgle:LineSegment
                    End="-968.264150943396,90.1132075471698" />
                  <mssgle:LineSegment
                    End="-968.264150943396,130.122641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-509.436528596698,95.1132075471698,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 88]"
          TopLeft="308.016846361186,1848.3874213914">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.9779874338013,0"
              Start="0,0"
              End="29.4779874338013,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.4779874338013,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-10.5654594080994,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 89]"
          TopLeft="413.430368379973,1870.33144655638">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,27.8100628775794"
              Start="0,0"
              End="0,20.3100628775794">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3100628775794" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,2.1550314387897,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 9]"
          TopLeft="998.771563342318,212.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.9056603773585,-0.0754716981132333"
              Start="0,0"
              End="27.4056603773585,-0.0754716981132333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.4339622641509,0" />
                  <mssgle:LineSegment
                    End="17.4339622641509,-0.0754716981132333" />
                  <mssgle:LineSegment
                    End="27.4056603773585,-0.0754716981132333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.8704908608491,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 90]"
          TopLeft="480.994833794987,1848.72704403291">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.5125786039347,0"
              Start="0,0"
              End="32.0125786039347,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="32.0125786039347,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-9.29816382303265,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 91]"
          TopLeft="588.394204851752,1871.04716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,26.9811320754717"
              Start="0,0"
              End="0,19.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.74056603773585,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 92]"
          TopLeft="656.280997304582,1849.08490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="33.8867924528302,0.0377358490566166"
              Start="0,0"
              End="26.3867924528302,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.9433962264151,0" />
                  <mssgle:LineSegment
                    End="16.9433962264151,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="26.3867924528302,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8.3610568985849,-21.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 93]"
          TopLeft="758.054582210242,1871.08490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0.0377358490566166,26.9433962264151"
              Start="0,0"
              End="0.0377358490566166,19.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.4716981132075" />
                  <mssgle:LineSegment
                    End="0.0377358490566166,13.4716981132075" />
                  <mssgle:LineSegment
                    End="0.0377358490566166,19.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-7.98113207547169,18.4716981132075,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 94]"
          TopLeft="825.941374663072,1849.12264150943">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="36.9811320754717,-0.0377358490566166"
              Start="0,0"
              End="29.4811320754717,-0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="18.4905660377359,0" />
                  <mssgle:LineSegment
                    End="18.4905660377359,-0.0377358490566166" />
                  <mssgle:LineSegment
                    End="29.4811320754717,-0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-6.8138870872641,5,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 95]"
          TopLeft="930.809299191374,1871.04716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,26.9811320754717"
              Start="0,0"
              End="0,19.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-8,1.74056603773585,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 96]"
          TopLeft="998.696091644205,1849.08490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="39.9622641509434,0.0377358490566166"
              Start="0,0"
              End="32.4622641509434,0.0377358490566166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.9622641509434,0" />
                  <mssgle:LineSegment
                    End="19.9622641509434,0.0377358490566166" />
                  <mssgle:LineSegment
                    End="32.4622641509434,0.0377358490566166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-5.3421889740566,-21.609375,50.60890625,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 97]"
          TopLeft="1148.05458221024,1871.08490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="-6.11320754716985,29.9622641509434"
              Start="0,0"
              End="-6.11320754716985,22.4622641509434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.4528301886792" />
                  <mssgle:LineSegment
                    End="-6.11320754716985,22.4528301886792" />
                  <mssgle:LineSegment
                    End="-6.11320754716985,22.4622641509434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-11.0566037735849,27.4528301886792,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 99]"
          TopLeft="314.243261455526,2745.17452830189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="34.679245283018,0"
              Start="0,0"
              End="27.179245283018,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="27.179245283018,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Pricing (7)"
          ParentId="Package"
          Size="97,38"
          Id="241f395e-e75d-4b3e-9adc-d48a842a6f09"
          TopLeft="264.120619834332,2031.77421303062">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Productos (6)"
          ParentId="Package"
          Size="92,51"
          Id="c625e857-1b26-48be-accb-1942fcef6d00"
          TopLeft="259.375336927223,1798.93396226415">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Contactos (6)"
          ParentId="Package"
          Size="110,38"
          Id="66fc35d3-a6ea-4592-a3a6-43199196d3b1"
          TopLeft="263.41307277628,1611.31132075472">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Pedidos de reparto (9)"
          ParentId="Package"
          Size="226,38"
          Id="0c4350e1-533c-44d1-bfc9-551212e0e626"
          TopLeft="259.073450134771,2365.53301886792">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Cargas de Reparto y Autoventa (10)"
          ParentId="Package"
          Size="178,51"
          Id="808ade22-157c-4d2f-a0ce-7f5d52e6249a"
          TopLeft="256.809299191374,2469.53773584906">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Post-procesos (11)"
          ParentId="Package"
          Size="100,51"
          Id="bf8175de-8cc3-450a-becc-39b5fedc198c"
          TopLeft="324.663746630728,2574.37870619946">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Reindexación y Estadísticas"
          ParentId="Package"
          Size="155,51"
          Id="fb4f9dc6-cc06-4776-a1df-c228aaa777b3"
          TopLeft="260.092318059299,2683.42452830189">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Existe la variable @Reindexar con valores Y (reindexamos y regeneramos estadísticas) y N (no)&#xA;La reindexación y regeneración de estadísticas se recomiendo hacerlo al menos una vez a la semana&#xA;Se puede hacer todas las noches, pero no constantemente ya que afecta al rendimiento de la BD"
          ParentId="Package"
          Size="499,105"
          Id="b91284cb-5fca-4f23-a040-1ff6d6705ef0"
          TopLeft="559.63948787062,2723.2358490566">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Equipos de frío (9)"
          ParentId="Package"
          Size="110,51"
          Id="1937d239-f6b1-46b7-81a9-05f57ca70734"
          TopLeft="687.41307277628,2181.04716981132">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Historico de Pedidos (8)"
          ParentId="Package"
          Size="136,51"
          Id="43f9b13e-597a-45c9-ab37-13bf57e3eae9"
          TopLeft="846.073450134771,1994.66981132075">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Cobros Pendientes (9)"
          ParentId="Package"
          Size="138,51"
          Id="3edf53f0-1105-423d-9d15-193c3a409d0b"
          TopLeft="254.054582210243,2176.82075471698">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="- Es bastante normal que la Deuda pendiente se envíe &#xA;siempre como carga inicial&#xA;- Existe una variable, @CargaDeuda, que indica si la Deuda &#xA;se envía como Carga Inicial (I) o de Mantenimiento (M)&#xA;- El Paso de CI se ejecuta si la Deuda es Carga Inicial "
          ParentId="Package"
          Size="294,102"
          Id="181252f2-e805-4111-b224-3406e263bda3"
          TopLeft="315.767209205888,2241.24455732946">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Carga de Tablas Maestras de Hydra"
          ParentId="Package"
          Size="488,52"
          Id="c4b104d7-4054-40cf-8601-83c1bc6e96fe"
          TopLeft="763.903638814016,7.9528301886794">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="23.25"
              Color="#FF080000"
              Weight="Bold">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection>
                  <av:TextDecoration
                    Location="Underline" />
                </av:TextDecorationCollection>
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Rutas (6)"
          ParentId="Package"
          Size="105,38"
          Id="c536c42f-3044-40f9-b896-7bb18fa0ab93"
          TopLeft="883.488544474393,1610.51886792453">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Vendedores (2)"
          ParentId="Package"
          Size="113,38"
          Id="77616b83-9958-4de8-ac90-0e3a2c90d623"
          TopLeft="255.564016172506,684.632075471698">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Configuración Organización (1)"
          ParentId="Package"
          Size="226,38"
          Id="193517ab-fea7-4333-a80f-a9e6775a8bc5"
          TopLeft="514.167789757412,502.933962264151">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Existe una variable global, @TipoCarga, que indica si es carga inicial (I) o de mantenimiento (M)"
          ParentId="Package"
          Size="483,37"
          Id="1dd10b75-2fae-4e1f-8ccc-87b1c29b1fd6"
          TopLeft="765.790431266846,56.3301886792453">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Tablas descriptoras (1)"
          ParentId="Package"
          Size="226,38"
          Id="b4ec35e0-c291-43b3-bbe7-415bb304a16b"
          TopLeft="178.696091644205,160.179245283019">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Los pasos básicos en cada proceso son&#xA;&#xA;- INSERT de datos nuevo&#xA;- UPDATE de datos modificados&#xA;- DELETE de datos de baja&#xA;- Quitar DELETE (datos que estaban de baja y los recibimos de nuevo)&#xA;- DELETE Carga Inicial (se borran los datos que no se han recibido)"
          ParentId="Package"
          Size="343,127"
          Id="f57cc703-856a-4445-9120-e50347644406"
          TopLeft="175.714959568733,35.4622641509434">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Las tablas tienen que cargarse en el orden indicado para no tener problemas con la integridad referencial"
          ParentId="Package"
          Size="508,37"
          Id="3ffafabe-c4a4-4bcf-b970-db148b10a464"
          TopLeft="177.714959568733,5.5">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Los paso con NOMBRE_TABLA CI solamente se ejecutan si es una carga inicial"
          ParentId="Package"
          Size="458,37"
          Id="7d0fcc33-e94b-460f-9786-f26f9cf398c9"
          TopLeft="763.790431266846,73.3113207547171">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Direcciones (6)"
          ParentId="Package"
          Size="81,51"
          Id="c06fe20b-d576-4bf5-a4d0-2902b2555a3c"
          TopLeft="530.496630727763,1421.2358490566">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Usuarios (3)"
          ParentId="Package"
          Size="85,51"
          Id="babf7784-2c2c-4f5d-a262-8cde59a68967"
          TopLeft="282.870619946091,858.056603773585">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Almacenes y Camiones (4)"
          ParentId="Package"
          Size="156,51"
          Id="f12d12e3-ac66-4485-961d-d686e69c2073"
          TopLeft="351.337601078167,1034.33018867925">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Cuentas (5)"
          ParentId="Package"
          Size="95,38"
          Id="52025ece-d910-4765-8f7c-fe8254dd4ac1"
          TopLeft="283.229110512129,1226.58018867925">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Tahoma"
              Size="11.25"
              Color="#FF080000">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
        <AnnotationLayout
          Text="Existen 3 variables @TipoCarga, @CargaDeuta y @Reindexar que se cargan con las variables&#xA; @TipoCargaT , @CargaDeutaT y @ReindexarT de la DTS ImportLite"
          ParentId="Package"
          Size="477,50"
          Id="1db426cf-f362-48ed-9a2a-7dbd71af00c1"
          TopLeft="765.29986522911,100.556603773585">
          <AnnotationLayout.FontInfo>
            <mssge:FontInfo
              Family="Times New Roman"
              Size="11.25"
              Color="#FF080000"
              Style="Italic">
              <mssge:FontInfo.TextDecorations>
                <av:TextDecorationCollection />
              </mssge:FontInfo.TextDecorations>
            </mssge:FontInfo>
          </AnnotationLayout.FontInfo>
        </AnnotationLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="136,44"
          Id="Package.EventHandlers[OnError]\Enviar correo error"
          TopLeft="5.5,5.5" />
        <NodeLayout
          Size="177,43"
          Id="Package.EventHandlers[OnError]\Inserta error en core pool mail"
          TopLeft="265.5,116.166666666667" />
        <NodeLayout
          Size="141,43"
          Id="Package.EventHandlers[OnError]\Inserta error en log"
          TopLeft="5.5,109.5" />
        <EdgeLayout
          Id="Package.EventHandlers[OnError].PrecedenceConstraints[Constraint]"
          TopLeft="146.833333333333,134.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="118.666666666667,0"
              Start="0,0"
              End="111.166666666667,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="111.166666666667,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>